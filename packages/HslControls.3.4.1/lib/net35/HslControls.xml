<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HslControls</name>
    </assembly>
    <members>
        <member name="T:HslControls.Advanced.HslChinaMap">
            <summary>
            中国地图控件
            </summary>
        </member>
        <member name="M:HslControls.Advanced.HslChinaMap.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="M:HslControls.Advanced.HslChinaMap.OnLoad(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.Advanced.HslChinaMap.OnMouseLeave(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.Advanced.HslChinaMap.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.Advanced.HslChinaMap.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.Advanced.HslChinaMap.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="P:HslControls.Advanced.HslChinaMap.ShowRiversAndLakes">
            <summary>
            获取或设置是否显示河流及湖泊
            </summary>
        </member>
        <member name="P:HslControls.Advanced.HslChinaMap.ShowCities">
            <summary>
            获取或设置是否城市的信息
            </summary>
        </member>
        <member name="P:HslControls.Advanced.HslChinaMap.CanMouseMoveHighlight">
            <summary>
            获取或设置鼠标移动到省时进行背景高亮显示
            </summary>
        </member>
        <member name="P:HslControls.Advanced.HslChinaMap.ProvinceColor">
            <summary>
            获取或设置全部省份的背景颜色信息
            </summary>
        </member>
        <member name="P:HslControls.Advanced.HslChinaMap.ProvinceMoveColor">
            <summary>
            获取或设置省份的移动背景颜色信息
            </summary>
        </member>
        <member name="M:HslControls.Advanced.HslChinaMap.SetProvinceBackColor(System.String,System.Drawing.Color)">
            <summary>
            设置所有的省份的背景颜色信息
            </summary>
            <param name="name">省份的名称，只需要输入关键字，例如新疆，甘肃，陕西，广西，浙江，台湾</param>
            <param name="color">背景色</param>
        </member>
        <member name="M:HslControls.Advanced.HslChinaMap.MarkCity(System.String[],System.Int32[],System.Drawing.Color[])">
            <summary>
            标记城市信息，不能为空，且长度一致
            </summary>
            <param name="city">城市名称</param>
            <param name="markSize">标记大小</param>
            <param name="markColor">标记颜色</param>
        </member>
        <member name="M:HslControls.Advanced.HslChinaMap.MarkCityClear">
            <summary>
            清除城市的所有标记
            </summary>
        </member>
        <member name="M:HslControls.Advanced.HslChinaMap.MarkRandomTest">
            <summary>
            标记测试数据
            </summary>
        </member>
        <member name="M:HslControls.Advanced.HslChinaMap.DrawLineAndImage(System.Drawing.Graphics,System.Drawing.Point,System.Drawing.Point,System.Single,System.Drawing.Bitmap,System.Boolean)">
            <summary>
            绘制一条虚线，并且在虚线的中间位置，画一个image的图形，需要自己指定虚线的出发点，结束点，中间百分比的位置，图形，是否跟随地图缩放
            </summary>
            <param name="g">画刷句柄</param>
            <param name="start">起始的坐标点</param>
            <param name="finish">结束的坐标点</param>
            <param name="percent">当前路径的百分比</param>
            <param name="image">图形信息</param>
            <param name="noScale">是否跟随地图缩放</param>
        </member>
        <member name="M:HslControls.Advanced.HslChinaMap.DrawLineAndImage(System.Drawing.Graphics,System.String,System.String,System.Single,System.Drawing.Bitmap,System.Boolean)">
            <summary>
            绘制一条虚线，并且在虚线的中间位置，画一个image的图形，需要自己指定虚线的出发城市，结束城市，中间百分比的位置，图形，是否跟随地图缩放
            </summary>
            <param name="g">画刷句柄</param>
            <param name="startCity">起始的城市</param>
            <param name="finishCity">结束的城市</param>
            <param name="percent">中间百分比</param>
            <param name="image">图形</param>
            <param name="noScale">是否跟随地图缩放</param>
        </member>
        <member name="T:HslControls.Advanced.HslCity">
            <summary>
            城市信息
            </summary>
        </member>
        <member name="M:HslControls.Advanced.HslCity.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="P:HslControls.Advanced.HslCity.Name">
            <summary>
            城市的名称
            </summary>
        </member>
        <member name="P:HslControls.Advanced.HslCity.Degree">
            <summary>
            城市等级，0：首都  1：省会（直辖市）  2：地级市
            </summary>
        </member>
        <member name="P:HslControls.Advanced.HslCity.Location">
            <summary>
            城市的位置
            </summary>
        </member>
        <member name="P:HslControls.Advanced.HslCity.ShowLocation">
            <summary>
            0是右下角，1是右上角
            </summary>
        </member>
        <member name="P:HslControls.Advanced.HslCity.Size">
            <summary>
            显示的大小
            </summary>
        </member>
        <member name="P:HslControls.Advanced.HslCity.MarkSize">
            <summary>
            标记的大小信息
            </summary>
        </member>
        <member name="P:HslControls.Advanced.HslCity.MarkBrush">
            <summary>
            标记的颜色信息
            </summary>
        </member>
        <member name="T:HslControls.Advanced.HslFigureBase">
            <summary>
            图形元素的基础
            </summary>
        </member>
        <member name="M:HslControls.Advanced.HslFigureBase.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="P:HslControls.Advanced.HslFigureBase.FigureId">
            <inheritdoc cref="P:HslControls.Advanced.IHslFigure.FigureId"/>
        </member>
        <member name="P:HslControls.Advanced.HslFigureBase.FigureType">
            <inheritdoc cref="P:HslControls.Advanced.IHslFigure.FigureType"/>
        </member>
        <member name="P:HslControls.Advanced.HslFigureBase.Name">
            <inheritdoc cref="P:HslControls.Advanced.IHslFigure.Name"/>
        </member>
        <member name="P:HslControls.Advanced.HslFigureBase.Location">
            <inheritdoc cref="P:HslControls.Advanced.IHslFigure.Location"/>
        </member>
        <member name="P:HslControls.Advanced.HslFigureBase.Width">
            <inheritdoc cref="P:HslControls.Advanced.IHslFigure.Width"/>
        </member>
        <member name="P:HslControls.Advanced.HslFigureBase.Height">
            <inheritdoc cref="P:HslControls.Advanced.IHslFigure.Height"/>
        </member>
        <member name="P:HslControls.Advanced.HslFigureBase.Selected">
            <inheritdoc cref="P:HslControls.Advanced.IHslFigure.Selected"/>
        </member>
        <member name="M:HslControls.Advanced.HslFigureBase.GetMiddleDatum">
            <inheritdoc cref="M:HslControls.Advanced.IHslFigure.GetMiddleDatum"/>
        </member>
        <member name="M:HslControls.Advanced.HslFigureBase.IsMouseIn(System.Drawing.PointF)">
            <inheritdoc cref="M:HslControls.Advanced.IHslFigure.IsMouseIn(System.Drawing.PointF)"/>
        </member>
        <member name="M:HslControls.Advanced.HslFigureBase.DrawCadFigure(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Single)">
            <inheritdoc cref="M:HslControls.Advanced.IHslFigure.DrawCadFigure(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Single)"/>
        </member>
        <member name="T:HslControls.Advanced.HslPathFigure">
            <summary>
            基于一个封闭的路径的图形元素
            </summary>
        </member>
        <member name="M:HslControls.Advanced.HslPathFigure.#ctor(System.Drawing.Point[][])">
            <summary>
            实例化一个默认的对象
            </summary>
            <param name="points">包含的点位信息</param>
        </member>
        <member name="M:HslControls.Advanced.HslPathFigure.IsMouseIn(System.Drawing.PointF)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.Advanced.HslPathFigure.DrawCadFigure(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Single)">
            <inheritdoc/>
        </member>
        <member name="P:HslControls.Advanced.HslPathFigure.FigureBackBrush">
            <summary>
            获取或设置图形当前的背景颜色
            </summary>
        </member>
        <member name="P:HslControls.Advanced.HslPathFigure.FigureSelectdBrush">
            <summary>
            获取或设置图形当前选中时候的背景颜色
            </summary>
        </member>
        <member name="P:HslControls.Advanced.HslPathFigure.PenBorder">
            <summary>
            获取或设置当前图形元素的边界画笔
            </summary>
        </member>
        <member name="T:HslControls.Advanced.IHslFigure">
            <summary>
            图形元素的接口信息，定义了具有什么样子功能和行为
            </summary>
        </member>
        <member name="P:HslControls.Advanced.IHslFigure.FigureId">
            <summary>
            当前图形的唯一ID信息
            </summary>
        </member>
        <member name="P:HslControls.Advanced.IHslFigure.FigureType">
            <summary>
            获取或设置当前图形元素的类型
            </summary>
        </member>
        <member name="P:HslControls.Advanced.IHslFigure.Name">
            <summary>
            当前的图形的名称
            </summary>
        </member>
        <member name="P:HslControls.Advanced.IHslFigure.Location">
            <summary>
            当前图形的位置信息
            </summary>
        </member>
        <member name="P:HslControls.Advanced.IHslFigure.Width">
            <summary>
            当前元素的宽度信息，默认100
            </summary>
        </member>
        <member name="P:HslControls.Advanced.IHslFigure.Height">
            <summary>
            当前元素的高度信息，默认100
            </summary>
        </member>
        <member name="P:HslControls.Advanced.IHslFigure.Selected">
            <summary>
            当前的图形对象是否处于选择
            </summary>
        </member>
        <member name="M:HslControls.Advanced.IHslFigure.IsMouseIn(System.Drawing.PointF)">
            <summary>
            判断光标是否处于当前的图形元素里面
            </summary>
            <param name="cursor">光标的位置信息，是光标原始的图形坐标的位置</param>
            <returns>是否包含当前的位置</returns>
        </member>
        <member name="M:HslControls.Advanced.IHslFigure.GetMiddleDatum">
            <summary>
            获取当前图形的中间基准线，需要在子类里进行重写
            </summary>
        </member>
        <member name="M:HslControls.Advanced.IHslFigure.DrawCadFigure(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Single)">
            <summary>
            绘制当前的图形元素的核心方法
            </summary>
            <param name="g">绘制的画刷</param>
            <param name="themeColor">主题颜色</param>
            <param name="backColor">主背景色</param>
            <param name="font">字体信息</param>
            <param name="scale">当前的缩放信息</param>
        </member>
        <member name="T:HslControls.Advanced.NoBoundaryControl">
            <summary>
            无界控件信息
            </summary>
        </member>
        <member name="M:HslControls.Advanced.NoBoundaryControl.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="M:HslControls.Advanced.NoBoundaryControl.OnLoad(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.Advanced.NoBoundaryControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.Advanced.NoBoundaryControl.OnMouseLeave(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.Advanced.NoBoundaryControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.Advanced.NoBoundaryControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.Advanced.NoBoundaryControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.Advanced.NoBoundaryControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.Advanced.NoBoundaryControl.ActualToControlPoint(System.Drawing.Point)">
            <summary>
            将实际的坐标做换成控件的坐标
            </summary>
            <param name="point">实际的坐标</param>
            <returns>控件坐标</returns>
        </member>
        <member name="M:HslControls.Advanced.NoBoundaryControl.ControlToActualPoint(System.Drawing.Point)">
            <summary>
            将控件的坐标转换成实际的坐标
            </summary>
            <param name="point">控件坐标</param>
            <returns>实际坐标</returns>
        </member>
        <member name="M:HslControls.Advanced.NoBoundaryControl.GraphicsTransform(System.Drawing.Graphics)">
            <summary>
            变换当前的图形到当前的缩放及偏移位置
            </summary>
            <param name="g">画图的对象</param>
        </member>
        <member name="M:HslControls.Advanced.NoBoundaryControl.ResetGraphicsTransform(System.Drawing.Graphics)">
            <summary>
            重置当前的图形变换操作
            </summary>
            <param name="g">画图的对象</param>
        </member>
        <member name="M:HslControls.Advanced.NoBoundaryControl.SetScales(System.Single[],System.Int32)">
            <summary>
            设置支持的缩放等级及当前的缩放等级索引
            </summary>
            <param name="scales">缩放等级</param>
            <param name="index">当前的缩放索引</param>
        </member>
        <member name="M:HslControls.Advanced.NoBoundaryControl.GetScales">
            <summary>
            获取当前的缩放系数
            </summary>
            <returns>缩放系数</returns>
        </member>
        <member name="M:HslControls.Advanced.NoBoundaryControl.DrawImage(System.Drawing.Graphics,System.Drawing.Point,System.Drawing.Bitmap,System.Boolean,System.Single)">
            <summary>
            绘制指定的image对象到指定的位置，指定是否随地图缩放，旋转角度
            </summary>
            <param name="g">画刷句柄</param>
            <param name="location">位置</param>
            <param name="image">图形</param>
            <param name="noScale">是否缩放</param>
            <param name="angle">旋转角度</param>
        </member>
        <member name="P:HslControls.Advanced.NoBoundaryControl.GraphicColor">
            <summary>
            用来显示画布的颜色
            </summary>
        </member>
        <member name="P:HslControls.Advanced.NoBoundaryControl.ZoomEnable">
            <summary>
            获取或设置当前的控件是否允许缩放功能
            </summary>
        </member>
        <member name="P:HslControls.Advanced.NoBoundaryControl.TranslationEnable">
            <summary>
            获取或设置当前的控件是否允许平移功能
            </summary>
        </member>
        <member name="P:HslControls.Advanced.NoBoundaryControl.ForeColor">
            <summary>
            获取或设置控件的前景色
            </summary>
        </member>
        <member name="P:HslControls.Advanced.NoBoundaryControl.OffsetX">
            <summary>
            获取或设置当前的控件的X轴的偏移信息
            </summary>
        </member>
        <member name="P:HslControls.Advanced.NoBoundaryControl.OffsetY">
            <summary>
            获取或设置当前的控件的Y轴的偏移信息
            </summary>
        </member>
        <member name="F:HslControls.Advanced.NoBoundaryControl.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.Advanced.NoBoundaryControl.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.Advanced.NoBoundaryControl.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.Authorization">
            <summary>
            系统的授权类
            </summary>
        </member>
        <member name="M:HslControls.Authorization.#ctor">
            <summary>
            示例化一个默认的对象
            </summary>
        </member>
        <member name="M:HslControls.Authorization.#cctor">
            <summary>
            静态构造方法
            </summary>
        </member>
        <member name="M:HslControls.Authorization.MD5Encrypt32(System.String)">
            <summary>
            32位MD5加密
            </summary>
            <param name="password">等待加密的数据信息</param>
            <returns>返回结果信息</returns>
        </member>
        <member name="M:HslControls.Authorization.iashdiadasbdnajsdhjaf">
            <summary>
            检查当前的授权类是否可用
            </summary>
            <returns>是否可用</returns>
        </member>
        <member name="M:HslControls.Authorization.SetAuthorizationCode(System.String)">
            <summary>
            设置本组件系统的授权信息，在使用库的控件之前需要激活一次，不然只能使用24小时。
            </summary>
            <param name="code">授权码</param>
        </member>
        <member name="T:HslControls.Charts.Axis">
            <summary>
            坐标轴类
            </summary>
        </member>
        <member name="M:HslControls.Charts.Axis.#ctor">
            <summary>
            实例化一个Axis对象
            </summary>
        </member>
        <member name="F:HslControls.Charts.Axis.minValBuf">
            <summary>
            最小值缓存
            </summary>
        </member>
        <member name="F:HslControls.Charts.Axis.maxValBuf">
            <summary>
            最大值缓存
            </summary>
        </member>
        <member name="F:HslControls.Charts.Axis.dataStep">
            <summary>
            标签各元素间的数据步长
            </summary>
        </member>
        <member name="F:HslControls.Charts.Axis.locationStep">
            <summary>
            标签各元素间的坐标步长
            </summary>
        </member>
        <member name="F:HslControls.Charts.Axis.maxLabelWidth">
            <summary>
            标签的最大宽度
            </summary>
        </member>
        <member name="F:HslControls.Charts.Axis.maxLabelHeight">
            <summary>
            标签的最大高度
            </summary>
        </member>
        <member name="P:HslControls.Charts.Axis.Chart">
            <summary>
            图表对象
            </summary>
        </member>
        <member name="P:HslControls.Charts.Axis.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:HslControls.Charts.Axis.MaxValueLimit">
            <summary>
            最大值极限
            </summary>
        </member>
        <member name="P:HslControls.Charts.Axis.MinValueLimit">
            <summary>
            最小值极限
            </summary>
        </member>
        <member name="P:HslControls.Charts.Axis.Labels">
            <summary>
            标签
            </summary>
        </member>
        <member name="P:HslControls.Charts.Axis.IsCustomLabels">
            <summary>
            是否使用自定义标签
            </summary>
        </member>
        <member name="P:HslControls.Charts.Axis.Visible">
            <summary>
            显示/隐藏
            </summary>
        </member>
        <member name="P:HslControls.Charts.Axis.LabelVisible">
            <summary>
            显示/隐藏标签，隐藏的标签不占用布局空间。
            </summary>
        </member>
        <member name="P:HslControls.Charts.Axis.Color">
            <summary>
            颜色
            </summary>
        </member>
        <member name="P:HslControls.Charts.Axis.Position">
            <summary>
            位置
            </summary>
        </member>
        <member name="P:HslControls.Charts.Axis.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:HslControls.Charts.Axis.IsReverse">
            <summary>
            是否反转方向
            </summary>
        </member>
        <member name="P:HslControls.Charts.Axis.AutoAdapt">
            <summary>
            是否让数据范围自适应
            </summary>
        </member>
        <member name="P:HslControls.Charts.Axis.ZoomEnabled">
            <summary>
            缩放使能
            </summary>
        </member>
        <member name="P:HslControls.Charts.Axis.Width">
            <summary>
            宽度
            </summary>
        </member>
        <member name="P:HslControls.Charts.Axis.Height">
            <summary>
            高度
            </summary>
        </member>
        <member name="P:HslControls.Charts.Axis.MaxValue">
            <summary>
            最大值
            </summary>
        </member>
        <member name="P:HslControls.Charts.Axis.MinValue">
            <summary>
            最小值
            </summary>
        </member>
        <member name="P:HslControls.Charts.Axis.Range">
            <summary>
            数据范围
            </summary>
        </member>
        <member name="P:HslControls.Charts.Axis.ZoomState">
            <summary>
            缩放状态
            </summary>
        </member>
        <member name="M:HslControls.Charts.Axis.ResetRange">
            <summary>
            重置数据范围
            </summary>
        </member>
        <member name="M:HslControls.Charts.Axis.UpdateRange(HslControls.Charts.SeriesBase,HslControls.Charts.AxisType,System.Int32)">
            <summary>
            更新数据范围，通过<see cref="T:HslControls.Charts.SeriesBase"/>对象数据的最大值及最小值进行更新。
            </summary>
            <remarks>当启用数据范围自适应，且不使用自定义标签时有效。</remarks>
            <param name="series">数据串对象</param>
            <param name="axisType">坐标轴类型</param>
            <param name="separatorSum">分隔器个数</param>
        </member>
        <member name="M:HslControls.Charts.Axis.UpdateZoom(System.Double)">
            <summary>
            更新缩放
            </summary>
            <param name="times">缩放倍数</param>
        </member>
        <member name="M:HslControls.Charts.Axis.UpdateLabel(System.Int32)">
            <summary>
            更新标签，有多少个分割器就创建几个标签。
            </summary>
            <remarks>不使用自定义标签时有效</remarks>
            <param name="separatorSum">分隔器个数</param>
        </member>
        <member name="M:HslControls.Charts.Axis.UpdateSize1(System.Drawing.Graphics,System.Drawing.Font)">
            <summary>
            更新尺寸，计算X轴的高度或Y轴的宽度。
            </summary>
            <remarks>更新标签后调用</remarks>
            <param name="g">绘图对象</param>
            <param name="font">字体</param>
        </member>
        <member name="M:HslControls.Charts.Axis.UpdateSize2(System.Drawing.Rectangle,System.Int32)">
            <summary>
            更新尺寸，对X轴的宽度或Y轴的高度赋值。
            </summary>
            <remarks>计算完图表绘图区域后调用</remarks>
            <param name="border">图表绘图区域边界</param>
            <param name="separatorSum">分隔器个数</param>
        </member>
        <member name="M:HslControls.Charts.Axis.UpdateOffset(System.Int32,System.Int32)">
            <summary>
            更新偏移量，对非自定义标签的值进行更新。
            </summary>
            <param name="separatorSum">分隔器个数</param>
            <param name="offset">偏移量</param>
        </member>
        <member name="M:HslControls.Charts.Axis.DrawAxisX(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.Rectangle,System.Int32,System.Single@,System.Single@)">
            <summary>
            绘制横向坐标轴
            </summary>
            <param name="g">绘图对象</param>
            <param name="font">字体</param>
            <param name="border">图表绘图区域边界</param>
            <param name="offset">偏移量</param>
            <param name="top">相对图表控件上侧距离</param>
            <param name="bottom">相对图表控件下侧距离</param>
        </member>
        <member name="M:HslControls.Charts.Axis.DrawAxisY(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.Rectangle,System.Int32,System.Single@,System.Single@)">
            <summary>
            绘制纵向坐标轴
            </summary>
            <param name="g">绘图对象</param>
            <param name="font">字体</param>
            <param name="border">图表绘图区域边界</param>
            <param name="offset">偏移量</param>
            <param name="left">相对图表控件左侧距离</param>
            <param name="right">相对图表控件右侧距离</param>
        </member>
        <member name="M:HslControls.Charts.Axis.UpdateRange(System.Double,System.Double,System.Int32)">
            <summary>
            更新数据范围，通过已知的最大值及最小值，计算并更新合适的数据范围。
            </summary>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="separatorSum">分隔器个数</param>
        </member>
        <member name="M:HslControls.Charts.Axis.CountAxisYWidth(System.Drawing.Graphics,System.Drawing.Font)">
            <summary>
            计算Y轴宽度
            </summary>
            <param name="g">绘图对象</param>
            <param name="font">字体</param>
            <returns>Y轴宽度</returns>
        </member>
        <member name="M:HslControls.Charts.Axis.CountAxisXHeight(System.Drawing.Graphics,System.Drawing.Font)">
            <summary>
            计算X轴高度
            </summary>
            <param name="g">绘图对象</param>
            <param name="font">字体</param>
            <returns>X轴高度</returns>
        </member>
        <member name="M:HslControls.Charts.Axis.SetLabels(System.String[],System.Double,System.Double)">
            <summary>
            设置自定义标签
            </summary>
            <param name="labels">字符串数组</param>
            <param name="startValue">在数据范围中的起始值</param>
            <param name="valueStep">字符串数组各元素间的步长</param>
        </member>
        <member name="M:HslControls.Charts.Axis.SetLabels(System.String[],System.Double[])">
            <summary>
            设置自定义标签
            </summary>
            <remarks>字符串数组与值数组长度必须相等</remarks>
            <param name="labels">字符串数组</param>
            <param name="values">值数组</param>
        </member>
        <member name="M:HslControls.Charts.Axis.SetLabels(System.DateTime[],System.String,System.Double,System.Double)">
            <summary>
            设置自定义标签
            </summary>
            <param name="dateTimes">时间数组</param>
            <param name="format">时间格式</param>
            <param name="startValue">在数据范围中的起始值</param>
            <param name="valueStep">时间数组各元素间的步长</param>
        </member>
        <member name="M:HslControls.Charts.Axis.SetLabels(System.DateTime[],System.Double[],System.String)">
            <summary>
            设置自定义标签
            </summary>
            <remarks>时间数组与值数组长度必须相等</remarks>
            <param name="dateTimes">时间数组</param>
            <param name="format">格式化的文本信息</param>
            <param name="values">值数组</param>
        </member>
        <member name="M:HslControls.Charts.Axis.GetLabel(System.Double)">
            <summary>
            获取值的标签
            </summary>
            <remarks>如果使用自定义标签的话，就在现有的标签里查找与输入值相等的标签。</remarks>
            <param name="value">值</param>
            <returns>标签</returns>
        </member>
        <member name="T:HslControls.Charts.AxisCollection">
            <summary>
            坐标轴集合类
            </summary>
        </member>
        <member name="P:HslControls.Charts.AxisCollection.Chart">
            <summary>
            图表对象
            </summary>
        </member>
        <member name="P:HslControls.Charts.AxisCollection.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="T:HslControls.Charts.AxisFormat">
            <summary>
            坐标轴格式类，定义了坐标轴标题及标签的布局信息。
            </summary>
        </member>
        <member name="T:HslControls.Charts.AxisLabel">
            <summary>
            坐标轴标签类
            </summary>
        </member>
        <member name="M:HslControls.Charts.AxisLabel.#ctor(System.Double)">
            <summary>
            实例化一个AxisLabel类
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:HslControls.Charts.AxisLabel.#ctor">
            <summary>
            实例化一个AxisLabel类
            </summary>
        </member>
        <member name="P:HslControls.Charts.AxisLabel.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:HslControls.Charts.AxisLabel.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:HslControls.Charts.AxisPosition">
            <summary>
            坐标轴位置
            </summary>
        </member>
        <member name="T:HslControls.Charts.AxisType">
            <summary>
            坐标轴类型
            </summary>
        </member>
        <member name="T:HslControls.Charts.ChartPoint">
            <summary>
            数据点类，描述数据点的值与所在图表的坐标。
            </summary>
        </member>
        <member name="M:HslControls.Charts.ChartPoint.#ctor(System.Double,System.Double)">
            <summary>
            实例化一个ChartPoint对象
            </summary>
            <param name="x">数据值X</param>
            <param name="y">数据值Y</param>
        </member>
        <member name="M:HslControls.Charts.ChartPoint.#ctor">
            <summary>
            实例化一个ChartPoint对象
            </summary>
        </member>
        <member name="P:HslControls.Charts.ChartPoint.Chart">
            <summary>
            图表对象
            </summary>
        </member>
        <member name="P:HslControls.Charts.ChartPoint.Series">
            <summary>
            数据串对象
            </summary>
        </member>
        <member name="P:HslControls.Charts.ChartPoint.ParentAxisX">
            <summary>
            附着的X轴
            </summary>
        </member>
        <member name="P:HslControls.Charts.ChartPoint.ParentAxisY">
            <summary>
            附着的Y轴
            </summary>
        </member>
        <member name="P:HslControls.Charts.ChartPoint.X">
            <summary>
            数据值X
            </summary>
        </member>
        <member name="P:HslControls.Charts.ChartPoint.Y">
            <summary>
            数据值Y
            </summary>
        </member>
        <member name="P:HslControls.Charts.ChartPoint.Label">
            <summary>
            标签
            </summary>
        </member>
        <member name="P:HslControls.Charts.ChartPoint.Left">
            <summary>
            与图表左边缘的距离
            </summary>
        </member>
        <member name="P:HslControls.Charts.ChartPoint.Top">
            <summary>
            与图表上边缘的距离
            </summary>
        </member>
        <member name="P:HslControls.Charts.ChartPoint.Location">
            <summary>
            在图表上的坐标
            </summary>
        </member>
        <member name="T:HslControls.Charts.ChartPointCollection">
            <summary>
            数据点集合类
            </summary>
        </member>
        <member name="P:HslControls.Charts.ChartPointCollection.Chart">
            <summary>
            图表对象
            </summary>
        </member>
        <member name="P:HslControls.Charts.ChartPointCollection.Series">
            <summary>
            数据串对象
            </summary>
        </member>
        <member name="T:HslControls.Charts.Helper">
            <summary>
            帮助类，包含一些静态的GDI+绘图方法。
            </summary>
        </member>
        <member name="M:HslControls.Charts.Helper.ConvertSize(System.Drawing.SizeF,System.Single)">
            <summary>
            尺寸转换，计算旋转后的尺寸。
            </summary>
            <param name="size"></param>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:HslControls.Charts.Helper.DrawString(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat,System.Single)">
            <summary>
            绘制旋转文本
            </summary>
            <param name="g"></param>
            <param name="s"></param>
            <param name="font"></param>
            <param name="brush"></param>
            <param name="point"></param>
            <param name="format"></param>
            <param name="angle"></param>
        </member>
        <member name="T:HslControls.Charts.SeriesBase">
            <summary>
            数据串基类，该类为抽象类，无法实例化。
            </summary>
        </member>
        <member name="M:HslControls.Charts.SeriesBase.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:HslControls.Charts.SeriesBase.Chart">
            <summary>
            图表对象
            </summary>
        </member>
        <member name="P:HslControls.Charts.SeriesBase.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:HslControls.Charts.SeriesBase.Points">
            <summary>
            数据点
            </summary>
        </member>
        <member name="P:HslControls.Charts.SeriesBase.MaxValueX">
            <summary>
            数据点集合中数据值X的最大值
            </summary>
        </member>
        <member name="P:HslControls.Charts.SeriesBase.MinValueX">
            <summary>
            数据点集合中数据值X的最小值
            </summary>
        </member>
        <member name="P:HslControls.Charts.SeriesBase.MaxValueY">
            <summary>
            数据点集合中数据值Y的最大值
            </summary>
        </member>
        <member name="P:HslControls.Charts.SeriesBase.MinValueY">
            <summary>
            数据点集合中数据值Y的最小值
            </summary>
        </member>
        <member name="P:HslControls.Charts.SeriesBase.ScalesXAt">
            <summary>
            附着的X轴序号
            </summary>
        </member>
        <member name="P:HslControls.Charts.SeriesBase.ParentAxisX">
            <summary>
            附着的X轴
            </summary>
        </member>
        <member name="P:HslControls.Charts.SeriesBase.ScalesYAt">
            <summary>
            附着的Y轴序号
            </summary>
        </member>
        <member name="P:HslControls.Charts.SeriesBase.ParentAxisY">
            <summary>
            附着的Y轴
            </summary>
        </member>
        <member name="P:HslControls.Charts.SeriesBase.Color">
            <summary>
            颜色
            </summary>
        </member>
        <member name="P:HslControls.Charts.SeriesBase.Visible">
            <summary>
            显示/隐藏
            </summary>
        </member>
        <member name="P:HslControls.Charts.SeriesBase.Legend">
            <summary>
            图例
            </summary>
        </member>
        <member name="P:HslControls.Charts.SeriesBase.LegendVisible">
            <summary>
            显示/隐藏图例
            </summary>
        </member>
        <member name="M:HslControls.Charts.SeriesBase.GetColorByIndex(System.Int32)">
            <summary>
            获取颜色
            </summary>
            <param name="index">序号</param>
            <returns>颜色</returns>
        </member>
        <member name="M:HslControls.Charts.SeriesBase.CountLeft(System.Double)">
            <summary>
            计算数据点与图表左边缘的距离
            </summary>
            <param name="xValue">数据值X</param>
            <returns>距离</returns>
        </member>
        <member name="M:HslControls.Charts.SeriesBase.CountTop(System.Double)">
            <summary>
            计算数据点与图表上边缘的距离
            </summary>
            <param name="yValue">数据值Y</param>
            <returns>距离</returns>
        </member>
        <member name="M:HslControls.Charts.SeriesBase.GetLocationArray">
            <summary>
            获取数据点在图表上的坐标数组
            </summary>
            <returns>坐标数组</returns>
        </member>
        <member name="M:HslControls.Charts.SeriesBase.SetValuesY(System.Double[],System.Double,System.Double)">
            <summary>
            设置数据值Y
            </summary>
            <param name="values">数据值数组</param>
            <param name="startValue">数据值X的起始值</param>
            <param name="valueStep">数据值X的步长</param>
        </member>
        <member name="M:HslControls.Charts.SeriesBase.SetValuesX(System.Double[],System.Double,System.Double)">
            <summary>
            设置数据值X
            </summary>
            <param name="values">数据值数组</param>
            <param name="startValue">数据值Y的起始值</param>
            <param name="valueStep">数据值X的步长</param>
        </member>
        <member name="M:HslControls.Charts.SeriesBase.SelectAllByX(System.Int32,System.Single)">
            <summary>
            通过横坐标查找<see cref="T:HslControls.Charts.ChartPoint"/>对象数组
            </summary>
            <param name="x">横坐标</param>
            <param name="range">范围</param>
            <returns><see cref="T:HslControls.Charts.ChartPoint"/>对象数组</returns>
        </member>
        <member name="M:HslControls.Charts.SeriesBase.SelectByX(System.Int32,System.Single)">
            <summary>
            通过横坐标查找<see cref="T:HslControls.Charts.ChartPoint"/>对象
            </summary>
            <param name="x">横坐标</param>
            <param name="range">范围</param>
            <returns><see cref="T:HslControls.Charts.ChartPoint"/>对象</returns>
        </member>
        <member name="M:HslControls.Charts.SeriesBase.SelectAllByY(System.Int32,System.Single)">
            <summary>
            通过纵坐标查找<see cref="T:HslControls.Charts.ChartPoint"/>对象数组
            </summary>
            <param name="y">纵坐标</param>
            <param name="range"></param>
            <returns><see cref="T:HslControls.Charts.ChartPoint"/>对象数组</returns>
        </member>
        <member name="M:HslControls.Charts.SeriesBase.SelectByY(System.Int32,System.Single)">
            <summary>
            通过纵坐标查找<see cref="T:HslControls.Charts.ChartPoint"/>对象
            </summary>
            <param name="y">纵坐标</param>
            <param name="range"></param>
            <returns><see cref="T:HslControls.Charts.ChartPoint"/>对象</returns>
        </member>
        <member name="M:HslControls.Charts.SeriesBase.SelectAll(System.Int32,System.Int32,System.Single)">
            <summary>
            通过横纵坐标查找<see cref="T:HslControls.Charts.ChartPoint"/>对象数组
            </summary>
            <param name="x">横坐标</param>
            <param name="y">纵坐标</param>
            <param name="range">范围</param>
            <returns><see cref="T:HslControls.Charts.ChartPoint"/>对象数组</returns>
        </member>
        <member name="M:HslControls.Charts.SeriesBase.Select(System.Int32,System.Int32,System.Single)">
            <summary>
            通过横纵坐标查找<see cref="T:HslControls.Charts.ChartPoint"/>对象
            </summary>
            <param name="x">横坐标</param>
            <param name="y">纵坐标</param>
            <param name="range">范围</param>
            <returns><see cref="T:HslControls.Charts.ChartPoint"/>对象</returns>
        </member>
        <member name="M:HslControls.Charts.SeriesBase.Draw(System.Drawing.Graphics)">
            <summary>
            绘制数据
            </summary>
            <param name="g">绘图对象</param>
        </member>
        <member name="M:HslControls.Charts.SeriesBase.PaintLegend(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            图例重绘方法，用于绘制图标。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:HslControls.Charts.SeriesCollection">
            <summary>
            数据串集合类
            </summary>
        </member>
        <member name="P:HslControls.Charts.SeriesCollection.Chart">
            <summary>
            图表对象
            </summary>
        </member>
        <member name="T:HslControls.Charts.SeriesFormat">
            <summary>
            数据串格式类，定义了数据的布局信息。
            </summary>
        </member>
        <member name="T:HslControls.Charts.Series.BezierSeries">
            <summary>
            贝塞尔数据串类
            </summary>
        </member>
        <member name="P:HslControls.Charts.Series.BezierSeries.Thickness">
            <summary>
            图形宽度
            </summary>
        </member>
        <member name="T:HslControls.Charts.Series.ColumnSeries">
            <summary>
            柱状数据串类
            </summary>
        </member>
        <member name="P:HslControls.Charts.Series.ColumnSeries.Width">
            <summary>
            图形宽度
            </summary>
        </member>
        <member name="T:HslControls.Charts.Series.LabelSeries">
            <summary>
            标签数据串类
            </summary>
        </member>
        <member name="P:HslControls.Charts.Series.LabelSeries.Width">
            <summary>
            图形宽度
            </summary>
        </member>
        <member name="P:HslControls.Charts.Series.LabelSeries.Height">
            <summary>
            图形宽度
            </summary>
        </member>
        <member name="P:HslControls.Charts.Series.LabelSeries.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="T:HslControls.Charts.Series.LineSeries">
            <summary>
            折线数据串类
            </summary>
        </member>
        <member name="P:HslControls.Charts.Series.LineSeries.Thickness">
            <summary>
            图形宽度
            </summary>
        </member>
        <member name="P:HslControls.Charts.Series.LineSeries.CurveTension">
            <summary>
            曲线张力
            </summary>
            <remarks>数据量大时，设置张力后会降低绘制效率。</remarks>
        </member>
        <member name="P:HslControls.Charts.Series.LineSeries.FillGraph">
            <summary>
            是否填充图形
            </summary>
        </member>
        <member name="P:HslControls.Charts.Series.LineSeries.PointVisible">
            <summary>
            显示/隐藏点状图形
            </summary>
        </member>
        <member name="P:HslControls.Charts.Series.LineSeries.ValueVisible">
            <summary>
            显示/隐藏当前值
            </summary>
        </member>
        <member name="P:HslControls.Charts.Series.LineSeries.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="T:HslControls.Charts.Series.PointSeries">
            <summary>
            点数据串类
            </summary>
        </member>
        <member name="P:HslControls.Charts.Series.PointSeries.Width">
            <summary>
            图形宽度
            </summary>
        </member>
        <member name="P:HslControls.Charts.Series.PointSeries.Height">
            <summary>
            图形宽度
            </summary>
        </member>
        <member name="T:HslControls.Charts.Series.StandardLineSeries">
            <summary>
            基准线数据串类
            </summary>
        </member>
        <member name="P:HslControls.Charts.Series.StandardLineSeries.Thickness">
            <summary>
            图形宽度
            </summary>
        </member>
        <member name="P:HslControls.Charts.Series.StandardLineSeries.HorizontatLineVisible">
            <summary>
            显示/隐藏横向基准线
            </summary>
        </member>
        <member name="P:HslControls.Charts.Series.StandardLineSeries.VerticalLineVisible">
            <summary>
            显示/隐藏纵向基准线
            </summary>
        </member>
        <member name="T:HslControls.Charts.ZoomType">
            <summary>
            缩放类型
            </summary>
        </member>
        <member name="T:HslControls.Core.HslAsyncCoordinator">
            <summary>
            一个用于高性能，乐观并发模型控制操作的类，允许一个方法(隔离方法)的安全单次执行
            </summary>
        </member>
        <member name="M:HslControls.Core.HslAsyncCoordinator.#ctor(System.Action)">
            <summary>
            实例化一个对象，需要传入隔离执行的方法
            </summary>
            <param name="operater">隔离执行的方法</param>
        </member>
        <member name="M:HslControls.Core.HslAsyncCoordinator.StartOperaterInfomation">
            <summary>
            启动线程池执行隔离方法
            </summary>
        </member>
        <member name="M:HslControls.Core.HslAsyncCoordinator.ToString">
            <inheritdoc/>
        </member>
        <member name="P:HslControls.Forms.FormHslDigitalInput.OnOk">
            <summary>
            当按ok键触发的信息
            </summary>
        </member>
        <member name="P:HslControls.Forms.FormHslDigitalInput.DigitalInput">
            <summary>
            当前的显示控件，可以用来更改一些属性设计。
            </summary>
        </member>
        <member name="F:HslControls.Forms.FormHslDigitalInput.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HslControls.Forms.FormHslDigitalInput.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HslControls.Forms.FormHslDigitalInput.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:HslControls.GameSupport.ClassicGameEngine">
            <summary>
            经典的游戏引擎，实现基础的画布的绘制，定义基本的事件触发
            </summary>
        </member>
        <member name="M:HslControls.GameSupport.ClassicGameEngine.#ctor(System.Int32,System.Int32)">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="M:HslControls.GameSupport.ClassicGameEngine.GameArrayAction(System.Action{HslControls.GameSupport.ClassicGameItem})">
            <summary>
            循环操作当前的游戏的所有的点位
            </summary>
            <param name="action">操作的委托</param>
        </member>
        <member name="M:HslControls.GameSupport.ClassicGameEngine.GameArraysReset">
            <summary>
            复位游戏的所有的点位信息为没有东西
            </summary>
        </member>
        <member name="M:HslControls.GameSupport.ClassicGameEngine.GameArraysColReset(System.Int32,System.Boolean)">
            <summary>
            复位或设置游戏的指定的列位信息为没有东西
            </summary>
            <param name="col">指定的列数据信息</param>
            <param name="hasItem">是否有点位信息</param>
        </member>
        <member name="M:HslControls.GameSupport.ClassicGameEngine.GameArraysRowReset(System.Int32,System.Boolean)">
            <summary>
            复位或设置游戏的指定的行位信息为没有东西
            </summary>
            <param name="row">指定的列数据信息</param>
            <param name="hasItem">是否有点位信息</param>
        </member>
        <member name="M:HslControls.GameSupport.ClassicGameEngine.SetPointFixed(System.Drawing.Point[])">
            <summary>
            设置指定的点位数据为有对象
            </summary>
            <param name="points">点位数据信息</param>
        </member>
        <member name="M:HslControls.GameSupport.ClassicGameEngine.SetPointFixed(HslControls.GameSupport.MoveGameItem)">
            <summary>
            设置指定的点位数据为有对象
            </summary>
            <param name="gameItem">活动对象信息</param>
        </member>
        <member name="M:HslControls.GameSupport.ClassicGameEngine.IsRowAllHasItem(System.Int32)">
            <summary>
            获取指定的行数据是否都是有物体的操作
            </summary>
            <param name="row">指定行索引</param>
            <returns>结果数据</returns>
        </member>
        <member name="M:HslControls.GameSupport.ClassicGameEngine.IsRowAllEmpty(System.Int32)">
            <summary>
            获取指定的行数据是否都是空的操作
            </summary>
            <param name="row">指定行索引</param>
            <returns>结果数据</returns>
        </member>
        <member name="M:HslControls.GameSupport.ClassicGameEngine.IsColAllHasItem(System.Int32)">
            <summary>
            获取指定的列数据是否都是有物体的操作
            </summary>
            <param name="col">指定列索引</param>
            <returns>结果数据</returns>
        </member>
        <member name="M:HslControls.GameSupport.ClassicGameEngine.IsColAllEmpty(System.Int32)">
            <summary>
            获取指定的列数据是否都是空的操作
            </summary>
            <param name="col">指定列索引</param>
            <returns>结果数据</returns>
        </member>
        <member name="M:HslControls.GameSupport.ClassicGameEngine.LinesMoveDown(System.Int32)">
            <summary>
            所有的数据信息下移一行，需要指定基础的行索引
            </summary>
            <param name="rowIndex">指定的行索引</param>
        </member>
        <member name="M:HslControls.GameSupport.ClassicGameEngine.DrawGameItem(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            绘制基本的游戏单元的，这个是最基本的单元
            </summary>
            <param name="g">绘图对象</param>
            <param name="x">坐标x</param>
            <param name="y">坐标y</param>
        </member>
        <member name="M:HslControls.GameSupport.ClassicGameEngine.DrawGameItem(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            使用指定的颜色绘制游戏坐标位置的界面
            </summary>
            <param name="g">绘制对象</param>
            <param name="x">坐标x</param>
            <param name="y">坐标y</param>
            <param name="color">指定绘制的颜色</param>
        </member>
        <member name="M:HslControls.GameSupport.ClassicGameEngine.DrawGameItem(System.Drawing.Graphics,System.Drawing.Point[],System.Drawing.Color)">
            <summary>
            使用指定的颜色绘制游戏坐标位置的界面
            </summary>
            <param name="g">绘制对象</param>
            <param name="points">数据点位信息</param>
            <param name="color">指定绘制的颜色</param>
        </member>
        <member name="M:HslControls.GameSupport.ClassicGameEngine.DrawGameItem(System.Drawing.Graphics,HslControls.GameSupport.MoveGameItem)">
            <summary>
            使用指定的颜色绘制游戏坐标位置的界面
            </summary>
            <param name="g">绘制对象</param>
            <param name="gameItem">活动单元</param>
        </member>
        <member name="M:HslControls.GameSupport.ClassicGameEngine.DrawBackgroundImage(System.Drawing.Graphics)">
            <summary>
            绘制所有的背景数据信息
            </summary>
            <param name="g">绘制对象</param>
        </member>
        <member name="M:HslControls.GameSupport.ClassicGameEngine.DrawCustomer(System.Drawing.Graphics)">
            <summary>
            等待重写实现的游戏逻辑部分
            </summary>
            <param name="g">绘制对象</param>
        </member>
        <member name="M:HslControls.GameSupport.ClassicGameEngine.GetRenderBitmap">
            <summary>
            获取整个游戏的绘制信息
            </summary>
            <returns>游戏界面</returns>
        </member>
        <member name="E:HslControls.GameSupport.ClassicGameEngine.OnBitmapShowEvent">
            <summary>
            需要显示数据的事件
            </summary>
        </member>
        <member name="M:HslControls.GameSupport.ClassicGameEngine.OnBitmapShow(System.Drawing.Bitmap)">
            <summary>
            触发一个事件，刷新结果显示
            </summary>
            <param name="bitmap">图片信息</param>
        </member>
        <member name="M:HslControls.GameSupport.ClassicGameEngine.OnBitmapShow">
            <summary>
            触发一个事件，刷新结果显示，获取默认的界面信息
            </summary>
        </member>
        <member name="F:HslControls.GameSupport.ClassicGameEngine.gameArrays">
            <summary>
            所有数据的合集
            </summary>
        </member>
        <member name="P:HslControls.GameSupport.ClassicGameEngine.PixelCol">
            <summary>
            获取游戏界面的列数据信息
            </summary>
        </member>
        <member name="P:HslControls.GameSupport.ClassicGameEngine.PixelRow">
            <summary>
            获取游戏界面的行数据信息
            </summary>
        </member>
        <member name="T:HslControls.GameSupport.ClassicGameItem">
            <summary>
            游戏内容的最基本的单元
            </summary>
        </member>
        <member name="M:HslControls.GameSupport.ClassicGameItem.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="P:HslControls.GameSupport.ClassicGameItem.ItemCode">
            <summary>
            指代不同的东西
            </summary>
        </member>
        <member name="P:HslControls.GameSupport.ClassicGameItem.ItemColor">
            <summary>
            当前元素的背景色
            </summary>
        </member>
        <member name="P:HslControls.GameSupport.ClassicGameItem.HasItem">
            <summary>
            当前元素是否有值
            </summary>
        </member>
        <member name="P:HslControls.GameSupport.ClassicGameItem.Position">
            <summary>
            
            </summary>
        </member>
        <member name="T:HslControls.GameSupport.MoveGameItem">
            <summary>
            游戏控件中活动状态的游戏单元
            </summary>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.#ctor(System.Drawing.Point[],System.Drawing.Point,System.Drawing.Size,System.Func{System.Drawing.Point[],System.Boolean})">
            <summary>
            实例化一个游戏的活动单元对象，默认每个活动单元都是4*4的一个大小方块
            </summary>
            <param name="pt">该对象包含的所有的点位信息</param>
            <param name="locationDefault">该活动单元所处的游戏界面的默认位置</param>
            <param name="board">实际游戏画板的大小</param>
            <param name="moveJudge">是否允许变换的判断，主要用于碰撞检测</param>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.#ctor(HslControls.GameSupport.MoveGameItem)">
            <summary>
            根据启动的活动单元初始化游戏的位置
            </summary>
            <param name="tp">游戏的活动单元</param>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.GetActualPoints">
            <summary>
            获取所有真实的位置数据信息，经过转换到实际的游戏坐标上的
            </summary>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.GetItemPoints">
            <summary>
            获取移动单元的点位数据，这些数据的相对的坐标，在解析界面和实际的相对坐标组合成实际的坐标
            </summary>
            <returns>数据点位的信息</returns>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.SetNewPoints(System.Drawing.Point[])">
            <summary>
            设置新的图形及位置信息
            </summary>
            <param name="points">图形信息</param>
        </member>
        <member name="P:HslControls.GameSupport.MoveGameItem.PaintColor">
            <summary>
            绘图的颜色
            </summary>
        </member>
        <member name="P:HslControls.GameSupport.MoveGameItem.LocationDefault">
            <summary>
            默认的位置
            </summary>
        </member>
        <member name="P:HslControls.GameSupport.MoveGameItem.Location">
            <summary>
            实际的位置
            </summary>
        </member>
        <member name="P:HslControls.GameSupport.MoveGameItem.Direction">
            <summary>
            获取方向
            </summary>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.MoveRandom">
            <summary>
            随机的移动方向
            </summary>
            <returns>是否随机</returns>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.MoveLeft">
            <summary>
            向左移动，前提是能移动
            </summary>
            <returns>是否成功的移动</returns>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.TurnLeft">
            <summary>
            旋转方向为左，前提是能旋转
            </summary>
            <returns>是否发生了方向变化</returns>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.MoveRight">
            <summary>
            向右移动，前提是能移动
            </summary>
            <returns>是否成功的移动</returns>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.TurnRight">
            <summary>
            旋转方向为右，前提是能旋转
            </summary>
            <returns>是否发生了方向变化</returns>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.MoveUp">
            <summary>
            向上移动，前提是能移动
            </summary>
            <returns>是否成功的移动</returns>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.TurnUp">
            <summary>
            旋转方向为上，前提是能旋转
            </summary>
            <returns>是否发生了方向变化</returns>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.MoveDown">
            <summary>
            向下移动，前提是能移动
            </summary>
            <returns>是否成功的移动</returns>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.TurnDown">
            <summary>
            旋转方向为下，前提是能旋转
            </summary>
            <returns>是否发生了方向变化</returns>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.MoveNext">
            <summary>
            根据当前的方向，活动单元继续移动
            </summary>
            <returns>是否发生了移动</returns>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.TurnDirection(System.Int32)">
            <summary>
            根据指定的方向转动活动单元
            </summary>
            <param name="direction">方向，0,1,2,3</param>
            <returns>是否转动了方向</returns>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.RotationChange">
            <summary>
            旋转变化，前提是能旋转，顺时针旋转90度
            </summary>
            <returns>是否成功的转动</returns>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.GetUpPoints">
            <summary>
            获取向上移动后的在游戏界面的实际坐标位置，主要用于碰撞检测的
            </summary>
            <returns>转换后的实际坐标</returns>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.GetDownPoints">
            <summary>
            获取向下移动后的在游戏界面的实际坐标位置，主要用于碰撞检测的
            </summary>
            <returns>转换后的实际坐标</returns>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.GetLeftPoints">
            <summary>
            获取向左移动后的在游戏界面的实际坐标位置，主要用于碰撞检测的
            </summary>
            <returns>转换后的实际坐标</returns>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.GetRightPoints">
            <summary>
            获取向右移动后的在游戏界面的实际坐标位置，主要用于碰撞检测的
            </summary>
            <returns>转换后的实际坐标</returns>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.GetRotationPoints(System.Int32)">
            <summary>
            获取顺时针旋转后的在游戏界面的实际坐标位置，主要用于碰撞检测的
            </summary>
            <returns>转换后的实际坐标</returns>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.GetTurnUpPoints">
            <summary>
            获取活动单元方向朝上的实际坐标位置，主要用于碰撞检测的
            </summary>
            <returns>转换后的实际坐标</returns>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.GetTurnRightPoints">
            <summary>
            获取活动单元方向朝右的实际坐标位置，主要用于碰撞检测的
            </summary>
            <returns>转换后的实际坐标</returns>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.GetTurnDownPoints">
            <summary>
            获取活动单元方向朝下的实际坐标位置，主要用于碰撞检测的
            </summary>
            <returns>转换后的实际坐标</returns>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.GetTurnLeftPoints">
            <summary>
            获取活动单元方向朝左的实际坐标位置，主要用于碰撞检测的
            </summary>
            <returns>转换后的实际坐标</returns>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.IsPositionInMoveItem(System.Drawing.Point)">
            <summary>
            判断指定的位置是否有数据
            </summary>
            <param name="point">位置信息</param>
            <returns>是否存在数据信息</returns>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.IsPositionInMoveItem(System.Drawing.Point[])">
            <summary>
            判断点数的位置是否在活动对象中
            </summary>
            <param name="points">点位数据</param>
            <returns>是否存在数据信息</returns>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.ResetXPoint(System.Drawing.Point[])">
            <summary>
            判断整个点位信息是否从0列开始，这个是基于相对坐标而言的
            </summary>
            <param name="points">点数数据</param>
            <returns>成功与否</returns>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.ResetYPoint(System.Drawing.Point[])">
            <summary>
            判断整个点位信息是否从0行开始，这个是基于相对坐标而言的
            </summary>
            <param name="points">点位信息</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.RightXPoint(System.Drawing.Point[])">
            <summary>
            判断是否超出了右边界，这个是基于相对坐标而言的
            </summary>
            <param name="points">点位信息</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:HslControls.GameSupport.MoveGameItem.RotationChangePoints(System.Int32)">
            <summary>
            获取旋转及位置变化后的点位数据，旋转指定的角度倍数
            </summary>
            <param name="rate">倍率关系，1表示向右，</param>
            <returns>数据信息</returns>
        </member>
        <member name="T:HslControls.GameSupport.TankEngine">
            <summary>
            坦克大战的游戏引擎
            </summary>
        </member>
        <member name="M:HslControls.GameSupport.TankEngine.#ctor(System.Int32,System.Int32)">
            <summary>
            只用指定的长宽来实例化游戏对象
            </summary>
            <param name="pixelCol">列数</param>
            <param name="pixelRow">行数</param>
        </member>
        <member name="M:HslControls.GameSupport.TankEngine.OnMoveTankSuccess(System.Drawing.Point[])">
            <summary>
            判断当前的点位数据是否有碰撞情况
            </summary>
            <param name="points">等待检测的点位数据</param>
            <returns>是否有碰撞的情况</returns>
        </member>
        <member name="M:HslControls.GameSupport.TankEngine.OnMoveBulletSuccess(System.Drawing.Point[])">
            <summary>
            判断当前的点位数据是否有碰撞情况
            </summary>
            <param name="points">等待检测的点位数据</param>
            <returns>是否有碰撞的情况</returns>
        </member>
        <member name="M:HslControls.GameSupport.TankEngine.DrawCustomer(System.Drawing.Graphics)">
            <summary>
            额外绘制的内容
            </summary>
            <param name="g">绘制对象</param>
        </member>
        <member name="M:HslControls.GameSupport.TankEngine.MoveLeft">
            <summary>
            点击了向左的按钮
            </summary>
        </member>
        <member name="M:HslControls.GameSupport.TankEngine.MoveRight">
            <summary>
            点击了向右的按钮
            </summary>
        </member>
        <member name="M:HslControls.GameSupport.TankEngine.MoveUp">
            <summary>
            点击了向上的按钮
            </summary>
        </member>
        <member name="M:HslControls.GameSupport.TankEngine.MoveDown">
            <summary>
            点击了向下的按钮
            </summary>
        </member>
        <member name="M:HslControls.GameSupport.TankEngine.CreateTankFromPosition(System.Drawing.Point)">
            <summary>
            通过位置创建一个坦克对象
            </summary>
            <param name="position">位置信息</param>
            <returns>坦克对象</returns>
        </member>
        <member name="M:HslControls.GameSupport.TankEngine.CreateBulletFromTank(HslControls.GameSupport.MoveGameItem)">
            <summary>
            通过坦克信息创建一个子弹对象
            </summary>
            <param name="tank">坦克对象</param>
            <returns>子弹对象</returns>
        </member>
        <member name="P:HslControls.GameSupport.TankEngine.UserTank">
            <summary>
            玩家的坦克
            </summary>
        </member>
        <member name="M:HslControls.GameSupport.TankEngine.CreateUserBullet">
            <summary>
            创建用户坦克的子弹信息
            </summary>
        </member>
        <member name="M:HslControls.GameSupport.TankEngine.MoveBullet">
            <summary>
            移动所有的子弹信息
            </summary>
        </member>
        <member name="M:HslControls.GameSupport.TankEngine.CreateRandomEnemies(System.Int32)">
            <summary>
            批量创建敌方的坦克信息
            </summary>
        </member>
        <member name="M:HslControls.GameSupport.TankEngine.RemoveProtection">
            <summary>
            移除初始的保护
            </summary>
        </member>
        <member name="M:HslControls.GameSupport.TankEngine.EnemyFire">
            <summary>
            所有的敌方坦克放子弹
            </summary>
        </member>
        <member name="M:HslControls.GameSupport.TankEngine.EnemyMoveRandom">
            <summary>
            敌方坦克随机移动
            </summary>
        </member>
        <member name="M:HslControls.GameSupport.TankEngine.GetEnemyCount">
            <summary>
            获取敌方坦克数量
            </summary>
            <returns></returns>
        </member>
        <member name="P:HslControls.GameSupport.TankEngine.OnGameOver">
            <summary>
            游戏结束的信息
            </summary>
        </member>
        <member name="P:HslControls.GameSupport.TankEngine.GetEliminateCount">
            <summary>
            过去被消灭的数量
            </summary>
        </member>
        <member name="T:HslControls.GameSupport.TetrisEngine">
            <summary>
            俄罗斯方块游戏的引擎
            </summary>
        </member>
        <member name="M:HslControls.GameSupport.TetrisEngine.#ctor(System.Int32,System.Int32)">
            <summary>
            只用指定的长宽来实例化游戏对象
            </summary>
            <param name="pixelX">列数</param>
            <param name="pixelY">行数</param>
        </member>
        <member name="M:HslControls.GameSupport.TetrisEngine.DrawCustomer(System.Drawing.Graphics)">
            <summary>
            额外绘制的内容
            </summary>
            <param name="g">绘制对象</param>
        </member>
        <member name="M:HslControls.GameSupport.TetrisEngine.ClearLines">
            <summary>
            清除所有的满行的信息
            </summary>
            <returns>成功清楚的行数信息</returns>
        </member>
        <member name="M:HslControls.GameSupport.TetrisEngine.IsGameOver">
            <summary>
            游戏是否结束
            </summary>
            <returns></returns>
        </member>
        <member name="M:HslControls.GameSupport.TetrisEngine.GetScoreFromLinesClear(System.Int32)">
            <summary>
            获取得分信息
            </summary>
            <param name="line">一次性消除的行数数据</param>
            <returns></returns>
        </member>
        <member name="M:HslControls.GameSupport.TetrisEngine.OnMoveObjectSuccess(System.Drawing.Point[])">
            <summary>
            判断当前的点位数据是否有碰撞情况
            </summary>
            <param name="points">等待检测的点位数据</param>
            <returns>是否有碰撞的情况</returns>
        </member>
        <member name="P:HslControls.GameSupport.TetrisEngine.MoveTeries">
            <summary>
            用户的活动对象
            </summary>
        </member>
        <member name="P:HslControls.GameSupport.TetrisEngine.PlayerScore">
            <summary>
            游戏的得分
            </summary>
        </member>
        <member name="M:HslControls.GameSupport.TetrisEngine.MoveLeft">
            <summary>
            点击了向左的按钮
            </summary>
        </member>
        <member name="M:HslControls.GameSupport.TetrisEngine.MoveRight">
            <summary>
            点击了向右的按钮
            </summary>
        </member>
        <member name="M:HslControls.GameSupport.TetrisEngine.RotationChange">
            <summary>
            点击了向上的按钮
            </summary>
        </member>
        <member name="M:HslControls.GameSupport.TetrisEngine.MoveDown">
            <summary>
            游戏向下继续运行的时候，需要调用的方法。返回0，不处理，1，游戏继续，2，游戏结束
            </summary>
            <returns>返回0，不处理，1，游戏继续，2，游戏结束</returns>
        </member>
        <member name="M:HslControls.GameSupport.TetrisEngine.GetNewItemPoints">
            <summary>
            获取随机的游戏活动单元的点位信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:HslControls.HMI.HMILedSingle">
            <summary>
            各种信号灯的控件
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.ArrowWidth">
            <summary>
            Specify the shape width  of the indicator
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.BorderExteriorColor">
            <summary>
            Get/Set exterior line color of control
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.BorderExteriorLength">
            <summary>
            Get/Set exterior line width outside of the outer border of control
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.BorderGradientAngle">
            <summary>
            Get/Set gradient angle of the border of control
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.BorderGradientLightPos1">
            <summary>
            Get/Set border gradient light position 1 of control
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.BorderGradientLightPos2">
            <summary>
            Get/Set border gradient light position 2 of control
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.BorderGradientRate">
            <summary>
            Get/Set gradient rate of the border of control
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.BorderGradientType">
            <summary>
            Get/Set which border gradient style is used to draw the border of control
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.BorderLightIntermediateBrightness">
            <summary>
            Get/Set intermediate brightness between border lights of control
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.GradientAngle">
            <summary>
            Get/Set gradient angle
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.GradientRate">
            <summary>
            Get/Set gradient rate of the indicator
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.GradientType">
            <summary>
            Get/Set gradient Type
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.IndicatorAutoSize">
            <summary>
            Specify whether the indicator size can be automatically resize to the control size when the text is invisible
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.IndicatorHeight">
            <summary>
            Set/Get the indicator height
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.IndicatorWidth">
            <summary>
            Set/Get the indicator width 
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.InnerBorderDarkColor">
            <summary>
            Get/Set inner border dark color of control
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.InnerBorderLength">
            <summary>
            Get/Set inner border length of control
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.InnerBorderLightColor">
            <summary>
            Get/Set Inner border light color of control
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.MiddleBorderColor">
            <summary>
            Get/Set Middle Border color of control
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.MiddleBorderLength">
            <summary>
            Get/Set Middle border length of control
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.OffColor">
            <summary>
            Specify the color of indicator when Value=false
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.OffGradientColor">
            <summary>
            Specify the Gradient Color of indicator when Value=false
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.OnColor">
            <summary>
            Specify the Gradient color of indicator when Value=true
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.OnGradientColor">
            <summary>
            Specify the Gradient Color of indicator when Value=true
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.OuterBorderDarkColor">
            <summary>
            Get/Set outer border dark color of control
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.OuterBorderLength">
            <summary>
            Get/Set outer border length of control
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.OuterBorderLightColor">
            <summary>
            Get/Set outer border light color of control
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.RoundRadius">
            <summary>
            Get/Set Round Radius of Round Rectangle Border of control
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.Shape">
            <summary>
            Get/Set the indicator shape
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.ShinePosition">
            <summary>
            Get/Set the shine position of the background gradient rendering
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.TextPosition">
            <summary>
            Get/Set the text position
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.TextVisible">
            <summary>
            Get/Set the visibility of the text 
            </summary>
        </member>
        <member name="P:HslControls.HMI.HMILedSingle.Value">
            <summary>
            Get/Set the value of the indicator
            </summary>
        </member>
        <member name="F:HslControls.HMI.HMILedSingle.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HMI.HMILedSingle.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HMI.HMILedSingle.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslAgvCar">
            <summary>
            Agv小车控件
            </summary>
        </member>
        <member name="M:HslControls.HslAgvCar.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="P:HslControls.HslAgvCar.AgvColor">
            <summary>
            获取或设置当前AGV小车的颜色信息
            </summary>
        </member>
        <member name="P:HslControls.HslAgvCar.TireColor">
            <summary>
            获取或设置当前的轮胎的颜色
            </summary>
        </member>
        <member name="M:HslControls.HslAgvCar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重绘控件的
            </summary>
            <param name="e">重绘事件</param>
        </member>
        <member name="M:HslControls.HslAgvCar.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="F:HslControls.HslAgvCar.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslAgvCar.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslAgvCar.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslArrow">
            <summary>
            箭头控件类
            </summary>
        </member>
        <member name="M:HslControls.HslArrow.#ctor">
            <summary>
            实例化一个默认的箭头控件
            </summary>
        </member>
        <member name="P:HslControls.HslArrow.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslArrow.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslArrow.ForeColor">
            <summary>
            获取或设置控件的前景色
            </summary>
        </member>
        <member name="P:HslControls.HslArrow.EdgeColor">
            <summary>
            获取或设置箭头控件的边缘颜色
            </summary>
        </member>
        <member name="P:HslControls.HslArrow.ArrowDirection">
            <summary>
            获取或设置箭头控件的方向
            </summary>
        </member>
        <member name="P:HslControls.HslArrow.ArrowBoth">
            <summary>
            箭头是否应用于两头
            </summary>
        </member>
        <member name="P:HslControls.HslArrow.ArrowBackColor">
            <summary>
            获取或设置箭头背景的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslArrow.FactorX">
            <summary>
            获取或设置横向宽度的比例值，范围0-1
            </summary>
        </member>
        <member name="P:HslControls.HslArrow.FactorY">
            <summary>
            获取或设置纵向宽度的比例值，范围0-0.5
            </summary>
        </member>
        <member name="P:HslControls.HslArrow.UseGradient">
            <summary>
            获取或设置本箭头控件是否使用渐进色
            </summary>
        </member>
        <member name="M:HslControls.HslArrow.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重绘控件的
            </summary>
            <param name="e">重绘事件</param>
        </member>
        <member name="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)">
            <summary>
            绘制当前控件的界面到指定的绘图上下文里面，默认位置0，0，需要指定宽度和高度信息
            </summary>
            <param name="g">绘图上下文</param>
            <param name="width">宽度信息</param>
            <param name="height">高度信息</param>
        </member>
        <member name="F:HslControls.HslArrow.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslArrow.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslArrow.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslBadge">
            <summary>
            徽章控件
            </summary>
        </member>
        <member name="M:HslControls.HslBadge.#ctor">
            <summary>
            实例化一个徽章的对象
            </summary>
        </member>
        <member name="P:HslControls.HslBadge.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslBadge.AutoSize">
            <summary>
            获取或设置当前控件的大小是否自动
            </summary>
        </member>
        <member name="P:HslControls.HslBadge.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslBadge.ForeColor">
            <summary>
            获取或设置控件的前景色
            </summary>
        </member>
        <member name="P:HslControls.HslBadge.RightText">
            <summary>
            获取或设置当前徽章的右侧的文本
            </summary>
        </member>
        <member name="P:HslControls.HslBadge.SpaceWidth">
            <summary>
            获取或设置当前的绘制的文本的左右侧的间隙
            </summary>
        </member>
        <member name="P:HslControls.HslBadge.RoundCorner">
            <summary>
            获取或设置当前的四个圆角的弧度大小
            </summary>
        </member>
        <member name="P:HslControls.HslBadge.LeftBackground">
            <summary>
            获取或设置左侧说明文本的背景颜色
            </summary>
        </member>
        <member name="P:HslControls.HslBadge.RightBackground">
            <summary>
            获取或设置右侧说明文本的背景颜色
            </summary>
        </member>
        <member name="P:HslControls.HslBadge.RightForeground">
            <summary>
            获取或设置右侧说明文本的前景色
            </summary>
        </member>
        <member name="P:HslControls.HslBadge.PixelOffset">
            <summary>
            获取或设置当前绘图的像素偏移情况
            </summary>
        </member>
        <member name="P:HslControls.HslBadge.ButtonHoverStyle">
            <summary>
            获取或设置是否启用按钮悬浮样式，当你只使用右半部分的文本时，可以启用按钮的悬浮样式，设置True之后，当鼠标悬浮时，背景色会轻微的变化。
            </summary>
        </member>
        <member name="M:HslControls.HslBadge.OnMouseEnter(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslBadge.OnMouseLeave(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslBadge.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslBadge.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="M:HslControls.HslBadge.PerformClick">
            <summary>
            触发一次点击的事件
            </summary>
        </member>
        <member name="F:HslControls.HslBadge.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslBadge.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslBadge.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HslControls.HslBagFilter.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslBagFilter.EdgeColor">
            <summary>
            获取或设置分类器控件的边缘颜色
            </summary>
        </member>
        <member name="P:HslControls.HslBagFilter.CenterColor">
            <summary>
            获取或设置分类器控件的中心颜色
            </summary>
        </member>
        <member name="P:HslControls.HslBagFilter.BorderColor">
            <summary>
            获取或设置分类器控件的边缘颜色
            </summary>
        </member>
        <member name="M:HslControls.HslBagFilter.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslBagFilter.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="F:HslControls.HslBagFilter.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslBagFilter.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslBagFilter.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslBarChart">
            <summary>
            一个柱形图的控件
            </summary>
        </member>
        <member name="M:HslControls.HslBarChart.#ctor">
            <summary>
            实例化一个默认的条形图的控件
            </summary>
        </member>
        <member name="P:HslControls.HslBarChart.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslBarChart.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslBarChart.ForeColor">
            <summary>
            获取或设置控件的前景色
            </summary>
        </member>
        <member name="P:HslControls.HslBarChart.ColorLinesAndText">
            <summary>
            获取或设置坐标轴及相关信息文本的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslBarChart.UseGradient">
            <summary>
            获取或设置本条形图控件是否使用渐进色
            </summary>
        </member>
        <member name="P:HslControls.HslBarChart.BarBackColor">
            <summary>
            获取或设置柱状图的背景颜色
            </summary>
        </member>
        <member name="P:HslControls.HslBarChart.ColorDashLines">
            <summary>
            获取或设置虚线的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslBarChart.IsRenderDashLine">
            <summary>
            获取或设置虚线是否进行显示
            </summary>
        </member>
        <member name="P:HslControls.HslBarChart.ValueSegment">
            <summary>
            获取或设置图形的纵轴分段数
            </summary>
        </member>
        <member name="P:HslControls.HslBarChart.ValueMaxLeft">
            <summary>
            获取或设置图形的纵坐标的最大值，该值必须大于最小值，该值为负数，最大值即为自动适配。
            </summary>
        </member>
        <member name="P:HslControls.HslBarChart.ValueMinLeft">
            <summary>
            获取或设置图形的纵坐标的最小值，该值必须小于最大值
            </summary>
        </member>
        <member name="P:HslControls.HslBarChart.Title">
            <summary>
            获取或设置图标的标题信息
            </summary>
        </member>
        <member name="P:HslControls.HslBarChart.IsShowBarValue">
            <summary>
            获取或设置是否显示柱状图的值文本
            </summary>
        </member>
        <member name="P:HslControls.HslBarChart.ShowBarValueFormat">
            <summary>
            获取或设置柱状图显示值的格式化信息，可以带单位
            </summary>
        </member>
        <member name="P:HslControls.HslBarChart.BarPercentWidth">
            <summary>
            获取或设置柱状图占平均宽度的百分比，默认0.8，即80%
            </summary>
        </member>
        <member name="P:HslControls.HslBarChart.IsAoordinateRoundInt">
            <summary>
            获取或设置纵轴是否强制使用整型
            </summary>
        </member>
        <member name="M:HslControls.HslBarChart.SetDataSource(System.Int32[])">
            <summary>
            设置柱形图的数据内容，传入一个数组，数组的长度即为柱形图的数量
            </summary>
            <param name="data">数据的集合</param>
        </member>
        <member name="M:HslControls.HslBarChart.SetDataSource(System.Double[])">
            <inheritdoc cref="M:HslControls.HslBarChart.SetDataSource(System.Int32[])"/>
        </member>
        <member name="M:HslControls.HslBarChart.SetDataSource(System.Int32[],System.String[])">
            <summary>
            设置柱形图的数据内容
            </summary>
            <param name="data">数据的集合</param>
            <param name="texts">底部的描述信息</param>
        </member>
        <member name="M:HslControls.HslBarChart.SetDataSource(System.Double[],System.String[])">
            <inheritdoc cref="M:HslControls.HslBarChart.SetDataSource(System.Int32[],System.String[])"/>
        </member>
        <member name="M:HslControls.HslBarChart.SetDataSource(System.Int32[],System.String[],System.Drawing.Color[])">
            <summary>
            设置柱形图的数据内容
            </summary>
            <param name="data">数据的集合</param>
            <param name="texts">底部的描述信息</param>
            <param name="colors">每个柱形图的颜色</param>
        </member>
        <member name="M:HslControls.HslBarChart.SetDataSource(System.Double[],System.String[],System.Drawing.Color[])">
            <inheritdoc cref="M:HslControls.HslBarChart.SetDataSource(System.Int32[],System.String[],System.Drawing.Color[])"/>
        </member>
        <member name="M:HslControls.HslBarChart.SetDataSource(System.Collections.Generic.Dictionary{System.String,System.Double[]},System.String[],System.Drawing.Color[])">
            <summary>
            设置多个柱状图控件信息，数组长度需要一致，X轴文本信息，每种柱状图的颜色信息，如果有两种柱状图，则设置两个数组的Color即可。
            </summary>
            <param name="datas">词典数据</param>
            <param name="texts">文本信息</param>
            <param name="colors">颜色信息，长度为词典的长度信息</param>
        </member>
        <member name="M:HslControls.HslBarChart.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重绘控件的
            </summary>
            <param name="e">重绘事件</param>
        </member>
        <member name="M:HslControls.HslBarChart.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="M:HslControls.HslBarChart.AddLeftAuxiliary(System.Single)">
            <summary>
            新增一条左侧的辅助线，使用默认的文本颜色
            </summary>
            <param name="value">数据值</param>
        </member>
        <member name="M:HslControls.HslBarChart.AddLeftAuxiliary(System.Single,System.Drawing.Color)">
            <summary>
            新增一条左侧的辅助线，使用指定的颜色
            </summary>
            <param name="value">数据值</param>
            <param name="lineColor">线条颜色</param>
        </member>
        <member name="M:HslControls.HslBarChart.AddLeftAuxiliary(System.Single,System.Drawing.Color,System.Single,System.Boolean)">
            <summary>
            新增一条左侧的辅助线
            </summary>
            <param name="value">数据值</param>
            <param name="lineColor">线条颜色</param>
            <param name="lineThickness">线条宽度</param>
            <param name="isDashLine">是否是虚线</param>
        </member>
        <member name="M:HslControls.HslBarChart.AddRightAuxiliary(System.Single)">
            <summary>
            新增一条右侧的辅助线，使用默认的文本颜色
            </summary>
            <param name="value">数据值</param>
        </member>
        <member name="M:HslControls.HslBarChart.AddRightAuxiliary(System.Single,System.Drawing.Color)">
            <summary>
            新增一条右侧的辅助线，使用指定的颜色
            </summary>
            <param name="value">数据值</param>
            <param name="lineColor">线条颜色</param>
        </member>
        <member name="M:HslControls.HslBarChart.AddRightAuxiliary(System.Single,System.Drawing.Color,System.Single,System.Boolean)">
            <summary>
            新增一条右侧的辅助线
            </summary>
            <param name="value">数据值</param>
            <param name="lineColor">线条颜色</param>
            <param name="lineThickness">线条宽度</param>
            <param name="isDashLine">是否是虚线的信息</param>
        </member>
        <member name="M:HslControls.HslBarChart.RemoveAuxiliary(System.Single)">
            <summary>
            移除所有的指定值的辅助曲线，包括左边的和右边的
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:HslControls.HslBarChart.RemoveAllAuxiliary">
            <summary>
            移除所有的辅助线
            </summary>
        </member>
        <member name="F:HslControls.HslBarChart.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslBarChart.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslBarChart.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslBattery">
            <summary>
            一个电池控件，用来展示电池的多少的
            </summary>
        </member>
        <member name="M:HslControls.HslBattery.#ctor">
            <summary>
            实例化一个默认的电池控件对象
            </summary>
        </member>
        <member name="P:HslControls.HslBattery.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslBattery.BatteryBackColor">
            <summary>
            获取或设置电池的背景颜色
            </summary>
        </member>
        <member name="P:HslControls.HslBattery.Value">
            <summary>
            获取或设置当前的数值
            </summary>
        </member>
        <member name="P:HslControls.HslBattery.ValueMax">
            <summary>
            获取或设置当前数值的最大值
            </summary>
        </member>
        <member name="P:HslControls.HslBattery.ValueMin">
            <summary>
            获取或设置当前数值的最小值
            </summary>
        </member>
        <member name="P:HslControls.HslBattery.BatteryStyle">
            <summary>
            获取或设置电池控件是否是横向的还是纵向的
            </summary>
        </member>
        <member name="P:HslControls.HslBattery.IsTextRender">
            <summary>
            获取或设置是否显示文本提示信息的文本
            </summary>
        </member>
        <member name="P:HslControls.HslBattery.StringFormat">
            <summary>
            获取或设置显示的文本的信息内容
            </summary>
        </member>
        <member name="P:HslControls.HslBattery.Color1">
            <summary>
            获取或设置电池的第一区间的前景颜色
            </summary>
        </member>
        <member name="P:HslControls.HslBattery.Color2">
            <summary>
            获取或设置电池的第二区间的前景颜色
            </summary>
        </member>
        <member name="P:HslControls.HslBattery.Color3">
            <summary>
            获取或设置电池的第三区间的前景颜色
            </summary>
        </member>
        <member name="P:HslControls.HslBattery.Color4">
            <summary>
            获取或设置电池的第四区间的前景颜色
            </summary>
        </member>
        <member name="P:HslControls.HslBattery.Color5">
            <summary>
            获取或设置电池的第五区间的前景颜色
            </summary>
        </member>
        <member name="P:HslControls.HslBattery.Separatrix1">
            <summary>
            获取或设置电池的第一区间和第二区间的分割值的百分比，默认0.85
            </summary>
        </member>
        <member name="P:HslControls.HslBattery.Separatrix2">
            <summary>
            获取或设置电池的第二区间和第三区间的分割值的百分比，默认0.60
            </summary>
        </member>
        <member name="P:HslControls.HslBattery.Separatrix3">
            <summary>
            获取或设置电池的第三区间和第四区间的分割值的百分比，默认0.40
            </summary>
        </member>
        <member name="P:HslControls.HslBattery.Separatrix4">
            <summary>
            获取或设置电池的第四区间和第五区间的分割值的百分比，默认0.15
            </summary>
        </member>
        <member name="P:HslControls.HslBattery.UseAnimation">
            <summary>
            获取或设置当前的控件是否启用动画信息
            </summary>
        </member>
        <member name="M:HslControls.HslBattery.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重绘控件的
            </summary>
            <param name="e">重绘事件</param>
        </member>
        <member name="M:HslControls.HslBattery.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="M:HslControls.HslBattery.PaintMain(System.Drawing.Graphics,System.Single,System.Single)">
            <summary>
            本控件的主要绘制方法
            </summary>
            <param name="g">绘图对象</param>
            <param name="width">宽度</param>
            <param name="height">高度</param>
        </member>
        <member name="F:HslControls.HslBattery.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslBattery.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslBattery.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslBlower">
            <summary>
            一个鼓风机的控件，支持四个方向随意摆放
            </summary>
        </member>
        <member name="M:HslControls.HslBlower.#ctor">
            <summary>
            实例化
            </summary>
        </member>
        <member name="P:HslControls.HslBlower.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslBlower.ExportDirection">
            <summary>
            获取或设置风机的出口方向
            </summary>
        </member>
        <member name="P:HslControls.HslBlower.MoveSpeed">
            <summary>
            获取或设置传送带流动的速度，0为静止，正数为正向流动，负数为反向流动
            </summary>
        </member>
        <member name="P:HslControls.HslBlower.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslBlower.Color1">
            <summary>
            获取或设置颜色1
            </summary>
        </member>
        <member name="P:HslControls.HslBlower.Color2">
            <summary>
            获取或设置颜色2
            </summary>
        </member>
        <member name="P:HslControls.HslBlower.Color3">
            <summary>
            获取或设置颜色3
            </summary>
        </member>
        <member name="P:HslControls.HslBlower.Color4">
            <summary>
            获取或设置颜色4
            </summary>
        </member>
        <member name="P:HslControls.HslBlower.Color5">
            <summary>
            获取或设置颜色5
            </summary>
        </member>
        <member name="P:HslControls.HslBlower.Color6">
            <summary>
            获取或设置颜色6
            </summary>
        </member>
        <member name="P:HslControls.HslBlower.Color7">
            <summary>
            获取或设置颜色7
            </summary>
        </member>
        <member name="P:HslControls.HslBlower.Color8">
            <summary>
            获取或设置颜色8
            </summary>
        </member>
        <member name="M:HslControls.HslBlower.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重绘系统
            </summary>
            <param name="e">事件</param>
        </member>
        <member name="M:HslControls.HslBlower.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="F:HslControls.HslBlower.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslBlower.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslBlower.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslBottle">
            <summary>
            一个类似瓶子的控件对象模型
            </summary>
        </member>
        <member name="M:HslControls.HslBottle.#ctor">
            <summary>
            实例化一个新的控件对象
            </summary>
        </member>
        <member name="P:HslControls.HslBottle.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslBottle.Value">
            <summary>
            获取或设置瓶子的液位值。
            </summary>
        </member>
        <member name="P:HslControls.HslBottle.IsOpen">
            <summary>
            获取或设置瓶子是否处于打开的状态。
            </summary>
        </member>
        <member name="P:HslControls.HslBottle.BottleTag">
            <summary>
            获取或设置瓶子的标签信息，用于绘制在瓶子上的信息。
            </summary>
        </member>
        <member name="P:HslControls.HslBottle.HeadTag">
            <summary>
            获取或设置瓶子的备注信息，用于绘制在瓶子顶部的信息。
            </summary>
        </member>
        <member name="P:HslControls.HslBottle.DockHeight">
            <summary>
            获取或设置控件底座的高度
            </summary>
        </member>
        <member name="P:HslControls.HslBottle.ForeColorEdge">
            <summary>
            获取或设置前景色的边缘颜色内容
            </summary>
        </member>
        <member name="P:HslControls.HslBottle.ForeColorCenter">
            <summary>
            获取或设置前景色的中心颜色内容
            </summary>
        </member>
        <member name="P:HslControls.HslBottle.ForeColorTop">
            <summary>
            获取或设置前景色的顶部颜色内容
            </summary>
        </member>
        <member name="P:HslControls.HslBottle.BackColorEdge">
            <summary>
            获取或设置背景色的边缘颜色内容
            </summary>
        </member>
        <member name="P:HslControls.HslBottle.BackColorCenter">
            <summary>
            获取或设置背景色的中心颜色内容
            </summary>
        </member>
        <member name="P:HslControls.HslBottle.BackColorTop">
            <summary>
            获取或设置背景色的顶部颜色内容
            </summary>
        </member>
        <member name="M:HslControls.HslBottle.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重绘控件的外观
            </summary>
            <param name="e">事件</param>
        </member>
        <member name="M:HslControls.HslBottle.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="F:HslControls.HslBottle.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslBottle.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslBottle.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslButton">
            <summary>
            按钮控件，和windows自带的功能基本一致
            </summary>
        </member>
        <member name="M:HslControls.HslButton.#ctor">
            <summary>
            实例化一个对象
            </summary>
        </member>
        <member name="P:HslControls.HslButton.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslButton.ForeColor">
            <summary>
            获取或设置当前控件的文本的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslButton.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslButton.CornerRadius">
            <summary>
            设置按钮的圆角
            </summary>
        </member>
        <member name="P:HslControls.HslButton.Selected">
            <summary>
            用来设置按钮的选中状态
            </summary>
        </member>
        <member name="P:HslControls.HslButton.OriginalColor">
            <summary>
            按钮的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslButton.EnableColor">
            <summary>
            按钮的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslButton.ActiveColor">
            <summary>
            鼠标挪动时的活动颜色
            </summary>
        </member>
        <member name="P:HslControls.HslButton.SelectColor">
            <summary>
            按钮选中时候的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslButton.BorderVisiable">
            <summary>
            设置按钮的边框是否可见
            </summary>
        </member>
        <member name="P:HslControls.HslButton.UseGradient">
            <summary>
            获取或设置本按钮控件是否使用渐进色
            </summary>
        </member>
        <member name="P:HslControls.HslButton.RoundTopLeft">
            <summary>
            获取或设置按钮左上角是否圆角处理
            </summary>
        </member>
        <member name="P:HslControls.HslButton.RoundTopRight">
            <summary>
            获取或设置按钮右上角是否圆角处理
            </summary>
        </member>
        <member name="P:HslControls.HslButton.RoundButtomLeft">
            <summary>
            获取或设置按钮左下角是否圆角处理
            </summary>
        </member>
        <member name="P:HslControls.HslButton.RoundButtomRight">
            <summary>
            获取或设置按钮右下角是否圆角处理
            </summary>
        </member>
        <member name="P:HslControls.HslButton.CustomerInformation">
            <summary>
            存放用户需要保存的一些额外的信息
            </summary>
        </member>
        <member name="M:HslControls.HslButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslButton.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="M:HslControls.HslButton.OnMouseEnter(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslButton.OnMouseLeave(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslButton.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslButton.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslButton.PerformClick">
            <summary>
            触发一次点击的事件
            </summary>
        </member>
        <member name="F:HslControls.HslButton.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslButton.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslButton.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslChart">
            <summary>
            图表控件，一个支持多坐标轴以及多种数据绘制样式的图表。
            </summary>
        </member>
        <member name="M:HslControls.HslChart.#cctor">
            <summary>
            静态构造函数
            </summary>
        </member>
        <member name="P:HslControls.HslChart.Colors">
            <summary>
            颜色集合
            </summary>
        </member>
        <member name="P:HslControls.HslChart.ColorIndex">
            <summary>
            颜色序号
            </summary>
        </member>
        <member name="M:HslControls.HslChart.#ctor">
            <summary>
            实例化一个ZChart对象
            </summary>
        </member>
        <member name="F:HslControls.HslChart.AxisMargin">
            <summary>
            轴间隔(标题与轴的间隔，标签与绘图区的间隔)
            </summary>
        </member>
        <member name="F:HslControls.HslChart.MiniGridSum">
            <summary>
            分割器之间的小网格线条数
            </summary>
        </member>
        <member name="F:HslControls.HslChart.isDraging">
            <summary>
            鼠标拖动状态
            </summary>
        </member>
        <member name="F:HslControls.HslChart.markLineLocation">
            <summary>
            标记线位置
            </summary>
        </member>
        <member name="F:HslControls.HslChart.dragLocation">
            <summary>
            鼠标拖动位置
            </summary>
        </member>
        <member name="F:HslControls.HslChart.zoomTimes">
            <summary>
            缩放倍数
            </summary>
        </member>
        <member name="F:HslControls.HslChart.updateFlag">
            <summary>
            内容更新标识
            </summary>
        </member>
        <member name="P:HslControls.HslChart.MainToolTip">
            <summary>
            提示工具
            </summary>
        </member>
        <member name="P:HslControls.HslChart.LegendPanel">
            <summary>
            图例容器
            </summary>
        </member>
        <member name="F:HslControls.HslChart._markLinePen">
            <summary>
            标记线的绘制对象
            </summary>
        </member>
        <member name="F:HslControls.HslChart.needDrawMarkLine">
            <summary>
            是否需要绘制标记线
            </summary>
        </member>
        <member name="P:HslControls.HslChart.HorizontalSeparatorSum">
            <summary>
            横向分隔器个数
            </summary>
        </member>
        <member name="P:HslControls.HslChart.VerticalSeparatorSum">
            <summary>
            垂直分隔器个数
            </summary>
        </member>
        <member name="P:HslControls.HslChart.AxisX">
            <summary>
            X轴集合
            </summary>
        </member>
        <member name="P:HslControls.HslChart.AxisY">
            <summary>
            Y轴集合
            </summary>
        </member>
        <member name="P:HslControls.HslChart.Series">
            <summary>
            数据串集合
            </summary>
        </member>
        <member name="P:HslControls.HslChart.Border">
            <summary>
            绘图区域边界
            </summary>
        </member>
        <member name="P:HslControls.HslChart.OffsetX">
            <summary>
            横向偏移量
            </summary>
        </member>
        <member name="P:HslControls.HslChart.OffsetY">
            <summary>
            垂直偏移量
            </summary>
        </member>
        <member name="P:HslControls.HslChart.HorizontalGridVisible">
            <summary>
            显示/隐藏横向网格线
            </summary>
        </member>
        <member name="P:HslControls.HslChart.VerticalGridVisible">
            <summary>
            显示/隐藏垂直网格线
            </summary>
        </member>
        <member name="P:HslControls.HslChart.MiniGridVisible">
            <summary>
            显示/隐藏小网格线
            </summary>
        </member>
        <member name="P:HslControls.HslChart.MiniGridDashStyle">
            <summary>
            小网格线的样式
            </summary>
        </member>
        <member name="P:HslControls.HslChart.LegendVisible">
            <summary>
            显示/隐藏图例
            </summary>
        </member>
        <member name="P:HslControls.HslChart.LegendDock">
            <summary>
            图例停靠位置
            </summary>
            <remarks>无法设置为Fill或None</remarks>
        </member>
        <member name="P:HslControls.HslChart.LegendFont">
            <summary>
            图例字体
            </summary>
        </member>
        <member name="P:HslControls.HslChart.ZoomEnabled">
            <summary>
            缩放使能
            </summary>
        </member>
        <member name="P:HslControls.HslChart.AllowDrag">
            <summary>
            是否允许鼠标拖动
            </summary>
        </member>
        <member name="P:HslControls.HslChart.MarkLineVisible">
            <summary>
            显示/隐藏标记线
            </summary>
        </member>
        <member name="P:HslControls.HslChart.MarkLineColor">
            <summary>
            标记线颜色
            </summary>
        </member>
        <member name="P:HslControls.HslChart.SelectPointEnabled">
            <summary>
            查找数据点使能
            </summary>
        </member>
        <member name="P:HslControls.HslChart.SelectMode">
            <summary>
            查找数据点的模式
            </summary>
        </member>
        <member name="P:HslControls.HslChart.AxisXIndexForSelect">
            <summary>
            使用X值查找模式时，X值所对应的X轴序号。
            </summary>
        </member>
        <member name="P:HslControls.HslChart.AxisYIndexForSelect">
            <summary>
            使用Y值查找模式时，Y值所对应的Y轴序号。
            </summary>
        </member>
        <member name="E:HslControls.HslChart.GotChartPoint">
            <summary>
            获取到数据点事件
            </summary>
        </member>
        <member name="M:HslControls.HslChart.InitializeChart">
            <summary>
            初始化图表，为集合属性的元素设置引用。
            </summary>
        </member>
        <member name="M:HslControls.HslChart.UpdateAxisRange">
            <summary>
            更新坐标轴数据范围
            </summary>
        </member>
        <member name="M:HslControls.HslChart.UpdateChartBorder(System.Drawing.Graphics,System.Drawing.Size)">
            <summary>
            更新绘图区域边界
            </summary>
            <param name="g">绘图对象</param>
            <param name="size">控件尺寸</param>
        </member>
        <member name="M:HslControls.HslChart.UpdateAxisSize">
            <summary>
            更新坐标轴尺寸信息
            </summary>
        </member>
        <member name="M:HslControls.HslChart.DrawFrame(System.Drawing.Graphics)">
            <summary>
            绘制网格框架
            </summary>
            <param name="g">绘图对象</param>
        </member>
        <member name="M:HslControls.HslChart.DrawAxis(System.Drawing.Graphics)">
            <summary>
            绘制坐标轴
            </summary>
            <param name="g">绘图对象</param>
        </member>
        <member name="M:HslControls.HslChart.DrawAxisX(System.Drawing.Graphics)">
            <summary>
            绘制X轴
            </summary>
            <param name="g">绘图对象</param>
        </member>
        <member name="M:HslControls.HslChart.DrawAxisY(System.Drawing.Graphics)">
            <summary>
            绘制Y轴
            </summary>
            <param name="g">绘图对象</param>
        </member>
        <member name="M:HslControls.HslChart.DrawSeries(System.Drawing.Graphics)">
            <summary>
            绘制数据串
            </summary>
            <param name="g">绘图对象</param>
        </member>
        <member name="M:HslControls.HslChart.DrawMarkLine(System.Drawing.Graphics)">
            <summary>
            绘制标记线
            </summary>
            <param name="g">绘图对象</param>
        </member>
        <member name="M:HslControls.HslChart.SelectPoints(System.Drawing.Point)">
            <summary>
            查找数据点
            </summary>
            <param name="location">坐标</param>
        </member>
        <member name="M:HslControls.HslChart.GetPointLocation(System.Int32,System.Int32,HslControls.Charts.ChartPoint)">
            <summary>
            获取数据点在图表上的坐标
            </summary>
            <param name="scalesXAt">附着的X轴序号</param>
            <param name="scalesYAt">附着的Y轴序号</param>
            <param name="cp">数据点</param>
            <returns>坐标</returns>
        </member>
        <member name="M:HslControls.HslChart.CountLeft(System.Int32,System.Double)">
            <summary>
            计算数据点与图表左边缘的距离
            </summary>
            <param name="scalesXAt">附着的X轴序号</param>
            <param name="xValue">数据值X</param>
            <returns>距离</returns>
        </member>
        <member name="M:HslControls.HslChart.CountTop(System.Int32,System.Double)">
            <summary>
            计算数据点与图表上边缘的距离
            </summary>
            <param name="scalesYAt">附着的Y轴序号</param>
            <param name="yValue">数据值Y</param>
            <returns>距离</returns>
        </member>
        <member name="M:HslControls.HslChart.CountValueX(System.Int32,System.Double)">
            <summary>
            计算数据值X
            </summary>
            <param name="scalesXAt">附着的X轴序号</param>
            <param name="xLocation">图表的X坐标</param>
            <returns>数据值X</returns>
        </member>
        <member name="M:HslControls.HslChart.CountValueY(System.Int32,System.Double)">
            <summary>
            计算数据值Y
            </summary>
            <param name="scalesYAt">附着的Y轴序号</param>
            <param name="yLocation">图表的Y坐标</param>
            <returns>数据值Y</returns>
        </member>
        <member name="M:HslControls.HslChart.GetMouseValueStr(System.Drawing.Point)">
            <summary>
            获取鼠标位置的数据值
            </summary>
            <param name="mouseLocation">鼠标位置</param>
            <returns>数据值</returns>
        </member>
        <member name="M:HslControls.HslChart.DrawToBitmap(System.Drawing.Bitmap)">
            <summary>
            支持呈现到指定的位图
            </summary>
            <param name="bitmap">要绘制到的位图</param>
            <returns>位图</returns>
        </member>
        <member name="M:HslControls.HslChart.SetOffset(System.Int32,System.Int32)">
            <summary>
            设置图表偏移量
            </summary>
            <param name="offsetX">X轴偏移量</param>
            <param name="offsetY">Y轴偏移量</param>
        </member>
        <member name="M:HslControls.HslChart.SetZoomTimes(System.Double)">
            <summary>
            设置图表缩放倍数
            </summary>
            <remarks>设置正值放大，设置负值缩小，范围(-2~+0.5)</remarks>
            <param name="times">缩放倍数</param>
        </member>
        <member name="M:HslControls.HslChart.BeginUpdate">
            <summary>
            开始更新，在更新大量内容前调用。
            </summary>
            <remarks>更新结束后一定要调用<see cref="M:HslControls.HslChart.EndUpdate"/>方法，否则图表将不再绘制。</remarks>
        </member>
        <member name="M:HslControls.HslChart.EndUpdate">
            <summary>
            结束更新，在调用完<see cref="M:HslControls.HslChart.BeginUpdate"/>方法之后调用。
            </summary>
        </member>
        <member name="M:HslControls.HslChart.SelectPointsByLocation(System.Drawing.Point,System.Int32)">
            <summary>
            查找数据点
            </summary>
            <param name="location">坐标</param>
            <param name="range">范围</param>
            <returns>数据点数组</returns>
        </member>
        <member name="M:HslControls.HslChart.SelectPointsByX(System.Int32,System.Int32,System.Int32)">
            <summary>
            查找数据点
            </summary>
            <param name="indexOfAxisX">X坐标轴序号</param>
            <param name="x">图表上的X坐标</param>
            <param name="range">范围</param>
            <returns>数据点数组</returns>
        </member>
        <member name="M:HslControls.HslChart.SelectPointsByY(System.Int32,System.Int32,System.Int32)">
            <summary>
            查找数据点
            </summary>
            <param name="indexOfAxisY">Y坐标轴序号</param>
            <param name="y">图表上的Y坐标</param>
            <param name="range">范围</param>
            <returns>数据点数组</returns>
        </member>
        <member name="M:HslControls.HslChart.GetPointsContent1(HslControls.Charts.ChartPoint[])">
            <summary>
            获取数据点内容
            </summary>
            <param name="pts">数据点数组</param>
            <returns>数据点内容</returns>
        </member>
        <member name="M:HslControls.HslChart.GetPointsContent2(HslControls.Charts.ChartPoint[])">
            <summary>
            获取数据点内容
            </summary>
            <param name="pts">数据点数组</param>
            <returns>数据点内容</returns>
        </member>
        <member name="M:HslControls.HslChart.GetPointsContent3(HslControls.Charts.ChartPoint[])">
            <summary>
            获取数据点内容
            </summary>
            <param name="pts">数据点数组</param>
            <returns>数据点内容</returns>
        </member>
        <member name="M:HslControls.HslChart.SetToolTip(System.String)">
            <summary>
            设置提示文本
            </summary>
            <param name="caption">提示文本</param>
        </member>
        <member name="T:HslControls.HslClassifier">
            <summary>
            一个分类器的控件
            </summary>
        </member>
        <member name="M:HslControls.HslClassifier.#ctor">
            <summary>
            实例化一个分类器的对象
            </summary>
        </member>
        <member name="P:HslControls.HslClassifier.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslClassifier.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslClassifier.ForeColor">
            <summary>
            获取或设置控件的前景色
            </summary>
        </member>
        <member name="P:HslControls.HslClassifier.EdgeColor">
            <summary>
            获取或设置分类器控件的边缘颜色
            </summary>
        </member>
        <member name="P:HslControls.HslClassifier.CenterColor">
            <summary>
            获取或设置分类器控件的中心颜色
            </summary>
        </member>
        <member name="P:HslControls.HslClassifier.BorderColor">
            <summary>
            获取或设置分类器控件的边缘颜色
            </summary>
        </member>
        <member name="P:HslControls.HslClassifier.TextBackColor">
            <summary>
            获取或设置分类器控件文本的背景颜色
            </summary>
        </member>
        <member name="M:HslControls.HslClassifier.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            控件的重绘事件
            </summary>
            <param name="e">事件</param>
        </member>
        <member name="M:HslControls.HslClassifier.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="F:HslControls.HslClassifier.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslClassifier.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslClassifier.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslClock">
            <summary>
            实例化一个时钟的控件，支持时分秒的显示，
            </summary>
        </member>
        <member name="M:HslControls.HslClock.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="M:HslControls.HslClock.OnLoad(System.EventArgs)">
            <summary>
            重写窗体加载的方法
            </summary>
            <param name="e">事件</param>
        </member>
        <member name="M:HslControls.HslClock.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
             重写控件界面绘制的方法
            </summary>
            <param name="e">绘制事件</param>
        </member>
        <member name="M:HslControls.HslClock.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="M:HslControls.HslClock.OnSizeChanged(System.EventArgs)">
            <summary>
            重写当控件大小变化的的方法
            </summary>
            <param name="e">大小改变的事件</param>
        </member>
        <member name="P:HslControls.HslClock.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslClock.Font">
            <summary>
            获取或设置控件的字体信息
            </summary>
        </member>
        <member name="P:HslControls.HslClock.BackgroundImageLayout">
            <summary>
            用于组件的背景图像布局
            </summary>
        </member>
        <member name="P:HslControls.HslClock.HourColor">
            <summary>
            获取或设置时钟指针的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslClock.MinuteColor">
            <summary>
            获取或设置分钟指针的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslClock.SecondColor">
            <summary>
            获取或设置秒钟指针的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslClock.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslClock.IsSecondStep">
            <summary>
            获取或设置秒针是否按照每秒前进还是连续变化
            </summary>
        </member>
        <member name="P:HslControls.HslClock.ClockBackColor">
            <summary>
            获取或设置时钟的背景颜色
            </summary>
        </member>
        <member name="P:HslControls.HslClock.ForeColor">
            <summary>
            获取或设置文本的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslClock.IsShowCalendar">
            <summary>
            获取或设置控件是否显示日期信息
            </summary>
        </member>
        <member name="P:HslControls.HslClock.IsShowWeek">
            <summary>
            获取或设置控件是否显示星期的信息
            </summary>
        </member>
        <member name="F:HslControls.HslClock.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslClock.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslClock.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslCncCenter">
            <summary>
            加工中心的控件信息
            </summary>
        </member>
        <member name="M:HslControls.HslCncCenter.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="P:HslControls.HslCncCenter.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslCncCenter.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslCncCenter.CncDoorState">
            <summary>
            获取或设置cnc门开合的情况，0为完全打开，100为完全闭合
            </summary>
        </member>
        <member name="P:HslControls.HslCncCenter.LightRed">
            <summary>
            是否显示红灯的信息
            </summary>
        </member>
        <member name="P:HslControls.HslCncCenter.LightYellow">
            <summary>
            是否显示黄灯的信息
            </summary>
        </member>
        <member name="P:HslControls.HslCncCenter.LightGreen">
            <summary>
            是否显示绿灯的信息
            </summary>
        </member>
        <member name="M:HslControls.HslCncCenter.SetDoorState(System.Single)">
            <summary>
            使用动画的形式来操作门，需要指定门的开关状态，0是开，100是关
            </summary>
            <param name="doorState">门的开关状态，0是开，100是关</param>
        </member>
        <member name="M:HslControls.HslCncCenter.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重绘控件的
            </summary>
            <param name="e">重绘事件</param>
        </member>
        <member name="M:HslControls.HslCncCenter.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="F:HslControls.HslCncCenter.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslCncCenter.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslCncCenter.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslConveyer">
            <summary>
            一个传送带的控件
            </summary>
        </member>
        <member name="M:HslControls.HslConveyer.#ctor">
            <summary>
            实例化一个传送带的控件对象
            </summary>
        </member>
        <member name="M:HslControls.HslConveyer.#ctor(System.Boolean)">
            <summary>
            实例化一个传送带的控件对象
            </summary>
        </member>
        <member name="P:HslControls.HslConveyer.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslConveyer.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslConveyer.ForeColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslConveyer.MoveSpeed">
            <summary>
            获取或设置传送带流动的速度，0为静止，正数为正向流动，负数为反向流动，一般情况值范围为 -9 ~ 9
            </summary>
        </member>
        <member name="P:HslControls.HslConveyer.ConveyerActive">
            <summary>
            获取或设置管道线是否激活液体显示
            </summary>
        </member>
        <member name="P:HslControls.HslConveyer.CircularRadius">
            <summary>
            获取或设置两侧的圆圈的半径，当且仅当ConveyerStyle属性不为Horizontal枚举时成立
            </summary>
        </member>
        <member name="P:HslControls.HslConveyer.ConveyerStyle">
            <summary>
            获取或设置传送带的样式，水平，还是上坡，还是下坡
            </summary>
        </member>
        <member name="M:HslControls.HslConveyer.TimerExecute">
            <summary>
            定时执行的功能方法，用于计算偏移信息和角度信息
            </summary>
        </member>
        <member name="M:HslControls.HslConveyer.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重绘控件的界面信息
            </summary>
            <param name="e">事件</param>
        </member>
        <member name="M:HslControls.HslConveyer.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="F:HslControls.HslConveyer.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslConveyer.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslConveyer.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslConveyerStyle">
            <summary>
            皮带链的样式，选择水平还是下坡，还是上坡
            </summary>
        </member>
        <member name="F:HslControls.HslConveyerStyle.Horizontal">
            <summary>
            水平
            </summary>
        </member>
        <member name="F:HslControls.HslConveyerStyle.Downslope">
            <summary>
            下坡
            </summary>
        </member>
        <member name="F:HslControls.HslConveyerStyle.Upslope">
            <summary>
            上坡
            </summary>
        </member>
        <member name="F:HslControls.HslConveyerStyle.Vertical">
            <summary>
            垂直
            </summary>
        </member>
        <member name="T:HslControls.HslConveyerRollers">
            <summary>
            一个滚筒的控件
            </summary>
        </member>
        <member name="M:HslControls.HslConveyerRollers.#ctor">
            <summary>
            实例化一个滚筒的控件对象
            </summary>
        </member>
        <member name="P:HslControls.HslConveyerRollers.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslConveyerRollers.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslConveyerRollers.ForeColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslConveyerRollers.MoveSpeed">
            <summary>
            获取或设置传送带流动的速度，0为静止，正数为正向流动，负数为反向流动
            </summary>
        </member>
        <member name="P:HslControls.HslConveyerRollers.CircularRadius">
            <summary>
            获取或设置两侧的圆圈的半径，当且仅当ConveyerStyle属性不为Horizontal枚举时成立
            </summary>
        </member>
        <member name="P:HslControls.HslConveyerRollers.ConveyerStyle">
            <summary>
            获取或设置传送带的样式，水平，还是上坡，还是下坡
            </summary>
        </member>
        <member name="P:HslControls.HslConveyerRollers.DistributeDensity">
            <summary>
            获取或设置传送带的滚筒密度，默认是1，完全分布，大于1则表示更密，小于1表示更稀疏
            </summary>
        </member>
        <member name="P:HslControls.HslConveyerRollers.UpPercent">
            <summary>
            获取或设置上边的偏移量信息，用于3D的传送带显示
            </summary>
        </member>
        <member name="P:HslControls.HslConveyerRollers.RightPercent">
            <summary>
            获取或设置右边的偏移量信息，用于3D的传送带显示
            </summary>
        </member>
        <member name="M:HslControls.HslConveyerRollers.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重绘控件的界面信息
            </summary>
            <param name="e">事件</param>
        </member>
        <member name="M:HslControls.HslConveyerRollers.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="F:HslControls.HslConveyerRollers.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslConveyerRollers.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslConveyerRollers.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslCoolFan">
            <summary>
            冷却风扇控件
            </summary>
        </member>
        <member name="M:HslControls.HslCoolFan.#ctor">
            <summary>
            实例化一个冷却风扇控件
            </summary>
        </member>
        <member name="P:HslControls.HslCoolFan.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslCoolFan.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslCoolFan.EdgeColor">
            <summary>
            获取或设置阀门控件的边缘颜色
            </summary>
        </member>
        <member name="P:HslControls.HslCoolFan.CenterColor">
            <summary>
            获取或设置阀门控件的边缘颜色
            </summary>
        </member>
        <member name="P:HslControls.HslCoolFan.MoveSpeed">
            <summary>
            获取或设置泵的动画速度，0为静止，正数为正向流动，负数为反向流动
            </summary>
        </member>
        <member name="M:HslControls.HslCoolFan.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重绘控件的
            </summary>
            <param name="e">重绘事件</param>
        </member>
        <member name="M:HslControls.HslCoolFan.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="F:HslControls.HslCoolFan.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslCoolFan.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslCoolFan.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslCurve">
            <summary>
            曲线控件信息，可以用于显示一些实时的曲线信息，同时支持对曲线控件的一些简单的交互
            </summary>
        </member>
        <member name="M:HslControls.HslCurve.#ctor">
            <summary>
            实例化一个曲线显示的控件
            </summary>
        </member>
        <member name="P:HslControls.HslCurve.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslCurve.ReferenceAxisLeft">
            <summary>
            获取或设置图形的左轴的坐标轴信息
            </summary>
        </member>
        <member name="P:HslControls.HslCurve.ReferenceAxisRight">
            <summary>
            获取或设置图形的右轴的坐标轴信息
            </summary>
        </member>
        <member name="P:HslControls.HslCurve.ValueSegment">
            <summary>
            获取或设置图形的纵轴分段数
            </summary>
        </member>
        <member name="P:HslControls.HslCurve.IsAbscissaStrech">
            <summary>
            获取或设置所有的数据是否强制在一个界面里显示
            </summary>
        </member>
        <member name="P:HslControls.HslCurve.StrechDataCountMax">
            <summary>
            获取或设置拉伸模式下的最大数据量
            </summary>
        </member>
        <member name="P:HslControls.HslCurve.IsRenderDashLine">
            <summary>
            获取或设置虚线是否进行显示
            </summary>
        </member>
        <member name="P:HslControls.HslCurve.ColorLinesAndText">
            <summary>
            获取或设置坐标轴及相关信息文本的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslCurve.ColorDashLines">
            <summary>
            获取或设置虚线的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslCurve.IntervalAbscissaText">
            <summary>
            获取或设置纵向虚线的分隔情况，单位为多少个数据
            </summary>
        </member>
        <member name="P:HslControls.HslCurve.TextAddFormat">
            <summary>
            获取或设置实时数据新增时文本相对应于时间的格式化字符串，默认HH:mm
            </summary>
        </member>
        <member name="P:HslControls.HslCurve.Title">
            <summary>
            获取或设置图标的标题信息
            </summary>
        </member>
        <member name="P:HslControls.HslCurve.IsRenderRightCoordinate">
            <summary>
            获取或设置是否显示右侧的坐标系信息
            </summary>
        </member>
        <member name="P:HslControls.HslCurve.CurveNameWidth">
            <summary>
            获取或设置曲线名称的布局宽度，默认为100
            </summary>
        </member>
        <member name="P:HslControls.HslCurve.PointsRadius">
            <summary>
            获取或设置所有的数据点显示的半径大小，默认是0，不显示数据点
            </summary>
        </member>
        <member name="P:HslControls.HslCurve.FontCalibration">
            <summary>
            获取或设置Y轴刻度文本的字体信息
            </summary>
        </member>
        <member name="P:HslControls.HslCurve.LeftRightWidth">
            <summary>
            获取或设置左右两侧的坐标轴的宽度，以像素为单位
            </summary>
        </member>
        <member name="P:HslControls.HslCurve.UpDownHeight">
            <summary>
            获取或设置上下两侧的空白的宽度，以像素为单位
            </summary>
        </member>
        <member name="M:HslControls.HslCurve.SetCurveText(System.String[])">
            <summary>
            设置曲线的横坐标文本，适用于显示一些固定的曲线信息
            </summary>
            <param name="descriptions">应该和曲线的点数一致</param>
        </member>
        <member name="M:HslControls.HslCurve.SetLeftCurve(System.String,System.Single[])">
            <summary>
            新增或修改一条指定关键字的左参考系曲线数据，需要指定数据，颜色随机，没有数据上限，线条宽度为1
            </summary>
            <param name="key">曲线关键字</param>
            <param name="data">曲线的具体数据</param>
        </member>
        <member name="M:HslControls.HslCurve.SetLeftCurve(System.String,System.Single[],System.Drawing.Color)">
            <summary>
            新增或修改一条指定关键字的左参考系曲线数据，需要指定数据，颜色，没有数据上限，线条宽度为1
            </summary>
            <param name="key">曲线关键字</param>
            <param name="data">数据内容</param>
            <param name="lineColor">曲线颜色</param>
        </member>
        <member name="M:HslControls.HslCurve.SetLeftCurve(System.String,System.Single[],System.Drawing.Color,HslControls.CurveStyle)">
            <summary>
            新增或修改一条指定关键字的左参考系曲线数据，需要指定数据，颜色，没有数据上限，线条宽度为1
            </summary>
            <param name="key">曲线关键字</param>
            <param name="data">数据内容</param>
            <param name="lineColor">曲线颜色</param>
            <param name="style">曲线的样式</param>
        </member>
        <member name="M:HslControls.HslCurve.SetRightCurve(System.String,System.Single[])">
            <summary>
            新增或修改一条指定关键字的右参考系曲线数据，需要指定数据，颜色随机，没有数据上限，线条宽度为1
            </summary>
            <param name="key">曲线关键字</param>
            <param name="data">数据内容</param>
        </member>
        <member name="M:HslControls.HslCurve.SetRightCurve(System.String,System.Single[],System.Drawing.Color)">
            <summary>
            新增或修改一条指定关键字的右参考系曲线数据，需要指定数据，颜色，没有数据上限，线条宽度为1
            </summary>
            <param name="key">曲线关键字</param>
            <param name="data">数据内容</param>
            <param name="lineColor">曲线颜色</param>
        </member>
        <member name="M:HslControls.HslCurve.SetRightCurve(System.String,System.Single[],System.Drawing.Color,HslControls.CurveStyle)">
            <summary>
            新增或修改一条指定关键字的右参考系曲线数据，需要指定数据，颜色，没有数据上限，线条宽度为1
            </summary>
            <param name="key">曲线关键字</param>
            <param name="data">数据内容</param>
            <param name="lineColor">曲线颜色</param>
            <param name="style">曲线的样式</param>
        </member>
        <member name="M:HslControls.HslCurve.SetCurve(System.String,System.Int32,System.Single[],System.Drawing.Color,System.Single,HslControls.CurveStyle)">
            <summary>
            新增或修改一条指定关键字的曲线数据，需要指定参考系及数据，颜色，线条宽度
            </summary>
            <param name="key">曲线关键字</param>
            <param name="referenceAxis">是否以左侧坐标轴为参照系</param>
            <param name="data">数据</param>
            <param name="lineColor">线条颜色</param>
            <param name="thickness">线条宽度</param>
            <param name="style">曲线的样式</param>
        </member>
        <member name="M:HslControls.HslCurve.RemoveCurve(System.String)">
            <summary>
            移除指定关键字的曲线
            </summary>
            <param name="key">曲线关键字</param>
        </member>
        <member name="M:HslControls.HslCurve.RemoveAllCurve">
            <summary>
            移除所有的曲线
            </summary>
        </member>
        <member name="M:HslControls.HslCurve.RemoveAllCurveData">
            <summary>
            移除所有曲线的数据
            </summary>
        </member>
        <member name="M:HslControls.HslCurve.GetCurveItem(System.String)">
            <summary>
            获取曲线图中已经存在的曲线对象，用于动态修改一些复杂的数据信息，如线宽，标记点，修改以前的数据内容等等
            </summary>
            <param name="key">关键字</param>
            <returns>曲线对象信息</returns>
        </member>
        <member name="M:HslControls.HslCurve.SaveToBitmap">
            <summary>
            将当前的图形曲线保存为图片内容，可用于存储本地的文件，或是打印到纸张，默认大小为控件的大小
            </summary>
            <returns>图片内容</returns>
        </member>
        <member name="M:HslControls.HslCurve.SaveToBitmap(System.Int32,System.Int32)">
            <summary>
            将当前的图形曲线保存为图片内容，可用于存储本地的文件，或是打印到纸张，使用指定的大小，显示的曲线可能和控件上的不一致
            </summary>
            <returns>图片内容</returns>
        </member>
        <member name="M:HslControls.HslCurve.AddCurveData(System.String,System.Single[],System.String[],System.Boolean)">
            <summary>
            新增指定关键字曲线的一个数据，注意该关键字的曲线必须存在，否则无效
            </summary>
            <param name="key">新增曲线的关键字</param>
            <param name="values">数据值</param>
            <param name="markTexts">标记的文本信息</param>
            <param name="isUpdateUI">是否刷新界面</param>
        </member>
        <member name="M:HslControls.HslCurve.AddCurveData(System.String,System.Single)">
            <summary>
            新增指定关键字曲线的一个数据，注意该关键字的曲线必须存在，否则无效
            </summary>
            <param name="key">曲线的关键字</param>
            <param name="value">数据值</param>
        </member>
        <member name="M:HslControls.HslCurve.AddCurveData(System.String,System.Single,System.String)">
            <summary>
            新增指定关键字曲线的一个数据，注意该关键字的曲线必须存在，否则无效
            </summary>
            <param name="key">曲线的关键字</param>
            <param name="value">数据值</param>
            <param name="markText">标记的本文信息</param>
        </member>
        <member name="M:HslControls.HslCurve.AddCurveData(System.String,System.Single[])">
            <summary>
            新增指定关键字曲线的一组数据，注意该关键字的曲线必须存在，否则无效
            </summary>
            <param name="key">曲线的关键字</param>
            <param name="values">数组值</param>
        </member>
        <member name="M:HslControls.HslCurve.AddCurveData(System.String,System.Single[],System.String[])">
            <summary>
            新增指定关键字曲线的一组数据，注意该关键字的曲线必须存在，否则无效
            </summary>
            <param name="key">曲线的关键字</param>
            <param name="values">数组值</param>
            <param name="markTexts">标记的本文信息</param>
        </member>
        <member name="M:HslControls.HslCurve.AddCurveData(System.String[],System.Single[])">
            <summary>
            新增指定关键字数组曲线的一组数据，注意该关键字的曲线必须存在，否则无效，一个数据对应一个数组
            </summary>
            <param name="keys">曲线的关键字数组</param>
            <param name="values">数组值</param>
        </member>
        <member name="M:HslControls.HslCurve.AddCurveData(System.String,System.String[],System.Single[])">
            <summary>
            新增指定关键字数组曲线的一组数据，注意该关键字的曲线必须存在，否则无效，一个数据对应一个数组
            </summary>
            <param name="axisText">自定义的横轴坐标数据</param>
            <param name="keys">曲线的关键字数组</param>
            <param name="values">数组值</param>
        </member>
        <member name="M:HslControls.HslCurve.AddCurveData(System.String[],System.Single[],System.String[])">
            <summary>
            新增指定关键字数组曲线的一组数据，注意该关键字的曲线必须存在，否则无效，一个数据对应一个数组
            </summary>
            <param name="keys">曲线的关键字数组</param>
            <param name="values">数组值</param>
            <param name="markTexts">标记的文本信息</param>
        </member>
        <member name="M:HslControls.HslCurve.AddCurveData(System.String,System.String[],System.Single[],System.String[])">
            <summary>
            新增指定关键字数组曲线的一组数据，注意该关键字的曲线必须存在，否则无效，一个数据对应一个数组
            </summary>
            <param name="axisText">自定义的横轴坐标数据</param>
            <param name="keys">曲线的关键字数组</param>
            <param name="values">数组值</param>
            <param name="markTexts">标记的文本信息</param>
        </member>
        <member name="M:HslControls.HslCurve.SetCurveVisible(System.String,System.Boolean)">
            <summary>
            设置一条曲线是否是可见的，如果该曲线不存在，则无效。
            </summary>
            <param name="key">关键字</param>
            <param name="visible">是否可见</param>
        </member>
        <member name="M:HslControls.HslCurve.SetCurveVisible(System.String[],System.Boolean)">
            <summary>
            设置多条曲线是否是可见的，如果该曲线不存在，则无效。
            </summary>
            <param name="keys">关键字</param>
            <param name="visible">是否可见</param>
        </member>
        <member name="M:HslControls.HslCurve.GetAllCurve">
            <summary>
            获取当前曲线的字典信息，所有的曲线都在这里面，可以进行一些自由的控制
            </summary>
            <returns>包含所有曲线的词典信息</returns>
        </member>
        <member name="M:HslControls.HslCurve.AddLeftAuxiliary(System.Single)">
            <summary>
            新增一条左侧的辅助线，使用默认的文本颜色
            </summary>
            <param name="value">数据值</param>
        </member>
        <member name="M:HslControls.HslCurve.AddLeftAuxiliary(System.Single,System.Drawing.Color)">
            <summary>
            新增一条左侧的辅助线，使用指定的颜色
            </summary>
            <param name="value">数据值</param>
            <param name="lineColor">线条颜色</param>
        </member>
        <member name="M:HslControls.HslCurve.AddLeftAuxiliary(System.Single,System.Drawing.Color,System.Single,System.Boolean)">
            <summary>
            新增一条左侧的辅助线
            </summary>
            <param name="value">数据值</param>
            <param name="lineColor">线条颜色</param>
            <param name="lineThickness">线条宽度</param>
            <param name="isDashLine">是否是虚线</param>
        </member>
        <member name="M:HslControls.HslCurve.AddRightAuxiliary(System.Single)">
            <summary>
            新增一条右侧的辅助线，使用默认的文本颜色
            </summary>
            <param name="value">数据值</param>
        </member>
        <member name="M:HslControls.HslCurve.AddRightAuxiliary(System.Single,System.Drawing.Color)">
            <summary>
            新增一条右侧的辅助线，使用指定的颜色
            </summary>
            <param name="value">数据值</param>
            <param name="lineColor">线条颜色</param>
        </member>
        <member name="M:HslControls.HslCurve.AddRightAuxiliary(System.Single,System.Drawing.Color,System.Single,System.Boolean)">
            <summary>
            新增一条右侧的辅助线
            </summary>
            <param name="value">数据值</param>
            <param name="lineColor">线条颜色</param>
            <param name="lineThickness">线条宽度</param>
            <param name="isDashLine">是否是虚线的信息</param>
        </member>
        <member name="M:HslControls.HslCurve.RemoveAuxiliary(System.Single)">
            <summary>
            移除所有的指定值的辅助曲线，包括左边的和右边的
            </summary>
            <param name="value">移除的数据值</param>
        </member>
        <member name="M:HslControls.HslCurve.RemoveAuxiliary(HslControls.AuxiliaryLine)">
            <summary>
            移除一个指定的辅助对象
            </summary>
            <param name="auxiliary">移除的数据值</param>
        </member>
        <member name="M:HslControls.HslCurve.RemoveAllAuxiliary">
            <summary>
            移除所有的辅助线
            </summary>
        </member>
        <member name="M:HslControls.HslCurve.AddAuxiliaryLabel(HslControls.AuxiliaryLable)">
            <summary>
            新增一条辅助标签
            </summary>
            <param name="auxiliaryLable">描述的标签值</param>
        </member>
        <member name="M:HslControls.HslCurve.RemoveAuxiliaryLable(HslControls.AuxiliaryLable)">
            <summary>
            移除指定的辅助标签
            </summary>
            <param name="auxiliaryLable">等待删除的对象</param>
        </member>
        <member name="M:HslControls.HslCurve.RemoveAllAuxiliaryLable">
            <summary>
            移除所有的辅助标签
            </summary>
        </member>
        <member name="M:HslControls.HslCurve.AddMarkText(HslControls.HslMarkText)">
            <summary>
            新增一个标记的文本信息
            </summary>
            <param name="markText">文本标记信息</param>
        </member>
        <member name="M:HslControls.HslCurve.RemoveMarkText(HslControls.HslMarkText)">
            <summary>
            移除一个标记的文本信息
            </summary>
            <param name="markText">文本标记信息</param>
        </member>
        <member name="M:HslControls.HslCurve.RemoveAllMarkText">
            <summary>
            移除所有的标记的文本信息
            </summary>
        </member>
        <member name="M:HslControls.HslCurve.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标移动的信息
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HslControls.HslCurve.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标点击的信息
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HslControls.HslCurve.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重绘控件的基本外观
            </summary>
            <param name="e">重绘事件</param>
        </member>
        <member name="M:HslControls.HslCurve.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="F:HslControls.HslCurve.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslCurve.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslCurve.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslMarkLine">
            <summary>
            曲线图里的直线标记信息
            </summary>
        </member>
        <member name="M:HslControls.HslMarkLine.#ctor">
            <summary>
            实例化一个默认的对象，默认参考左坐标轴，颜色为亮蓝色
            </summary>
        </member>
        <member name="P:HslControls.HslMarkLine.TextBrush">
            <summary>
            文本的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslMarkLine.CircleBrush">
            <summary>
            圆圈的画刷
            </summary>
        </member>
        <member name="P:HslControls.HslMarkLine.LinePen">
            <summary>
            线段颜色的标记
            </summary>
        </member>
        <member name="P:HslControls.HslMarkLine.Points">
            <summary>
            所有的点的集合
            </summary>
        </member>
        <member name="P:HslControls.HslMarkLine.Marks">
            <summary>
            所有的标记点的集合
            </summary>
        </member>
        <member name="P:HslControls.HslMarkLine.IsLineClosed">
            <summary>
            线段是否闭合
            </summary>
        </member>
        <member name="P:HslControls.HslMarkLine.IsLeftFrame">
            <summary>
            是否参照左侧的坐标轴
            </summary>
        </member>
        <member name="T:HslControls.HslMarkImage">
            <summary>
            曲线里标记图形的信息
            </summary>
        </member>
        <member name="M:HslControls.HslMarkImage.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="P:HslControls.HslMarkImage.Index">
            <summary>
            数据位置的索引
            </summary>
        </member>
        <member name="P:HslControls.HslMarkImage.OffsetY">
            <summary>
            Y轴的偏移位置，小于1则表示百分比信息，大于1则表示绝对的像素位置，小于0则表示不启用
            </summary>
        </member>
        <member name="P:HslControls.HslMarkImage.MarkImage">
            <summary>
            标记的图片信息
            </summary>
        </member>
        <member name="P:HslControls.HslMarkImage.ReferencePoint">
            <summary>
            标记点的在图片中的参考方式
            </summary>
        </member>
        <member name="P:HslControls.HslMarkImage.ScaleEnable">
            <summary>
            指示当前的图片是否随着滚轮缩放
            </summary>
        </member>
        <member name="T:HslControls.HslMarkText">
            <summary>
            曲线图里的文本标记信息
            </summary>
        </member>
        <member name="M:HslControls.HslMarkText.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="P:HslControls.HslMarkText.CurveKey">
            <summary>
            针对的曲线的关键字
            </summary>
        </member>
        <member name="P:HslControls.HslMarkText.Index">
            <summary>
            位置的索引
            </summary>
        </member>
        <member name="P:HslControls.HslMarkText.MarkText">
            <summary>
            标记的文本
            </summary>
        </member>
        <member name="P:HslControls.HslMarkText.MarkImage">
            <summary>
            标记的图片信息，和标记的文本只能二选其一
            </summary>
        </member>
        <member name="P:HslControls.HslMarkText.TextBrush">
            <summary>
            文本的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslMarkText.CircleBrush">
            <summary>
            圆圈的画刷
            </summary>
        </member>
        <member name="P:HslControls.HslMarkText.MarkTextOffect">
            <summary>
            文本的偏移标记信息
            </summary>
        </member>
        <member name="P:HslControls.HslMarkText.PositionStyle">
            <summary>
            点的标记状态
            </summary>
        </member>
        <member name="M:HslControls.HslMarkText.CalculateDirectionFromDataIndex(System.Single[],System.Int32)">
            <summary>
            根据数据和索引计算文本的绘制的位置
            </summary>
            <param name="data">数据信息</param>
            <param name="Index">索引</param>
            <returns>绘制的位置信息</returns>
        </member>
        <member name="M:HslControls.HslMarkText.CalculateDirectionFromDataIndex(System.Drawing.PointF[],System.Int32)">
            <summary>
            根据数据和索引计算文本的绘制的位置
            </summary>
            <param name="data">数据信息</param>
            <param name="Index">索引</param>
            <returns>绘制的位置信息</returns>
        </member>
        <member name="T:HslControls.MarkTextPositionStyle">
            <summary>
            标记点的样式信息
            </summary>
        </member>
        <member name="F:HslControls.MarkTextPositionStyle.Up">
            <summary>
            在标记点的上方
            </summary>
        </member>
        <member name="F:HslControls.MarkTextPositionStyle.Right">
            <summary>
            在标记点的右侧
            </summary>
        </member>
        <member name="F:HslControls.MarkTextPositionStyle.Down">
            <summary>
            在标记点的下方
            </summary>
        </member>
        <member name="F:HslControls.MarkTextPositionStyle.Left">
            <summary>
            在标记点的左侧
            </summary>
        </member>
        <member name="F:HslControls.MarkTextPositionStyle.Center">
            <summary>
            在标记点的中间位置
            </summary>
        </member>
        <member name="F:HslControls.MarkTextPositionStyle.Auto">
            <summary>
            自动选择位置
            </summary>
        </member>
        <member name="T:HslControls.HslMarkSectionBase">
            <summary>
            所有标记信息的基类，支持区间的表示
            </summary>
        </member>
        <member name="P:HslControls.HslMarkSectionBase.StartIndex">
            <summary>
            开始的数据位置
            </summary>
        </member>
        <member name="P:HslControls.HslMarkSectionBase.EndIndex">
            <summary>
            结束的数据位置
            </summary>
        </member>
        <member name="T:HslControls.HslMarkBackSection">
            <summary>
            在曲线控件中额外标记的区间显示，可以设置不同的背景颜色
            </summary>
        </member>
        <member name="M:HslControls.HslMarkBackSection.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="P:HslControls.HslMarkBackSection.BackColor">
            <summary>
            特殊标记的区间的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslMarkBackSection.MarkText">
            <summary>
            标记文本
            </summary>
        </member>
        <member name="T:HslControls.HslMarkForeSection">
            <summary>
            用于前景色标记的区段信息
            </summary>
        </member>
        <member name="M:HslControls.HslMarkForeSection.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="P:HslControls.HslMarkForeSection.StartHeight">
            <summary>
            绘制的起始高度
            </summary>
        </member>
        <member name="P:HslControls.HslMarkForeSection.Height">
            <summary>
            绘制是高度信息
            </summary>
        </member>
        <member name="P:HslControls.HslMarkForeSection.IsRenderTimeText">
            <summary>
            是否显示开始和结束的信息
            </summary>
        </member>
        <member name="P:HslControls.HslMarkForeSection.LinePen">
            <summary>
            特殊标记的区间的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslMarkForeSection.FontBrush">
            <summary>
            字体的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslMarkForeSection.MarkText">
            <summary>
            特殊标记的文本，如果不为空，则显示出来
            </summary>
        </member>
        <member name="P:HslControls.HslMarkForeSection.CursorTexts">
            <summary>
            光标处显示的信息
            </summary>
        </member>
        <member name="T:HslControls.HslCurveRange">
            <summary>
            曲线范围的类
            </summary>
        </member>
        <member name="M:HslControls.HslCurveRange.#ctor">
            <summary>
            实例化一个曲线范围的类
            </summary>
        </member>
        <member name="F:HslControls.HslCurveRange.Upper">
            <summary>
            上限的数据
            </summary>
        </member>
        <member name="F:HslControls.HslCurveRange.Lower">
            <summary>
            下限的数据
            </summary>
        </member>
        <member name="P:HslControls.HslCurveRange.LineThickness">
            <summary>
            线条的宽度
            </summary>
        </member>
        <member name="P:HslControls.HslCurveRange.Style">
            <summary>
            是否平滑的曲线显示，默认为False
            </summary>
        </member>
        <member name="P:HslControls.HslCurveRange.LineColor">
            <summary>
            曲线颜色
            </summary>
        </member>
        <member name="P:HslControls.HslCurveRange.ReferenceAxisIndex">
            <summary>
            是否左侧参考系，0为左侧，1为右侧，其他是辅助坐标轴
            </summary>
        </member>
        <member name="T:HslControls.HslCurveItem">
            <summary>
            曲线数据对象
            </summary>
        </member>
        <member name="M:HslControls.HslCurveItem.#ctor">
            <summary>
            实例化一个对象
            </summary>
        </member>
        <member name="F:HslControls.HslCurveItem.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="F:HslControls.HslCurveItem.MarkText">
            <summary>
            标记文本
            </summary>
        </member>
        <member name="P:HslControls.HslCurveItem.LineThickness">
            <summary>
            线条的宽度
            </summary>
        </member>
        <member name="P:HslControls.HslCurveItem.Style">
            <summary>
            曲线的样式选择，可选择线段，还是平滑曲线，还是虚线
            </summary>
        </member>
        <member name="P:HslControls.HslCurveItem.LineColor">
            <summary>
            曲线颜色
            </summary>
        </member>
        <member name="P:HslControls.HslCurveItem.ReferenceAxisIndex">
            <summary>
            是否左侧参考系，0为左侧，1为右侧，其他是辅助坐标轴
            </summary>
        </member>
        <member name="P:HslControls.HslCurveItem.Visible">
            <summary>
            本曲线是否显示出来，默认为显示
            </summary>
        </member>
        <member name="P:HslControls.HslCurveItem.LineRenderVisiable">
            <summary>
            用于曲线自身选择是否显示的情况的判断
            </summary>
        </member>
        <member name="P:HslControls.HslCurveItem.TitleRegion">
            <summary>
            标题实现的基本区域
            </summary>
        </member>
        <member name="P:HslControls.HslCurveItem.RenderFormat">
            <summary>
            本曲线在图形上显示的格式化信息，对历史数据有效
            </summary>
        </member>
        <member name="M:HslControls.HslCurveItem.GetLineBrush">
            <summary>
            获取当前的曲线的画刷资源
            </summary>
            <returns>画刷</returns>
        </member>
        <member name="T:HslControls.CurveStyle">
            <summary>
            曲线的样式
            </summary>
        </member>
        <member name="F:HslControls.CurveStyle.LineSegment">
            <summary>
            线段，原始的多个点之间的直线连接
            </summary>
        </member>
        <member name="F:HslControls.CurveStyle.Curve">
            <summary>
            曲线，相对于线段比较平滑
            </summary>
        </member>
        <member name="F:HslControls.CurveStyle.Section">
            <summary>
            截面，区域的面积一起显示
            </summary>
        </member>
        <member name="F:HslControls.CurveStyle.StepLine">
            <summary>
            阶梯线段，采用阶梯的样式表示
            </summary>
        </member>
        <member name="F:HslControls.CurveStyle.StepLineWithoutVertical">
            <summary>
            阶梯线段，没有竖向的信息
            </summary>
        </member>
        <member name="F:HslControls.CurveStyle.LineDot">
            <summary>
            点画线，类似 .......
            </summary>
        </member>
        <member name="F:HslControls.CurveStyle.CurveDot">
            <summary>
            点画曲线，类似 .......
            </summary>
        </member>
        <member name="F:HslControls.CurveStyle.LineDash">
            <summary>
            虚线，类似 -------
            </summary>
        </member>
        <member name="F:HslControls.CurveStyle.CurveDash">
            <summary>
            虚曲线，类似 -------
            </summary>
        </member>
        <member name="F:HslControls.CurveStyle.LineLongDath">
            <summary>
            长虚线，类似 -------
            </summary>
        </member>
        <member name="F:HslControls.CurveStyle.CurveLongDath">
            <summary>
            长虚曲线，类似 -------
            </summary>
        </member>
        <member name="T:HslControls.AuxiliaryLable">
            <summary>
            辅助标签的信息
            </summary>
        </member>
        <member name="M:HslControls.AuxiliaryLable.#ctor">
            <summary>
            实例化一个对象
            </summary>
        </member>
        <member name="P:HslControls.AuxiliaryLable.Text">
            <summary>
            标签的文本信息
            </summary>
        </member>
        <member name="P:HslControls.AuxiliaryLable.TextBrush">
            <summary>
            标签的文本颜色
            </summary>
        </member>
        <member name="P:HslControls.AuxiliaryLable.TextBack">
            <summary>
            标签的文本背景
            </summary>
        </member>
        <member name="P:HslControls.AuxiliaryLable.LocationX">
            <summary>
            标签的横轴位置，小于1则为百分比，大于1则为绝对值
            </summary>
        </member>
        <member name="T:HslControls.AuxiliaryLine">
            <summary>
            辅助线对象
            </summary>
        </member>
        <member name="P:HslControls.AuxiliaryLine.Value">
            <summary>
            实际的数据值
            </summary>
        </member>
        <member name="P:HslControls.AuxiliaryLine.PaintValue">
            <summary>
            实际的数据绘制的Y轴位置
            </summary>
        </member>
        <member name="P:HslControls.AuxiliaryLine.PaintValueBackUp">
            <summary>
            实际的数据绘制的Y轴位置，备份使用的
            </summary>
        </member>
        <member name="P:HslControls.AuxiliaryLine.LineColor">
            <summary>
            辅助线的颜色
            </summary>
        </member>
        <member name="P:HslControls.AuxiliaryLine.PenDash">
            <summary>
            辅助线的虚线画笔资源
            </summary>
        </member>
        <member name="P:HslControls.AuxiliaryLine.PenSolid">
            <summary>
            辅助线的实线画笔资源
            </summary>
        </member>
        <member name="P:HslControls.AuxiliaryLine.LineThickness">
            <summary>
            辅助线的宽度
            </summary>
        </member>
        <member name="P:HslControls.AuxiliaryLine.LineTextBrush">
            <summary>
            辅助线文本的画刷
            </summary>
        </member>
        <member name="P:HslControls.AuxiliaryLine.IsLeftFrame">
            <summary>
            是否左侧参考系，True为左侧，False为右侧
            </summary>
        </member>
        <member name="P:HslControls.AuxiliaryLine.IsDashStyle">
            <summary>
            辅助线是否是虚线，默认为虚线
            </summary>
        </member>
        <member name="M:HslControls.AuxiliaryLine.GetPen">
            <summary>
            获取真实的画笔
            </summary>
            <returns></returns>
        </member>
        <member name="M:HslControls.AuxiliaryLine.Dispose">
            <summary>
            释放内存信息
            </summary>
        </member>
        <member name="T:HslControls.HslCurveHelper">
            <summary>
            曲线功能相关的一些静态的辅助绘画方法。
            </summary>
        </member>
        <member name="M:HslControls.HslCurveHelper.DrawTextByPoint(System.Drawing.Graphics,System.String,System.Drawing.PointF,System.Drawing.Font,System.Drawing.Brush,HslControls.MarkTextPositionStyle,System.Int32)">
            <summary>
            将文本绘制到指定的位置
            </summary>
            <param name="g"></param>
            <param name="text"></param>
            <param name="center"></param>
            <param name="font"></param>
            <param name="brush"></param>
            <param name="markTextPosition"></param>
        </member>
        <member name="M:HslControls.HslCurveHelper.DrawHslMarkTextPoint(System.Drawing.Graphics,HslControls.HslMarkText,System.Drawing.PointF,System.Drawing.Font,HslControls.MarkTextPositionStyle)">
            <summary>
            绘制<see cref="T:HslControls.HslMarkText"/> 类型的标记数据到曲线图形上去
            </summary>
            <param name="g">会话资源</param>
            <param name="markText">标记信息</param>
            <param name="center">中心点</param>
            <param name="font">字体信息</param>
            <param name="markTextPosition">绘制的文本放向</param>
        </member>
        <member name="M:HslControls.HslCurveHelper.DrawLineCore(System.Drawing.Graphics,HslControls.HslCurveItem,System.Collections.Generic.List{System.Drawing.PointF},System.Int32,System.Single)">
            <summary>
            核心绘制曲线的方法，根据曲线的基本样式信息，所有的点的情况，点的圆点信息
            </summary>
            <param name="g">绘图上下文</param>
            <param name="line">曲线的基本样式信息</param>
            <param name="listPoints">所有的点的信息</param>
            <param name="pointsRadius">如果点位想要突出显示，就设置大于0</param>
            <param name="referenceY">基准的Y点位信息</param>
        </member>
        <member name="T:HslControls.ScaleMode">
            <summary>
            缩小放大的模式
            </summary>
        </member>
        <member name="F:HslControls.ScaleMode.None">
            <summary>
            不支持任何的缩放
            </summary>
        </member>
        <member name="F:HslControls.ScaleMode.OnlyX">
            <summary>
            只有X轴
            </summary>
        </member>
        <member name="F:HslControls.ScaleMode.Both">
            <summary>
            X轴和Y轴同时放大
            </summary>
        </member>
        <member name="F:HslControls.ScaleMode.XThenY">
            <summary>
            先X轴放大，再Y轴放大
            </summary>
        </member>
        <member name="T:HslControls.HslCurveHistory">
            <summary>
            一个高级的历史曲线的控件信息，适合用来显示不变的历史曲线，支持一些高级的操作功能
            </summary>
        </member>
        <member name="M:HslControls.HslCurveHistory.#ctor">
            <summary>
            实例化一个默认的历史曲线控件
            </summary>
        </member>
        <member name="M:HslControls.HslCurveHistory.OnLoad(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslCurveHistory.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslCurveHistory.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslCurveHistory.SetScrollPosition(System.Windows.Forms.ScrollEventArgs)">
            <summary>
            设置横向滚动条的位置信息
            </summary>
            <param name="e">位置信息</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.SetSyncHslCurveHistory(HslControls.HslCurveHistory)">
            <summary>
            设置一个同步的历史曲线控件，本历史曲线的工作将根据目标历史曲线控件来动作
            </summary>
            <param name="hslCurveHistory">目标历史曲线控件</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.ScrollToRight">
            <summary>
            将曲线的滚动条设置到最右侧
            </summary>
        </member>
        <member name="M:HslControls.HslCurveHistory.ScrollToIndex(System.Int32)">
            <summary>
            将曲线的滚动条设置到指定索引的位置，这个索引指的的数据所在位置的索引，所以可以根据时间来计算这个索引信息
            </summary>
            <param name="index">索引信息</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.ScrollToDateTime(System.DateTime)">
            <summary>
            将曲线的滚动条滚动到指定的时间上去
            </summary>
            <param name="dateTime">指定的时间</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.RenderCurveUI(System.Int32,System.Int32)">
            <summary>
            根据给定的数据索引来显示当前的曲线数据信息，需要设置过当前的数据信息
            </summary>
            <param name="start">起始索引</param>
            <param name="end">结束索引</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.RenderCurveUI(System.DateTime,System.DateTime)">
            <summary>
            根据给定的时间范围来显示当前的曲线数据信息，需要设置过当前的数据信息
            </summary>
            <param name="start">起始时间</param>
            <param name="end">结束时间</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.GetCurvePaintActualWidth">
            <summary>
            获取曲线绘制区域的实际像素宽度
            </summary>
            <returns>像素宽度</returns>
        </member>
        <member name="M:HslControls.HslCurveHistory.GetCurvePaintActualWidth(System.Int32)">
            <inheritdoc cref="M:HslControls.HslCurveHistory.GetCurvePaintActualWidth"/>
        </member>
        <member name="M:HslControls.HslCurveHistory.GetCurvePaintActualHeight(System.Int32)">
            <summary>
            获取曲线绘制区域的实际像素高度
            </summary>
            <param name="height">总高度信息</param>
            <returns>像素高度</returns>
        </member>
        <member name="M:HslControls.HslCurveHistory.IsPaintxInRenderRegion(System.Int32,System.Int32,System.Int32)">
            <summary>
            判断实际绘制的点位X，是否处于显示的区域里，为了防止误差，在两侧留有一些剩余宽度
            </summary>
            <param name="x">按照像素为单位的</param>
            <param name="width">实际画曲线的像素宽度</param>
            <param name="offset">偏移信息</param>
            <returns>是否显示</returns>
        </member>
        <member name="M:HslControls.HslCurveHistory.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            控件的重绘信息
            </summary>
            <param name="e">重绘的方法</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="M:HslControls.HslCurveHistory.PaintMain(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            绘制当前的曲线图形
            </summary>
            <param name="g">绘图上下文</param>
            <param name="width">宽度信息</param>
            <param name="height">高度信息</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.RenderCurveUI(System.Boolean)">
            <summary>
            更新整个的界面显示
            </summary>
            <param name="stretchToFull">是否铺满整个图形界面显示</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.CalculatePaintWidthAndScrollMax(System.Int32)">
            <summary>
            计算实际的需要绘制的像素宽度，以及计算滚动条的实际像素宽度
            </summary>
            <param name="width">曲线区域的实际像素宽度</param>
            <returns>计算实际曲线图形显示时需要绘制的像素宽度</returns>
        </member>
        <member name="M:HslControls.HslCurveHistory.OnDockChanged(System.EventArgs)">
            <summary>
            引发controls的dock的变化
            </summary>
            <param name="e">事件消息</param>
        </member>
        <member name="P:HslControls.HslCurveHistory.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.ForeColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.RenderRightCoordinate">
            <summary>
            获取或设置曲线控件是否显示右侧的坐标轴
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.ReferenceAxisLeft">
            <summary>
            获取或设置图形的左轴的坐标轴信息
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.ReferenceAxisRight">
            <summary>
            获取或设置图形的右轴的坐标轴信息
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.ValueSegment">
            <summary>
            获取或设置图形的纵轴分段数
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.CoordinateColor">
            <summary>
            或者或设置所有的实线坐标轴的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.DashCoordinateColor">
            <summary>
            或者或设置所有的虚线坐标轴的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.MarkLineColor">
            <summary>
            或者或设置所有的区间标记的线条颜色
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.MarkTextColor">
            <summary>
            或者或设置所有的区间标记的文本颜色
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.MarkBorderColor">
            <summary>
            或者或设置光标移动时显示信息的边框颜色
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.HoverBackColor">
            <summary>
            获取或设置鼠标移动的时候，显示的提示信息的背景颜色
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.MoveLineColor">
            <summary>
            获取或设置鼠标移动过程中的提示线的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.ScrollColor">
            <summary>
            获取或设置当前滚动条的颜色信息，默认为 <see cref="P:System.Drawing.Color.DimGray"/> 颜色
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.DataTipWidth">
            <summary>
            获取或设置鼠标移动过程中提示信息的宽度，如果是小于0表示自动宽度，如果是0表示不显示提示信息，如果大于0就表示绝对像素宽度
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.CurveNameWidth">
            <summary>
            获取或设置曲线名称的布局宽度，默认为150
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.IntervalAbscissaText">
            <summary>
            获取或设置纵向虚线的分隔情况，单位为多少个像素点
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.LeftWidth">
            <summary>
            获取或设置左坐标轴的宽度信息，单位为多少个像素点
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.RightWidth">
            <summary>
            获取或设置右坐标轴的宽度信息，单位为多少个像素点
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.TopCurveNameHeight">
            <summary>
            获取或设置顶部曲线名称部分的高度信息，单位为多少个像素点
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.ButtomHeight">
            <summary>
            获取或设置底部部分的高度信息，单位为多少个像素点
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.ScrollHeight">
            <summary>
            获取或设置底部滚动条部分的高度信息，单位为多少个像素点
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.DateTimeFormate">
            <summary>
            获取或设置曲线图里所有的时间的格式，默认是 yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.HoverDateTimeFormate">
            <summary>
            获取或设置曲线图里光标移动时下方显示的时间格式，默认是HH:mm:ss
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.HoverDateTimeWidth">
            <summary>
            获取或设置曲线图里光标移动时下方显示的矩形宽度信息，默认100
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.IsAllowSelectSection">
            <summary>
            获取或设置曲线是否禁止鼠标选择区间的功能。
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.IsAoordinateRoundInt">
            <summary>
            获取或设置纵轴是否强制使用整型
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.PointsRadius">
            <summary>
            获取或设置所有的数据点显示的半径大小，默认是-1，不显示数据点
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.MarkLineVisible">
            <summary>
            获取或设置鼠标移动的时候，是否显示鼠标的标记线，这个标记线跟随着光标移动
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.ReferenceAxis">
            <summary>
            获取或设置其他的坐标轴信息
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.RenderInvertedTriangle">
            <summary>
            获取或设置是否显示倒三角的信息，默认为True，如果显示不限制倒三角，则顶部会连线
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.RenderScaleInfo">
            <summary>
            获取或设置是否显示缩放倍率信息，默认为True，如果想要不显示右上角的倍率信息，则设置为False
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.ScaleMode">
            <summary>
            获取或设置当前曲线的缩放模式，默认只有X轴，还可以选择同时缩放，或是先缩放X轴后缩放Y轴
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.RightRemainWidth">
            <summary>
            获取或设置当前的曲线控件右侧的预留的空白宽度信息，像素为单位，默认200
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.IsOtherAxisHide">
            <summary>
            获取或设置当前的曲线控件的额外的轴是否隐藏，额外的轴主要指在属性<see cref="P:HslControls.HslCurveHistory.ReferenceAxis"/>配置的第三轴，第四轴，等等
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.IsRenderYTip">
            <summary>
            获取或设置光标移动时，是否在每个Y轴上显示光标位置对应的值（这个值反计算时存在一定的微小误差），默认为 true，显示
            </summary>
        </member>
        <member name="P:HslControls.HslCurveHistory.CurveRanges">
            <summary>
            获取或设置曲线范围的类信息
            </summary>
        </member>
        <member name="T:HslControls.HslCurveHistory.CurveDoubleClick">
            <summary>
            基于时间的曲线双击的委托方法
            </summary>
            <param name="hslCurve">曲线控件信息</param>
            <param name="index">数据的索引</param>
            <param name="dateTime">时间信息</param>
        </member>
        <member name="T:HslControls.HslCurveHistory.CurveCustomerDoubleClick">
            <summary>
            基于用户自定义的字符串的曲线双击的委托方法
            </summary>
            <param name="hslCurve">曲线控件信息</param>
            <param name="index">数据的索引</param>
            <param name="customer">时间信息</param>
        </member>
        <member name="E:HslControls.HslCurveHistory.onCurveDoubleClick">
            <summary>
            当鼠标在曲线上双击时触发，由此获取到点击的数据的索引位置，时间坐标
            </summary>
        </member>
        <member name="E:HslControls.HslCurveHistory.onCurveCustomerDoubleClick">
            <summary>
            当鼠标在曲线上双击时触发，由此获取到点击的数据的索引位置，用户自定义的坐标
            </summary>
        </member>
        <member name="T:HslControls.HslCurveHistory.CurveMouseMove">
            <summary>
            当鼠标在曲线上移动的时候触发的委托方法
            </summary>
            <param name="hslCurve">曲线控件信息</param>
            <param name="x">横坐标x</param>
            <param name="y">横坐标y</param>
        </member>
        <member name="E:HslControls.HslCurveHistory.onCurveMouseMove">
            <summary>
            当鼠标在曲线上移动时触发，由此获取到鼠标的移动位置
            </summary>
        </member>
        <member name="T:HslControls.HslCurveHistory.CurveRangeSelect">
            <summary>
            曲线的区间的委托签名
            </summary>
            <param name="hslCurve">曲线控件信息</param>
            <param name="markForeSection">传出</param>
        </member>
        <member name="E:HslControls.HslCurveHistory.onCurveRangeSelect">
            <summary>
            当鼠标在曲线上双击时触发，由此获取到点击的数据的索引位置，时间坐标
            </summary>
        </member>
        <member name="T:HslControls.HslCurveHistory.CurveScollScaleChanged">
            <summary>
            曲线的放大缩小倍数变化的委托签名
            </summary>
            <param name="hslCurve">曲线控件信息</param>
            <param name="scrollX">缩放信息</param>
            <param name="offsetPaintScrollX">显示偏移信息</param>
            <param name="scale">方法缩小系数</param>
        </member>
        <member name="E:HslControls.HslCurveHistory.OnScaleChanged">
            <summary>
            当曲线放大缩小调整的时候触发
            </summary>
        </member>
        <member name="E:HslControls.HslCurveHistory.OnScrollChanged">
            <summary>
            当曲线的滚动条滚动的时候触发事件
            </summary>
        </member>
        <member name="M:HslControls.HslCurveHistory.CalculateAuxiliaryPaintY(System.Int32)">
            <summary>
            计算所有的辅助线的缓存的文本信息，在界面大小变化的时候，需要重新计算
            </summary>
        </member>
        <member name="M:HslControls.HslCurveHistory.AddLeftAuxiliary(System.Single)">
            <summary>
            新增一条左侧的辅助线，使用默认的文本颜色
            </summary>
            <param name="value">数据值</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.AddLeftAuxiliary(System.Single,System.Drawing.Color)">
            <summary>
            新增一条左侧的辅助线，使用指定的颜色
            </summary>
            <param name="value">数据值</param>
            <param name="lineColor">线条颜色</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.AddLeftAuxiliary(System.Single,System.Drawing.Color,System.Single,System.Boolean)">
            <summary>
            新增一条左侧的辅助线
            </summary>
            <param name="value">数据值</param>
            <param name="lineColor">线条颜色</param>
            <param name="lineThickness">线条宽度</param>
            <param name="isDashLine">是否是虚线</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.AddRightAuxiliary(System.Single)">
            <summary>
            新增一条右侧的辅助线，使用默认的文本颜色
            </summary>
            <param name="value">数据值</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.AddRightAuxiliary(System.Single,System.Drawing.Color)">
            <summary>
            新增一条右侧的辅助线，使用指定的颜色
            </summary>
            <param name="value">数据值</param>
            <param name="lineColor">线条颜色</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.AddRightAuxiliary(System.Single,System.Drawing.Color,System.Single,System.Boolean)">
            <summary>
            新增一条右侧的辅助线
            </summary>
            <param name="value">数据值</param>
            <param name="lineColor">线条颜色</param>
            <param name="lineThickness">线条宽度</param>
            <param name="isDashLine">是否是虚线的信息</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.RemoveAuxiliary(System.Single)">
            <summary>
            移除所有的指定值的辅助曲线，包括左边的和右边的
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:HslControls.HslCurveHistory.RemoveAuxiliary(HslControls.AuxiliaryLine)">
            <summary>
            移除一个指定的辅助对象
            </summary>
            <param name="auxiliary">移除的数据值</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.RemoveAllAuxiliary">
            <summary>
            移除所有的辅助线
            </summary>
        </member>
        <member name="M:HslControls.HslCurveHistory.AddAuxiliaryLabel(HslControls.AuxiliaryLable)">
            <summary>
            新增一条辅助标签
            </summary>
            <param name="auxiliaryLable">描述的标签值</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.RemoveAuxiliaryLable(HslControls.AuxiliaryLable)">
            <summary>
            移除指定的辅助标签
            </summary>
            <param name="auxiliaryLable">等待删除的对象</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.RemoveAllAuxiliaryLable">
            <summary>
            移除所有的辅助标签
            </summary>
        </member>
        <member name="M:HslControls.HslCurveHistory.AddMarkLine(HslControls.HslMarkLine)">
            <summary>
            新增一个标记的线段信息
            </summary>
            <param name="markLine">线段标记信息</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.RemoveMarkLine(HslControls.HslMarkLine)">
            <summary>
            移除一个标记的线段信息
            </summary>
            <param name="markLine">线段标记信息</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.RemoveAllMarkLine">
            <summary>
            移除所有的标记的线段信息
            </summary>
        </member>
        <member name="M:HslControls.HslCurveHistory.AddMarkText(HslControls.HslMarkText)">
            <summary>
            新增一个标记的文本信息
            </summary>
            <param name="markText">文本标记信息</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.RemoveMarkText(HslControls.HslMarkText)">
            <summary>
            移除一个标记的文本信息
            </summary>
            <param name="markText">文本标记信息</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.RemoveAllMarkText">
            <summary>
            移除所有的标记的文本信息
            </summary>
        </member>
        <member name="M:HslControls.HslCurveHistory.AddMarkCurvePeakPoint(System.String)">
            <summary>
            增加指定曲线的寻峰功能，如果曲线不存在，则方法无效，所有
            </summary>
            <param name="curveKey">曲线名称</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.AddMarkImage(HslControls.HslMarkImage)">
            <summary>
            增加一个新的标记图片
            </summary>
            <param name="markImage">标记图片对象</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.RemoveMarkImage(HslControls.HslMarkImage)">
            <summary>
            移除一个标记图片信息
            </summary>
            <param name="markImage">标记图片信息</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.RemoveAllMarkImages">
            <summary>
            移除所有的标记图片信息
            </summary>
        </member>
        <member name="M:HslControls.HslCurveHistory.SetDateTimes(System.DateTime[])">
            <summary>
            设置系统横轴的显示坐标信息
            </summary>
            <param name="times">时间数组</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.SetDateCustomer(System.String[])">
            <summary>
            设置系统横轴的显示坐标信息
            </summary>
            <param name="customers">自定义的数组</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.SetScaleByXAxis(System.Single)">
            <summary>
            设置当前曲线的横轴的缩放等级，必须大于0，小于1则为缩放，大于1则为放大
            </summary>
            <param name="scale">缩放等级，必须大于0，小于1则为缩放，大于1则为放大</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.SetScaleXOptions(System.Single[],System.Int32)">
            <summary>
            设置新的X轴缩放等级的数组，滚轮将在数组上滚动，缩放等级应该从小到大排序参数, index 为默认的等级所在的索引，默认的缩放等级一般都是 1<br />
            例如float数组 [1/4f, 1/2f, 1f, 2f, 3f, 4f, 10f ]，index 就是 2 ，也即是 1f 所在数组的索引
            </summary>
            <param name="scales">X轴的缩放等级</param>
            <param name="index">index 为默认的等级所在的索引</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.SetScaleYOptions(System.Single[],System.Int32)">
            <summary>
            设置新的Y轴缩放等级的数组，滚轮将在数组上滚动，缩放等级应该从小到大排序参数, index 为默认的等级所在的索引，默认的缩放等级一般都是 1<br />
            Y轴的缩放等级需要从1开始，例如float数组 [1f, 2f, 3f, 4f, 10f ]，index 就是 0 ，也即是 1f 所在数组的索引
            </summary>
            <param name="scales">X轴的缩放等级</param>
            <param name="index">index 为默认的等级所在的索引</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.SetLeftCurve(System.String,System.Single[])">
            <summary>
            新增或修改一条指定关键字的左参考系曲线数据，需要指定数据，颜色随机，没有数据上限，线条宽度为1
            </summary>
            <param name="key">曲线关键字</param>
            <param name="data">曲线的具体数据</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.SetLeftCurve(System.String,System.Single[],System.Drawing.Color)">
            <summary>
            新增或修改一条指定关键字的左参考系曲线数据，需要指定数据，颜色，没有数据上限，线条宽度为1
            </summary>
            <param name="key">曲线关键字</param>
            <param name="data">数据内容</param>
            <param name="lineColor">曲线颜色</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.SetLeftCurve(System.String,System.Single[],System.Drawing.Color,HslControls.CurveStyle)">
            <summary>
            新增或修改一条指定关键字的左参考系曲线数据，需要指定数据，颜色，没有数据上限，线条宽度为1
            </summary>
            <param name="key">曲线关键字</param>
            <param name="data">数据内容</param>
            <param name="lineColor">曲线颜色</param>
            <param name="style">曲线的样式</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.SetLeftCurve(System.String,System.Single[],System.Drawing.Color,HslControls.CurveStyle,System.String)">
            <summary>
            新增或修改一条指定关键字的左参考系曲线数据，需要指定数据，颜色，没有数据上限，线条宽度为1
            </summary>
            <param name="key">曲线关键字</param>
            <param name="data">数据内容</param>
            <param name="lineColor">曲线颜色</param>
            <param name="style">曲线的样式</param>
            <param name="renderFormat">数据显示的格式化操作</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.SetRightCurve(System.String,System.Single[])">
            <summary>
            新增或修改一条指定关键字的右参考系曲线数据，需要指定数据，颜色随机，没有数据上限，线条宽度为1
            </summary>
            <param name="key">曲线关键字</param>
            <param name="data">数据内容</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.SetRightCurve(System.String,System.Single[],System.Drawing.Color)">
            <summary>
            新增或修改一条指定关键字的右参考系曲线数据，需要指定数据，颜色，没有数据上限，线条宽度为1
            </summary>
            <param name="key">曲线关键字</param>
            <param name="data">数据内容</param>
            <param name="lineColor">曲线颜色</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.SetRightCurve(System.String,System.Single[],System.Drawing.Color,HslControls.CurveStyle)">
            <summary>
            新增或修改一条指定关键字的右参考系曲线数据，需要指定数据，颜色，没有数据上限，线条宽度为1
            </summary>
            <param name="key">曲线关键字</param>
            <param name="data">数据内容</param>
            <param name="lineColor">曲线颜色</param>
            <param name="style">曲线的样式</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.SetRightCurve(System.String,System.Single[],System.Drawing.Color,HslControls.CurveStyle,System.String)">
            <summary>
            新增或修改一条指定关键字的右参考系曲线数据，需要指定数据，颜色，没有数据上限，线条宽度为1
            </summary>
            <param name="key">曲线关键字</param>
            <param name="data">数据内容</param>
            <param name="lineColor">曲线颜色</param>
            <param name="style">曲线的样式</param>
            <param name="renderFormat">数据显示的格式化操作</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.SetCurve(System.String,System.Int32,System.Single[],System.Drawing.Color,System.Single,HslControls.CurveStyle)">
            <summary>
            新增或修改一条指定关键字的曲线数据，需要指定参考系及数据，颜色，线条宽度
            </summary>
            <param name="key">曲线关键字</param>
            <param name="referenceAxis">参考系索引，0表示左轴，1表示右轴，2，3，4，5表示新增的坐标轴</param>
            <param name="data">数据</param>
            <param name="lineColor">线条颜色</param>
            <param name="thickness">线条宽度</param>
            <param name="style">曲线的样式</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.SetCurve(System.String,System.Int32,System.Single[],System.Drawing.Color,System.Single,HslControls.CurveStyle,System.String)">
            <summary>
            新增或修改一条指定关键字的曲线数据，需要指定参考系及数据，颜色，线条宽度
            </summary>
            <param name="key">曲线关键字</param>
            <param name="referenceAxis">参考系索引，0表示左轴，1表示右轴，2，3，4，5表示新增的坐标轴</param>
            <param name="data">数据</param>
            <param name="lineColor">线条颜色</param>
            <param name="thickness">线条宽度</param>
            <param name="style">曲线的样式</param>
            <param name="renderFormat">数据显示的格式化操作</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.SetCurve(System.String,HslControls.HslCurveItem)">
            <summary>
            新增一条新的曲线信息，需要指定关键字，曲线的对象内容，可以自由的设置曲线的细节。
            </summary>
            <param name="key">关键字</param>
            <param name="curveItem">曲线内容</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.SetCurveLineColor(System.String,System.Drawing.Color)">
            <summary>
            修改某一条曲线的颜色信息
            </summary>
            <param name="key">曲线关键字</param>
            <param name="lineColor">曲线的颜色信息</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.SetCurveLineThickness(System.String,System.Single)">
            <summary>
            修改某一条曲线的线条宽度
            </summary>
            <param name="key">曲线关键字</param>
            <param name="thickness">曲线的线宽</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.SetCurveLineCurveStyle(System.String,HslControls.CurveStyle)">
            <summary>
            修改某一条曲线的样式，线段，还是圆滑，还是阶跃，还是阶梯
            </summary>
            <param name="key">曲线关键字</param>
            <param name="style">曲线的样式</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.SetCurveLineRenderFormat(System.String,System.String)">
            <summary>
            修改某一条曲线的显示的格式化信息文本。
            </summary>
            <param name="key">曲线关键字</param>
            <param name="renderFormat">曲线的样式</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.RemoveCurve(System.String)">
            <summary>
            移除指定关键字的曲线
            </summary>
            <param name="key">曲线关键字</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.GetAllCurve">
            <summary>
            获取当前曲线的字典信息，所有的曲线都在这里面，可以进行一些自由的控制
            </summary>
            <returns>包含所有曲线的词典信息</returns>
        </member>
        <member name="M:HslControls.HslCurveHistory.RemoveAllCurve">
            <summary>
            移除指定关键字的曲线，包含了所有的特殊标记信息
            </summary>
        </member>
        <member name="M:HslControls.HslCurveHistory.SetCurveVisible(System.String,System.Boolean,System.Boolean)">
            <summary>
            设置一条曲线是否是可见的，如果该曲线不存在，则无效。
            </summary>
            <param name="key">关键字</param>
            <param name="visible">是否可见，如果设置不可见，名称不可见，曲线不可见，但是提示可见</param>
            <param name="lineRenderVisiable">曲线是否可见，如果设置不可见，曲线隐藏，提示隐藏，名称暗淡显示。</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.SetCurveVisible(System.String[],System.Boolean,System.Boolean)">
            <summary>
            设置多条曲线是否是可见的，如果该曲线不存在，则无效。
            </summary>
            <param name="keys">关键字</param>
            <param name="visible">是否可见</param>
            <param name="lineRenderVisiable">曲线是否可见，如果设置不可见，曲线隐藏，提示隐藏，名称暗淡显示。</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.SetCurveMousePosition(System.Int32,System.Int32)">
            <summary>
            强行设置曲线中活动的点信息，显示数值
            </summary>
            <param name="x">横坐标x</param>
            <param name="y">横坐标y</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.AddMarkBackSection(HslControls.HslMarkBackSection)">
            <summary>
            新增一段背景标识，用于隔离显示报警区段，特殊信息区段的数据
            </summary>
            <param name="markBackSection">背景标识层</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.RemoveMarkBackSection(HslControls.HslMarkBackSection)">
            <summary>
            移除一个背景标识的内容，如果为null，则无效
            </summary>
            <param name="markBackSection">标记信息</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.RemoveAllMarkBackSection">
            <summary>
            移除所有的前置的辅助标记曲线区间
            </summary>
        </member>
        <member name="M:HslControls.HslCurveHistory.AddMarkForeSection(HslControls.HslMarkForeSection)">
            <summary>
            新增一段辅助标记区间的信息，将会绘制在背景图层。
            </summary>
            <param name="markForeSection">标记信息</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.RemoveMarkForeSection(HslControls.HslMarkForeSection)">
            <summary>
            移除一段辅助标记区间的信息，如果为null，则无效
            </summary>
            <param name="markForeSection">标记信息</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.RemoveAllMarkForeSection">
            <summary>
            移除所有的前置的辅助标记曲线区间
            </summary>
        </member>
        <member name="M:HslControls.HslCurveHistory.RemoveAllMarkMouseSection">
            <summary>
            移除所有的因为鼠标手动选择的辅助标记曲线区间
            </summary>
        </member>
        <member name="M:HslControls.HslCurveHistory.AddMarkActiveSection(HslControls.HslMarkForeSection)">
            <summary>
            新增一段辅助标记的区间信息，将在鼠标光标移动的时候显示出数据信息，可用来标记一个产品的额外的信息内容，比如条码，生产信息
            </summary>
            <param name="markActiveSection">额外的活动的内容</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.SaveToBitmap(System.Boolean)">
            <summary>
            将当前的图形曲线保存为图片内容，可用于存储本地的文件，或是打印到纸张，默认大小为控件的大小
            </summary>
            <param name="isCurrentRegion">可以选择是否输出当前的界面内容还是全部图像，默认为全部界面</param>
            <returns>图片内容</returns>
        </member>
        <member name="F:HslControls.HslCurveHistory.offsetPaintScrollX">
            <summary>
            横向绘制偏移的X坐标信息
            </summary>
        </member>
        <member name="F:HslControls.HslCurveHistory.offsetPaintScrollY">
            <summary>
            横向绘制偏移的Y坐标信息
            </summary>
        </member>
        <member name="F:HslControls.HslCurveHistory.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslCurveHistory.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslCurveHistory.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.ReferenceAxisCollection">
            <summary>
            关联的其他轴的集合
            </summary>
        </member>
        <member name="M:HslControls.ReferenceAxisCollection.#ctor(HslControls.HslCurveHistory)">
            <summary>
            实例化一个默认的对象
            </summary>
            <param name="hslCurveHistory"></param>
        </member>
        <member name="M:HslControls.ReferenceAxisCollection.InsertItem(System.Int32,HslControls.ReferenceAxis)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.ReferenceAxisCollection.SetItem(System.Int32,HslControls.ReferenceAxis)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.ReferenceAxisCollection.ClearItems">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.ReferenceAxisCollection.RemoveItem(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:HslControls.ReferenceAxis">
            <summary>
            参考坐标系的轴信息
            </summary>
        </member>
        <member name="M:HslControls.ReferenceAxis.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="M:HslControls.ReferenceAxis.#ctor(System.Windows.Forms.UserControl)">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="M:HslControls.ReferenceAxis.#ctor(System.Single,System.Single,System.Boolean)">
            <summary>
            实例化一个默认的对象
            </summary>
            <param name="max">最大值</param>
            <param name="min">最小值</param>
            <param name="useLog">是否使用对数</param>
        </member>
        <member name="P:HslControls.ReferenceAxis.Max">
            <summary>
            最大值
            </summary>
        </member>
        <member name="P:HslControls.ReferenceAxis.Min">
            <summary>
            最小值
            </summary>
        </member>
        <member name="P:HslControls.ReferenceAxis.Unit">
            <summary>
            单位信息
            </summary>
        </member>
        <member name="P:HslControls.ReferenceAxis.UseLogarithms">
            <summary>
            是否使用对数的表示方式，在开始对数的模式下，无法表示小于等于0的数值，对数以10为底数
            </summary>
        </member>
        <member name="P:HslControls.ReferenceAxis.Color">
            <summary>
            获取或设置当前的坐标系的颜色信息
            </summary>
        </member>
        <member name="P:HslControls.ReferenceAxis.Format">
            <summary>
            获取或设置当前坐标轴数字的格式化信息，默认为 {0}, 直接转字符串
            </summary>
        </member>
        <member name="M:HslControls.ReferenceAxis.GetPen">
            <summary>
            获取画笔信息
            </summary>
            <returns>画笔信息</returns>
        </member>
        <member name="M:HslControls.ReferenceAxis.IsUseLogarithms">
            <summary>
            当前是否使用对数的功能
            </summary>
            <returns>是否对数的坐标系统</returns>
        </member>
        <member name="M:HslControls.ReferenceAxis.GetCalculateMax">
            <summary>
            获取用于中间计算的最大值，如果是对数的话，返回对数值
            </summary>
            <returns>最大值</returns>
        </member>
        <member name="M:HslControls.ReferenceAxis.GetCalculateMin">
            <summary>
            获取用于中间计算的最小值，如果是对数的话，返回对数值
            </summary>
            <returns>最小值</returns>
        </member>
        <member name="M:HslControls.ReferenceAxis.SetMaxValue(System.Single)">
            <summary>
            设置当前的最大值，和直接设置属性的区别是，不会引用控件刷新的操作
            </summary>
            <param name="value">最大值信息</param>
        </member>
        <member name="M:HslControls.ReferenceAxis.SetMinValue(System.Single)">
            <summary>
            设置当前的最小值，和直接设置属性的区别是，不会引用控件刷新的操作
            </summary>
            <param name="value">最小值信息</param>
        </member>
        <member name="P:HslControls.ReferenceAxis.Brush">
            <summary>
            画刷资源
            </summary>
        </member>
        <member name="T:HslControls.ReferenceAxisConverter">
            <summary>
            参考坐标轴的转换器
            </summary>
        </member>
        <member name="M:HslControls.ReferenceAxisConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.ReferenceAxisConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="T:HslControls.HslDialPlate">
            <summary>
            一个新的仪表盘控件，方便的用来显示流量计等情况
            </summary>
        </member>
        <member name="M:HslControls.HslDialPlate.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="P:HslControls.HslDialPlate.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslDialPlate.CenterColor">
            <summary>
            获取或设置仪表控件的中心背景色
            </summary>
        </member>
        <member name="P:HslControls.HslDialPlate.BorderColor">
            <summary>
            获取或设置控件的边缘颜色
            </summary>
        </member>
        <member name="P:HslControls.HslDialPlate.BoderColor2">
            <summary>
            获取或设置控件内边缘的背景颜色
            </summary>
        </member>
        <member name="P:HslControls.HslDialPlate.SmallScaleColor">
            <summary>
            获取或设置小刻度的颜色信息，如果设置为透明色，则不显示
            </summary>
        </member>
        <member name="P:HslControls.HslDialPlate.DialPlateBackgroundColor">
            <summary>
            获取或设置当前仪表的主背景色
            </summary>
        </member>
        <member name="P:HslControls.HslDialPlate.IsRenderSegmentText">
            <summary>
            获取或设置当前仪表是否显示文本信息
            </summary>
        </member>
        <member name="P:HslControls.HslDialPlate.Segment">
            <summary>
            获取或设置当前仪表的分割数量
            </summary>
        </member>
        <member name="P:HslControls.HslDialPlate.MinValue">
            <summary>
            获取或设置当前仪表控件的最小值
            </summary>
        </member>
        <member name="P:HslControls.HslDialPlate.MaxValue">
            <summary>
            获取或设置当前仪表控件的最大值
            </summary>
        </member>
        <member name="P:HslControls.HslDialPlate.Value">
            <summary>
            获取或设置仪表控件的当前值
            </summary>
        </member>
        <member name="P:HslControls.HslDialPlate.UnitText">
            <summary>
            获取或设置显示的单位文本信息
            </summary>
        </member>
        <member name="P:HslControls.HslDialPlate.MarkValues">
            <summary>
            获取或设置当前辅助标记的集合
            </summary>
        </member>
        <member name="M:HslControls.HslDialPlate.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslDialPlate.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="M:HslControls.HslDialPlate.PaintMain(System.Drawing.Graphics,System.Single,System.Single)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="F:HslControls.HslDialPlate.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslDialPlate.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslDialPlate.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.MarkValue">
            <summary>
            刻度标记对象
            </summary>
        </member>
        <member name="M:HslControls.MarkValue.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="P:HslControls.MarkValue.Value">
            <summary>
            当前的数值信息
            </summary>
        </member>
        <member name="P:HslControls.MarkValue.Color">
            <summary>
            当前的颜色信息
            </summary>
        </member>
        <member name="P:HslControls.MarkValue.LineWidth">
            <summary>
            当前线的宽度信息
            </summary>
        </member>
        <member name="P:HslControls.MarkValueCollection.control">
            <summary>
            控件对象
            </summary>
        </member>
        <member name="M:HslControls.HslDigitalInput.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="P:HslControls.HslDigitalInput.Font">
            <inheritdoc cref="P:System.Windows.Forms.Control.Font"/>
        </member>
        <member name="P:HslControls.HslDigitalInput.OnOk">
            <summary>
            当按ok键触发的信息
            </summary>
        </member>
        <member name="P:HslControls.HslDigitalInput.InputCheck">
            <summary>
            对结果的信息检查
            </summary>
        </member>
        <member name="P:HslControls.HslDigitalInput.LedBackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslDigitalInput.DisplayNumber">
            <summary>
            获取或设置数码管显示的位数
            </summary>
        </member>
        <member name="P:HslControls.HslDigitalInput.LedNumberSize">
            <summary>
            获取或设置数码管显示的大小
            </summary>
        </member>
        <member name="P:HslControls.HslDigitalInput.DisplayText">
            <summary>
            获取或设置数码管显示的内容
            </summary>
        </member>
        <member name="P:HslControls.HslDigitalInput.DisplayBackColor">
            <summary>
            获取或设置数码管数字的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslDigitalInput.LedForeColor">
            <summary>
            获取或设置数码管数字的前景色
            </summary>
        </member>
        <member name="P:HslControls.HslDigitalInput.UnitText">
            <summary>
            获取或设置数码管数字的单位文本
            </summary>
        </member>
        <member name="P:HslControls.HslDigitalInput.MaskChar">
            <summary>
            当需要设置密码的时候，设置为掩码，就不显示真实的数据信息
            </summary>
        </member>
        <member name="P:HslControls.HslDigitalInput.LeftRightOffect">
            <summary>
            获取或设置数码管两端的空闲长度
            </summary>
        </member>
        <member name="P:HslControls.HslDigitalInput.EnableSpot">
            <summary>
            是否启用小数点
            </summary>
        </member>
        <member name="P:HslControls.HslDigitalInput.EnableNegative">
            <summary>
            是否启动负号
            </summary>
        </member>
        <member name="P:HslControls.HslDigitalInput.ButtonColor">
            <summary>
            获取或设置所有按钮的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslDigitalInput.ForeColor">
            <summary>
            获取或设置当前控件的文本的颜色
            </summary>
        </member>
        <member name="F:HslControls.HslDigitalInput.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslDigitalInput.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslDigitalInput.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslFactory">
            <summary>
            工厂控件信息
            </summary>
        </member>
        <member name="M:HslControls.HslFactory.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="P:HslControls.HslFactory.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslFactory.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslFactory.Color1">
            <summary>
            获取或设置自定义颜色1
            </summary>
        </member>
        <member name="P:HslControls.HslFactory.Color2">
            <summary>
            获取或设置自定义颜色2
            </summary>
        </member>
        <member name="P:HslControls.HslFactory.Color3">
            <summary>
            获取或设置自定义颜色3
            </summary>
        </member>
        <member name="P:HslControls.HslFactory.Color4">
            <summary>
            获取或设置自定义颜色4
            </summary>
        </member>
        <member name="P:HslControls.HslFactory.Color5">
            <summary>
            获取或设置自定义颜色5
            </summary>
        </member>
        <member name="P:HslControls.HslFactory.Color6">
            <summary>
            获取或设置自定义颜色6
            </summary>
        </member>
        <member name="P:HslControls.HslFactory.Color7">
            <summary>
            获取或设置自定义颜色7
            </summary>
        </member>
        <member name="M:HslControls.HslFactory.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重绘控件的
            </summary>
            <param name="e">重绘事件</param>
        </member>
        <member name="F:HslControls.HslFactory.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslFactory.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslFactory.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslGanttChart">
            <summary>
            甘特图控件，可以用来表示一天的数据使用情况
            </summary>
        </member>
        <member name="M:HslControls.HslGanttChart.#ctor">
            <summary>
            实例化一个默认的甘特图控件
            </summary>
        </member>
        <member name="P:HslControls.HslGanttChart.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslGanttChart.GanttBackColor">
            <summary>
            获取或设置甘特图的背景颜色
            </summary>
        </member>
        <member name="P:HslControls.HslGanttChart.TimeSegment">
            <summary>
            获取或设置甘特图的时间的分段信息
            </summary>
        </member>
        <member name="P:HslControls.HslGanttChart.TimeStart">
            <summary>
            获取或设置时间的起始信息，通常一天的起始为0，一个月的起始为1，年份的起始为自然年，比如2018
            </summary>
        </member>
        <member name="P:HslControls.HslGanttChart.TimeMax">
            <summary>
            获取或设置时间的结束信息，通常一天的结束为24，一个月的结束为29,30,31，年份的结束为自然年，比如2019
            </summary>
        </member>
        <member name="P:HslControls.HslGanttChart.TimeCount">
            <summary>
            获取或设置时间的总数信息，比如是按照天计算的甘特图，设置了1440，就是按照分钟计数，如果是86400，就是按照秒计数，这个传入的值密切相关
            </summary>
        </member>
        <member name="P:HslControls.HslGanttChart.TimeFormate">
            <summary>
            获取或设置时间的显示格式，可以设置为显示小时，分钟，天等等信息
            </summary>
        </member>
        <member name="P:HslControls.HslGanttChart.LeftRightOffect">
            <summary>
            获取或设置两侧的距离宽度，当你的数字范围特别长的时候就有用，默认为20
            </summary>
        </member>
        <member name="M:HslControls.HslGanttChart.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重绘控件的
            </summary>
            <param name="e">重绘事件</param>
        </member>
        <member name="M:HslControls.HslGanttChart.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="M:HslControls.HslGanttChart.SetGanttChart(System.Int32[],System.Drawing.Color[])">
            <summary>
            设置甘特图的数据信息，和颜色信息
            </summary>
            <param name="data">数据</param>
            <param name="colors">颜色</param>
        </member>
        <member name="F:HslControls.HslGanttChart.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslGanttChart.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslGanttChart.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslGauge">
            <summary>
            新的仪表盘控件，外观像汽车的仪表盘，支持设置范围，单位，指针颜色
            </summary>
        </member>
        <member name="M:HslControls.HslGauge.#ctor">
            <summary>
            实例化一个仪表盘控件
            </summary>
        </member>
        <member name="M:HslControls.HslGauge.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重绘
            </summary>
            <param name="e">重绘的事件</param>
        </member>
        <member name="M:HslControls.HslGauge.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="M:HslControls.HslGauge.GetCenterPoint(System.Int32,System.Int32)">
            <summary>
            获取中心点的坐标
            </summary>
            <returns>中心点对象</returns>
        </member>
        <member name="P:HslControls.HslGauge.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslGauge.GaugeBorder">
            <summary>
            获取或设置仪表盘的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslGauge.PointerColor">
            <summary>
            获取或设置指针的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslGauge.ValueStart">
            <summary>
            获取或设置数值的起始值，默认为0
            </summary>
        </member>
        <member name="P:HslControls.HslGauge.ValueMax">
            <summary>
            获取或设置数值的最大值，默认为100
            </summary>
        </member>
        <member name="P:HslControls.HslGauge.Value">
            <summary>
            获取或设置数值的当前值，应该处于最小值和最大值之间
            </summary>
        </member>
        <member name="P:HslControls.HslGauge.ValueFormat">
            <summary>
            获取或设置当前的值显示的格式化，例如可以只显示1位小数点，2位小数点
            </summary>
        </member>
        <member name="P:HslControls.HslGauge.ValueAlarmMax">
            <summary>
            获取或设置数值的上限报警值，设置为超过最大值则无上限报警
            </summary>
        </member>
        <member name="P:HslControls.HslGauge.ValueAlarmMin">
            <summary>
            获取或设置数值的下限报警值，设置为超过最大值则无上限报警
            </summary>
        </member>
        <member name="P:HslControls.HslGauge.SegmentCount">
            <summary>
            获取或设置仪表盘的分割段数，最小为2，最大1000
            </summary>
        </member>
        <member name="P:HslControls.HslGauge.UnitText">
            <summary>
            获取或设置仪表盘的单位描述文本
            </summary>
        </member>
        <member name="P:HslControls.HslGauge.IsTextUnderPointer">
            <summary>
            获取或设置文本是否是指针的下面
            </summary>
        </member>
        <member name="P:HslControls.HslGauge.IsBigSemiCircle">
            <summary>
            通常情况，仪表盘不会大于半个圆，除非本属性设置为 True
            </summary>
        </member>
        <member name="P:HslControls.HslGauge.ForeColor">
            <summary>
            获取或设置控件的前景色
            </summary>
        </member>
        <member name="P:HslControls.HslGauge.GaugeAlarmColor">
            <summary>
            获取或设置报警区段的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslGauge.PointerSize">
            <summary>
            获取或设置指针的大小值
            </summary>
        </member>
        <member name="P:HslControls.HslGauge.CustomerCalibration">
            <summary>
            获取或设置完全自定义的刻度表示数据
            </summary>
        </member>
        <member name="P:HslControls.HslGauge.IsTextInfoRenderBlow">
            <summary>
            获取或设置单位文本信息是否显示在控件的下方
            </summary>
        </member>
        <member name="P:HslControls.HslGauge.IsAlarmRenderLine">
            <summary>
            当前的报警是否是线表示，还是区域表示
            </summary>
        </member>
        <member name="F:HslControls.HslGauge.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslGauge.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslGauge.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslGaugeChart">
            <summary>
            旧的仪表盘控件，外观像一把扇子，支持设置范围，指针颜色，报警区域
            </summary>
        </member>
        <member name="M:HslControls.HslGaugeChart.#ctor">
            <summary>
            实例化一个仪表盘控件
            </summary>
        </member>
        <member name="M:HslControls.HslGaugeChart.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重绘
            </summary>
            <param name="e">重绘的事件</param>
        </member>
        <member name="M:HslControls.HslGaugeChart.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="M:HslControls.HslGaugeChart.GetCenterPoint(System.Int32,System.Int32)">
            <summary>
            获取中心点的坐标
            </summary>
            <returns>中心点对象</returns>
        </member>
        <member name="P:HslControls.HslGaugeChart.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslGaugeChart.GaugeBorder">
            <summary>
            获取或设置仪表盘的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslGaugeChart.PointerColor">
            <summary>
            获取或设置指针的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslGaugeChart.ValueStart">
            <summary>
            获取或设置数值的起始值，默认为0
            </summary>
        </member>
        <member name="P:HslControls.HslGaugeChart.ValueMax">
            <summary>
            获取或设置数值的最大值，默认为100
            </summary>
        </member>
        <member name="P:HslControls.HslGaugeChart.Value">
            <summary>
            获取或设置数值的当前值，应该处于最小值和最大值之间
            </summary>
        </member>
        <member name="P:HslControls.HslGaugeChart.ValueFormat">
            <summary>
            获取或设置当前的值显示的格式化，例如可以只显示1位小数点，2位小数点
            </summary>
        </member>
        <member name="P:HslControls.HslGaugeChart.ValueAlarmMax">
            <summary>
            获取或设置数值的上限报警值，设置为超过最大值则无上限报警
            </summary>
        </member>
        <member name="P:HslControls.HslGaugeChart.ValueAlarmMin">
            <summary>
            获取或设置数值的下限报警值，设置为超过最大值则无上限报警
            </summary>
        </member>
        <member name="P:HslControls.HslGaugeChart.SegmentCount">
            <summary>
            获取或设置仪表盘的分割段数，最小为2，最大1000
            </summary>
        </member>
        <member name="P:HslControls.HslGaugeChart.UnitText">
            <summary>
            获取或设置仪表盘的单位描述文本
            </summary>
        </member>
        <member name="P:HslControls.HslGaugeChart.IsTextUnderPointer">
            <summary>
            获取或设置文本是否是指针的下面
            </summary>
        </member>
        <member name="P:HslControls.HslGaugeChart.IsBigSemiCircle">
            <summary>
            通常情况，仪表盘不会大于半个圆，除非本属性设置为 True
            </summary>
        </member>
        <member name="P:HslControls.HslGaugeChart.ForeColor">
            <summary>
            获取或设置控件的前景色
            </summary>
        </member>
        <member name="F:HslControls.HslGaugeChart.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslGaugeChart.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslGaugeChart.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslGobang">
            <summary>
            一个五子棋的控件，支持人机对战
            </summary>
        </member>
        <member name="M:HslControls.HslGobang.#ctor">
            <summary>
            实例化控件
            </summary>
        </member>
        <member name="M:HslControls.HslGobang.IsGameOver(System.Int32,System.Int32,HslControls.GobangPlayer)">
            <summary>
            是否结束游戏的判断。当落子后需要进行判断，无论是电脑玩家，还是用户玩家
            </summary>
            <param name="x">落子的点位x</param>
            <param name="y">落子的点位y</param>
            <param name="player">用户</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:HslControls.HslGobang.StartGame">
            <summary>
            开始游戏
            </summary>
        </member>
        <member name="M:HslControls.HslGobang.GetBackgroundImage">
            <summary>
            获取背景
            </summary>
            <returns></returns>
        </member>
        <member name="M:HslControls.HslGobang.IsPositionHasPawn(System.Int32,System.Int32)">
            <summary>
            判断当前的位置是否有落子
            </summary>
            <param name="x">坐标x</param>
            <param name="y">坐标y</param>
            <returns>是否的结果</returns>
        </member>
        <member name="M:HslControls.HslGobang.IsPositionHasPawn(System.Int32,System.Int32,HslControls.GobangPlayer)">
            <summary>
            判断当前的位置是否有指定玩家的落子
            </summary>
            <param name="x">坐标x</param>
            <param name="y">坐标y</param>
            <param name="player">指定的玩家</param>
            <returns>是否的结果</returns>
        </member>
        <member name="M:HslControls.HslGobang.IsPositionHasPawn(System.Drawing.Point,HslControls.GobangPlayer)">
            <summary>
            判断当前的位置是否有指定玩家的落子
            </summary>
            <param name="point">坐标</param>
            <param name="player">指定的玩家</param>
            <returns>是否的结果</returns>
        </member>
        <member name="M:HslControls.HslGobang.IsPositionHasPawn(System.Drawing.Point)">
            <summary>
            判断当前的位置是否有落子
            </summary>
            <param name="point">指定的位置</param>
            <returns>是否的结果</returns>
        </member>
        <member name="M:HslControls.HslGobang.MouseMovePoint(System.Int32,System.Int32)">
            <summary>
            将鼠标光标的坐标转换成棋子的坐标信息
            </summary>
            <param name="picture_x">鼠标位置 x</param>
            <param name="picture_y">mouse point y</param>
            <returns>数据点位信息</returns>
        </member>
        <member name="F:HslControls.HslGobang.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslGobang.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslGobang.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.GobangPlayer">
            <summary>
            棋子的三种状态
            </summary>
        </member>
        <member name="F:HslControls.GobangPlayer.NonePlayer">
            <summary>
            没有玩家
            </summary>
        </member>
        <member name="F:HslControls.GobangPlayer.Player1">
            <summary>
            玩家一
            </summary>
        </member>
        <member name="F:HslControls.GobangPlayer.Player2">
            <summary>
            玩家二
            </summary>
        </member>
        <member name="T:HslControls.GobangPoint">
            <summary>
            棋盘上一个棋子的类，指示是否有落子，下棋顺序等信息
            </summary>
        </member>
        <member name="P:HslControls.GobangPoint.GobangPlayer">
            <summary>
            获取或设置当前的点位的玩家状态，无玩家，玩家一，玩家二
            </summary>
        </member>
        <member name="P:HslControls.GobangPoint.StepNumber">
            <summary>
            the order number
            </summary>
        </member>
        <member name="P:HslControls.GobangPoint.WeightScore">
            <summary>
            indicates the weight score
            </summary>
        </member>
        <member name="P:HslControls.GobangPoint.GetPawnBrush">
            <summary>
            获取当前棋子的
            </summary>
        </member>
        <member name="P:HslControls.GobangPoint.IsEmpty">
            <summary>
            该坐标点位是否有棋子
            </summary>
        </member>
        <member name="M:HslControls.GobangPoint.op_Equality(HslControls.GobangPoint,HslControls.GobangPoint)">
            <summary>
            判断两个点位的玩家是否一致
            </summary>
            <param name="gp1">玩家一</param>
            <param name="gp2">玩家二</param>
            <returns>是否一致，是返回true，否返回false</returns>
        </member>
        <member name="M:HslControls.GobangPoint.op_Inequality(HslControls.GobangPoint,HslControls.GobangPoint)">
            <summary>
            判断两个点位的玩家是否不一致
            </summary>
            <param name="gp1">玩家一</param>
            <param name="gp2">玩家二</param>
            <returns>不一致，是返回true，否返回false</returns>
        </member>
        <member name="M:HslControls.GobangPoint.Equals(System.Object)">
            <summary>
            确定指定的对象是否等于当前的对象
            </summary>
            <param name="obj">指定的对象</param>
            <returns>是否相等</returns>
        </member>
        <member name="M:HslControls.GobangPoint.GetHashCode">
            <summary>
            作为默认的哈希值
            </summary>
            <returns>哈希值</returns>
        </member>
        <member name="T:HslControls.ComputerAI">
            <summary>
            AI电脑的算法核心
            </summary>
        </member>
        <member name="M:HslControls.ComputerAI.#ctor(HslControls.GobangPoint[0:,0:])">
            <summary>
            实例化一个电脑的AI算法对象
            </summary>
            <param name="chess">棋盘对象</param>
        </member>
        <member name="M:HslControls.ComputerAI.CalculateComputerAI">
            <summary>
            计算电脑玩家的落子
            </summary>
            <returns>位置信息</returns>
        </member>
        <member name="T:HslControls.ChessWeight">
            <summary>
            棋子的权重类
            </summary>
        </member>
        <member name="M:HslControls.ChessWeight.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="M:HslControls.ChessWeight.#ctor(System.Int32[],HslControls.GobangPlayer)">
            <summary>
            通过指定玩家和数据进行实例化
            </summary>
            <param name="data">数据值</param>
            <param name="m_play">玩家</param>
        </member>
        <member name="P:HslControls.ChessWeight.WeightOpponent">
            <summary>
            user large weight
            对方的最大权重的落子
            </summary>
        </member>
        <member name="P:HslControls.ChessWeight.WeightMax">
            <summary>
            最大权重值
            </summary>
        </member>
        <member name="P:HslControls.ChessWeight.WeightLarge">
            <summary>
            第二大的权重值
            </summary>
        </member>
        <member name="P:HslControls.ChessWeight.WeightSmall">
            <summary>
            第三大的权重值
            </summary>
        </member>
        <member name="P:HslControls.ChessWeight.WeightMin">
            <summary>
            最小权重值
            </summary>
        </member>
        <member name="P:HslControls.ChessWeight.TotleWeight">
            <summary>
            综合权重值
            </summary>
        </member>
        <member name="P:HslControls.ChessWeight.TotleScore">
            <summary>
            总得分
            </summary>
        </member>
        <member name="T:HslControls.HslHelper">
            <summary>
            整个组件的代码辅助工具，提供了一个基础的类库方法
            </summary>
        </member>
        <member name="M:HslControls.HslHelper.Middle(System.Int32,System.Int32,System.Int32)">
            <summary>
            返回中间范围值数据，如果大于最大值，则返回最大值，如果小于最小值，则返回最小值
            </summary>
            <param name="min">最小值</param>
            <param name="value">实际值</param>
            <param name="max">最大值</param>
            <returns>中间值信息</returns>
        </member>
        <member name="M:HslControls.HslHelper.GetRhombusFromRectangle(System.Drawing.Rectangle)">
            <summary>
            从一个矩形的图形中获取菱形的坐标数组
            </summary>
            <param name="rect">矩形</param>
            <returns>数组结果</returns>
        </member>
        <member name="M:HslControls.HslHelper.ComputePaintLocationY(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            计算绘图时的相对偏移值
            </summary>
            <param name="max">0-100分的最大值，就是指准备绘制的最大值</param>
            <param name="min">0-100分的最小值，就是指准备绘制的最小值</param>
            <param name="height">实际绘图区域的高度</param>
            <param name="value">需要绘制数据的当前值</param>
            <returns>相对于0的位置，还需要增加上面的偏值</returns>
        </member>
        <member name="M:HslControls.HslHelper.ComputePaintLocationY(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            计算绘图Y轴时的相对偏移值
            </summary>
            <param name="max">0-100分的最大值，就是指准备绘制的最大值</param>
            <param name="min">0-100分的最小值，就是指准备绘制的最小值</param>
            <param name="height">实际绘图区域的高度</param>
            <param name="value">需要绘制数据的当前值</param>
            <returns>相对于0的位置，还需要增加上面的偏值</returns>
        </member>
        <member name="M:HslControls.HslHelper.ComputePaintLocationX(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            计算绘图X轴时的相对偏移值
            </summary>
            <param name="max">0-100分的最大值，就是指准备绘制的最大值</param>
            <param name="min">0-100分的最小值，就是指准备绘制的最小值</param>
            <param name="width">实际绘图区域的宽度</param>
            <param name="value">需要绘制数据的当前值</param>
            <returns>相对于0的位置，还需要增加上面的偏值</returns>
        </member>
        <member name="M:HslControls.HslHelper.ComputeValueFromPaintLocationY(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            根据绘制的值计算原始的值信息
            </summary>
            <param name="max">0-100分的最大值，就是指准备绘制的最大值</param>
            <param name="min">0-100分的最小值，就是指准备绘制的最小值</param>
            <param name="height">实际绘图区域的高度</param>
            <param name="paint">实际绘制的位置信息</param>
            <returns>实际的值信息</returns>
        </member>
        <member name="M:HslControls.HslHelper.ComputePaintLocationY(HslControls.ReferenceAxis,System.Single,System.Single)">
            <summary>
            计算绘图时的相对偏移值
            </summary>
            <param name="referenceAxis">坐标轴信息</param>
            <param name="height">实际绘图区域的高度</param>
            <param name="value">需要绘制数据的当前值</param>
            <returns>相对于0的位置，还需要增加上面的偏值</returns>
        </member>
        <member name="M:HslControls.HslHelper.PaintCoordinateDivide(System.Drawing.Graphics,System.Drawing.Pen,System.Drawing.Pen,System.Drawing.Font,System.Drawing.Brush,System.Drawing.StringFormat,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            绘制坐标系中的刻度线
            </summary>
            <param name="g">绘图对象</param>
            <param name="penLine">画坐标轴的画笔</param>
            <param name="penDash"></param>
            <param name="font"></param>
            <param name="brush"></param>
            <param name="sf"></param>
            <param name="degree"></param>
            <param name="max"></param>
            <param name="min"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="left"></param>
            <param name="right"></param>
            <param name="up"></param>
            <param name="down"></param>
        </member>
        <member name="M:HslControls.HslHelper.PaintTriangle(System.Drawing.Graphics,System.Drawing.Brush,System.Drawing.Point,System.Int32,HslControls.GraphDirection)">
            <summary>
            根据指定的方向绘制一个箭头
            </summary>
            <param name="g"></param>
            <param name="brush"></param>
            <param name="point"></param>
            <param name="size"></param>
            <param name="direction"></param>
        </member>
        <member name="M:HslControls.HslHelper.DrawLeftRight(System.Drawing.Graphics,System.Drawing.Pen,System.Drawing.Rectangle,HslControls.GraphDirection)">
            <summary>
            绘制向左或是向右的箭头，例如 &lt;&lt;  或是 >>
            </summary>
            <param name="g">画刷资源</param>
            <param name="pen">画笔资源</param>
            <param name="rectangle">绘制的矩形</param>
            <param name="direction">方向信息</param>
        </member>
        <member name="M:HslControls.HslHelper.PaintTriangle(System.Drawing.Graphics,System.Drawing.Brush,System.Drawing.PointF,System.Int32,HslControls.GraphDirection)">
            <summary>
            根据指定的方向绘制一个箭头
            </summary>
            <param name="g"></param>
            <param name="brush"></param>
            <param name="point"></param>
            <param name="size"></param>
            <param name="direction"></param>
        </member>
        <member name="M:HslControls.HslHelper.AddArrayData``1(``0[]@,``0[],System.Int32)">
            <summary>
            一个通用的数组新增个数方法，会自动判断越界情况，越界的情况下，会自动的截断或是填充 -> 
            A common array of new methods, will automatically determine the cross-border situation, in the case of cross-border, will be automatically truncated or filled
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="array">原数据</param>
            <param name="data">等待新增的数据</param>
            <param name="max">原数据的最大值</param>
        </member>
        <member name="M:HslControls.HslHelper.ConvertSize(System.Drawing.SizeF,System.Single)">
            <summary>
            尺寸转换，计算旋转后的尺寸。
            </summary>
            <param name="size"></param>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:HslControls.HslHelper.DrawString(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat,System.Single)">
            <summary>
            绘制旋转文本
            </summary>
            <param name="g"></param>
            <param name="s"></param>
            <param name="font"></param>
            <param name="brush"></param>
            <param name="point"></param>
            <param name="format"></param>
            <param name="angle"></param>
        </member>
        <member name="M:HslControls.HslHelper.TranlateArrayToDouble(System.Int32[])">
            <summary>
            将int数组转换为double数组
            </summary>
            <param name="values">int数组值</param>
            <returns>结果值</returns>
        </member>
        <member name="M:HslControls.HslHelper.TranlateArrayToDouble(System.Single[])">
            <summary>
            将float数组转换为double数组值
            </summary>
            <param name="values">float数组值</param>
            <returns>结果值</returns>
        </member>
        <member name="M:HslControls.HslHelper.CalculateMaxSectionFrom(System.Double[])">
            <summary>
            获得数据的上限值，这个上限值是自动计算的。
            </summary>
            <param name="values">数据值</param>
            <returns>数据值</returns>
        </member>
        <member name="M:HslControls.HslHelper.CalculateMaxSectionFrom(System.Collections.Generic.Dictionary{System.String,System.Double[]})">
            <inheritdoc cref="M:HslControls.HslHelper.CalculateMaxSectionFrom(System.Double[])"/>
        </member>
        <member name="M:HslControls.HslHelper.GetColorLight(System.Drawing.Color)">
            <summary>
            获取当前颜色更淡的颜色信息
            </summary>
            <param name="color">颜色信息</param>
            <returns>颜色</returns>
        </member>
        <member name="M:HslControls.HslHelper.GetColorDeep(System.Drawing.Color)">
            <summary>
            获取当前颜色更深的颜色信息
            </summary>
            <param name="color">颜色信息</param>
            <returns>颜色</returns>
        </member>
        <member name="M:HslControls.HslHelper.GetColorLight(System.Drawing.Color,System.Int32)">
            <summary>
            获取当前颜色更淡的颜色信息，需要指定系数0-100，0时是原来的原色，100时是纯白色
            </summary>
            <param name="color">颜色信息</param>
            <param name="scale">获取颜色的系数信息</param>
            <returns>颜色</returns>
        </member>
        <member name="M:HslControls.HslHelper.GetColorOffset(System.Drawing.Color,System.Int32)">
            <summary>
            获取颜色的偏移信息
            </summary>
            <param name="color">颜色值</param>
            <param name="offset">颜色偏移信息</param>
            <returns>颜色值</returns>
        </member>
        <member name="M:HslControls.HslHelper.GetColorLightFive(System.Drawing.Color)">
            <summary>
            获取当前颜色更淡的颜色信息
            </summary>
            <param name="color">颜色信息</param>
            <returns>颜色</returns>
        </member>
        <member name="M:HslControls.HslHelper.GetPointsFrom(System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            从字符串表示的点位信息里解析出真正的点位信息
            </summary>
            <param name="points">字符串的点位</param>
            <param name="soureWidth">原来的长度信息</param>
            <param name="sourceHeight">原来的高度信息</param>
            <param name="width">实际的宽度信息</param>
            <param name="height">实际的高度信息</param>
            <param name="dx">x偏移量信息</param>
            <param name="dy">y偏移量信息</param>
            <returns></returns>
        </member>
        <member name="M:HslControls.HslHelper.GetRoundRectange(System.Drawing.Rectangle,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            根据矩形及其各个定点的配置信息，获取圆角的路径信息，可以指定每个定点的圆角情况
            </summary>
            <param name="rectangle"></param>
            <param name="radius"></param>
            <param name="topLeft"></param>
            <param name="topRight"></param>
            <param name="buttomRight"></param>
            <param name="buttomLeft"></param>
            <returns></returns>
        </member>
        <member name="M:HslControls.HslHelper.GetReferenceAxisMaxValue(System.Single)">
            <summary>
            获取用于曲线坐标轴最大值的设置值信息，会根据当前的值来计算合理的最大值
            </summary>
            <param name="max">当前数据的最大值</param>
            <returns>用于曲线的最大值信息</returns>
        </member>
        <member name="M:HslControls.HslHelper.GetFormatString(System.String,System.Single,System.Boolean)">
            <summary>
            获取浮点数值的格式化文本信息，如果发生了异常，则返回错误消息
            </summary>
            <param name="format">格式化信息</param>
            <param name="value">值信息</param>
            <param name="remainZero">是否保留0的信息</param>
            <returns>等待显示的文本</returns>
        </member>
        <member name="P:HslControls.HslHelper.StringFormatCenter">
            <summary>
            矩形中间的字符串对齐机制
            </summary>
        </member>
        <member name="P:HslControls.HslHelper.StringFormatLeft">
            <summary>
            矩形的左侧中间的对齐机制
            </summary>
        </member>
        <member name="P:HslControls.HslHelper.StringFormatRight">
            <summary>
            矩形的右侧的中间对齐机制
            </summary>
        </member>
        <member name="P:HslControls.HslHelper.StringFormatDefault">
            <summary>
            矩形的的默认的左上角对齐的机制
            </summary>
        </member>
        <member name="P:HslControls.HslHelper.StringFormatTopCenter">
            <summary>
            矩形的下方中间的对齐的机制
            </summary>
        </member>
        <member name="T:HslControls.RotateDirection">
            <summary>
            旋转方向
            </summary>
        </member>
        <member name="F:HslControls.RotateDirection.ClockWise">
            <summary>
            顺时针
            </summary>
        </member>
        <member name="F:HslControls.RotateDirection.AntiClockWise">
            <summary>
            逆时针
            </summary>
        </member>
        <member name="T:HslControls.GraphDirection">
            <summary>
            图形的方向
            </summary>
        </member>
        <member name="F:HslControls.GraphDirection.Upward">
            <summary>
            向上
            </summary>
        </member>
        <member name="F:HslControls.GraphDirection.Downward">
            <summary>
            向下
            </summary>
        </member>
        <member name="F:HslControls.GraphDirection.Leftward">
            <summary>
            向左
            </summary>
        </member>
        <member name="F:HslControls.GraphDirection.Rightward">
            <summary>
            向右
            </summary>
        </member>
        <member name="T:HslControls.HslDirectionStyle">
            <summary>
            指示控件的样子
            </summary>
        </member>
        <member name="F:HslControls.HslDirectionStyle.Horizontal">
            <summary>
            控件是横向摆放的
            </summary>
        </member>
        <member name="F:HslControls.HslDirectionStyle.Vertical">
            <summary>
            控件是纵向摆放的
            </summary>
        </member>
        <member name="T:HslControls.HslThemeStyle">
            <summary>
            系统的主题样式，将会改变一些控件的外观
            </summary>
        </member>
        <member name="F:HslControls.HslThemeStyle.Light">
            <summary>
            浅色的主题
            </summary>
        </member>
        <member name="F:HslControls.HslThemeStyle.Dark">
            <summary>
            深色的主题
            </summary>
        </member>
        <member name="T:HslControls.HslRenderStyle">
            <summary>
            某些特殊图形的表现形式
            </summary>
        </member>
        <member name="F:HslControls.HslRenderStyle.Ellipse">
            <summary>
            椭圆
            </summary>
        </member>
        <member name="F:HslControls.HslRenderStyle.Rectangle">
            <summary>
            矩形
            </summary>
        </member>
        <member name="F:HslControls.HslRenderStyle.Rhombus">
            <summary>
            菱形
            </summary>
        </member>
        <member name="T:HslControls.Paintdata">
            <summary>
            包含整型和字符串描述的数据类型
            </summary>
        </member>
        <member name="P:HslControls.Paintdata.Count">
            <summary>
            数量
            </summary>
        </member>
        <member name="P:HslControls.Paintdata.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:HslControls.CenterPoint">
            <summary>
            计算的基础数据 
            </summary>
        </member>
        <member name="P:HslControls.CenterPoint.Point">
            <summary>
            中心点的位置
            </summary>
        </member>
        <member name="P:HslControls.CenterPoint.Radius">
            <summary>
            半径
            </summary>
        </member>
        <member name="P:HslControls.CenterPoint.Angle">
            <summary>
            角度
            </summary>
        </member>
        <member name="T:HslControls.HslHorizonBarChart">
            <summary>
            一个水平的柱形图的控件
            </summary>
        </member>
        <member name="M:HslControls.HslHorizonBarChart.#ctor">
            <summary>
            实例化一个默认的条形图的控件
            </summary>
        </member>
        <member name="P:HslControls.HslHorizonBarChart.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslHorizonBarChart.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslHorizonBarChart.ForeColor">
            <summary>
            获取或设置控件的前景色
            </summary>
        </member>
        <member name="P:HslControls.HslHorizonBarChart.ColorLinesAndText">
            <summary>
            获取或设置坐标轴及相关信息文本的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslHorizonBarChart.UseGradient">
            <summary>
            获取或设置本条形图控件是否使用渐进色
            </summary>
        </member>
        <member name="P:HslControls.HslHorizonBarChart.ColorDashLines">
            <summary>
            获取或设置虚线的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslHorizonBarChart.IsRenderDashLine">
            <summary>
            获取或设置虚线是否进行显示
            </summary>
        </member>
        <member name="P:HslControls.HslHorizonBarChart.ValueSegment">
            <summary>
            获取或设置图形的纵轴分段数
            </summary>
        </member>
        <member name="P:HslControls.HslHorizonBarChart.ValueMaxLeft">
            <summary>
            获取或设置图形的纵坐标的最大值，该值必须大于最小值，该值为负数，最大值即为自动适配。
            </summary>
        </member>
        <member name="P:HslControls.HslHorizonBarChart.ValueMinLeft">
            <summary>
            获取或设置图形的纵坐标的最小值，该值必须小于最大值
            </summary>
        </member>
        <member name="P:HslControls.HslHorizonBarChart.Title">
            <summary>
            获取或设置图标的标题信息
            </summary>
        </member>
        <member name="P:HslControls.HslHorizonBarChart.IsShowBarValue">
            <summary>
            获取或设置是否显示柱状图的值文本
            </summary>
        </member>
        <member name="P:HslControls.HslHorizonBarChart.BarPercentWidth">
            <summary>
            获取或设置柱状图占平均宽度的百分比，默认0.8，即80%
            </summary>
        </member>
        <member name="P:HslControls.HslHorizonBarChart.IsAoordinateRoundInt">
            <summary>
            获取或设置纵轴是否强制使用整型
            </summary>
        </member>
        <member name="M:HslControls.HslHorizonBarChart.SetDataSource(System.Collections.Generic.List{HslControls.BarValue})">
            <summary>
            设置柱形图的数据内容，传入一个数组，数组的长度即为柱形图的数量
            </summary>
            <param name="data">数据的集合</param>
        </member>
        <member name="M:HslControls.HslHorizonBarChart.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重绘控件的
            </summary>
            <param name="e">重绘事件</param>
        </member>
        <member name="M:HslControls.HslHorizonBarChart.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="F:HslControls.HslHorizonBarChart.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslHorizonBarChart.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslHorizonBarChart.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.BarValue">
            <summary>
            柱状图的值对象
            </summary>
        </member>
        <member name="M:HslControls.BarValue.#ctor(System.Double,System.String,System.String)">
            <inheritdoc cref="M:HslControls.BarValue.#ctor(System.Double,System.String,System.Drawing.Color,System.String)"/>
        </member>
        <member name="M:HslControls.BarValue.#ctor(System.Double,System.String,System.Drawing.Color,System.String)">
            <summary>
            指定值，轴文本，显示的值格式来初始化一个对象
            </summary>
            <param name="value">值信息</param>
            <param name="text">轴文本</param>
            <param name="color">柱状图的颜色信息</param>
            <param name="barValueFormat">值显示的格式</param>
        </member>
        <member name="M:HslControls.BarValue.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="P:HslControls.BarValue.Value">
            <summary>
            柱状图的值信息
            </summary>
        </member>
        <member name="P:HslControls.BarValue.Text">
            <summary>
            显示在轴上的文本信息
            </summary>
        </member>
        <member name="P:HslControls.BarValue.BarValueFormat">
            <summary>
            柱状图的值格式信息
            </summary>
        </member>
        <member name="P:HslControls.BarValue.BarColor">
            <summary>
            获取或设置柱状的颜色信息
            </summary>
        </member>
        <member name="T:HslControls.HslLabel">
            <summary>
            带渐变背景色的标签
            </summary>
        </member>
        <member name="M:HslControls.HslLabel.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="M:HslControls.HslLabel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="T:HslControls.HslLabelCombo">
            <summary>
            文本组合控件，支持一个文本，数据，单位的同时显示操作
            </summary>
        </member>
        <member name="M:HslControls.HslLabelCombo.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="M:HslControls.HslLabelCombo.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslLabelCombo.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="P:HslControls.HslLabelCombo.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslLabelCombo.TextInfo">
            <summary>
            获取或设置当前的绘制的左侧的文本信息，通常是描述数据的内容
            </summary>
        </member>
        <member name="P:HslControls.HslLabelCombo.TextValue">
            <summary>
            获取或设置当前的中间的值文本，通常是数值信息
            </summary>
        </member>
        <member name="P:HslControls.HslLabelCombo.TextUnit">
            <summary>
            获取或设置右侧的文本信息，通常用来表示单位信息
            </summary>
        </member>
        <member name="P:HslControls.HslLabelCombo.LocationInfo">
            <summary>
            获取或设置左侧的文本的位置，如果小于1，表示总宽度的百分比，如果大于1表示绝对的像素位置
            </summary>
        </member>
        <member name="P:HslControls.HslLabelCombo.LocationValue">
            <summary>
            获取或设置中间的文本框的位置，如果小于1，表示总宽度的百分比，如果大于1表示绝对的像素位置
            </summary>
        </member>
        <member name="P:HslControls.HslLabelCombo.LocationUnit">
            <summary>
            获取或设置右侧的文本的位置，如果小于1，表示总宽度的百分比，如果大于1表示绝对的像素位置
            </summary>
        </member>
        <member name="P:HslControls.HslLabelCombo.TextValueWidth">
            <summary>
            获取或设置中间文本框的宽度信息，如果小于1，表示总宽度的百分比，如果大于1表示绝对的像素位置
            </summary>
        </member>
        <member name="P:HslControls.HslLabelCombo.TextValueBackcolor">
            <summary>
            获取或设置中间文本框的背景颜色
            </summary>
        </member>
        <member name="P:HslControls.HslLabelCombo.ArrowDirection">
            <summary>
            获取或设置箭头的放向信息，只有向上或是向下会显示箭头，否则不显示
            </summary>
        </member>
        <member name="P:HslControls.HslLabelCombo.ArrowColor">
            <summary>
            获取或设置箭头的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslLabelCombo.TextValueBorderColor">
            <summary>
            获取或设置中间文本框的的边框颜色信息
            </summary>
        </member>
        <member name="P:HslControls.HslLabelCombo.TextValueColorTransFun">
            <summary>
            获取或设置自定义的根据文本的信息来动态转换文本框的背景颜色
            </summary>
        </member>
        <member name="F:HslControls.HslLabelCombo.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslLabelCombo.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslLabelCombo.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslLanternAlarm">
            <summary>
            一个用于报警的信号灯
            </summary>
        </member>
        <member name="M:HslControls.HslLanternAlarm.#ctor">
            <summary>
            实例化一个对象
            </summary>
        </member>
        <member name="P:HslControls.HslLanternAlarm.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslLanternAlarm.BottomColor">
            <summary>
            获取或设置底座的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslLanternAlarm.LightColor">
            <summary>
            获取或设置报警灯的颜色，可以设置为任意的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslLanternAlarm.AlarmColor">
            <summary>
            获取或设置报警状态下的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslLanternAlarm.NormalColor">
            <summary>
            获取或设置正常状态的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslLanternAlarm.IsAlarm">
            <summary>
            一旦设置本属性，启动信号灯闪烁
            </summary>
        </member>
        <member name="P:HslControls.HslLanternAlarm.AlarmFlushTime">
            <summary>
            获取或设置报警灯闪烁的频率，单位是毫秒，默认为500
            </summary>
        </member>
        <member name="P:HslControls.HslLanternAlarm.ButtonHeight">
            <summary>
            获取或设置当前报警灯控件底部的高度信息，如果小于0，则表示百分比，如果大于1，则表示绝对像素单位
            </summary>
        </member>
        <member name="M:HslControls.HslLanternAlarm.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslLanternAlarm.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="F:HslControls.HslLanternAlarm.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslLanternAlarm.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslLanternAlarm.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslLanternSimple">
            <summary>
            一个简约的灯控件，支持纯色和渐变色的设置
            </summary>
        </member>
        <member name="M:HslControls.HslLanternSimple.#ctor">
            <summary>
            实例化一个灯控件信息
            </summary>
        </member>
        <member name="M:HslControls.HslLanternSimple.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslLanternSimple.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="P:HslControls.HslLanternSimple.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslLanternSimple.LanternBackground">
            <summary>
            获取或设置灯信号的前景色
            </summary>
        </member>
        <member name="P:HslControls.HslLanternSimple.CenterBackground">
            <summary>
            获取或设置中心点的颜色，当且仅当UseGradientColor属性为True时生效
            </summary>
        </member>
        <member name="P:HslControls.HslLanternSimple.UseGradientColor">
            <summary>
            获取或设置当前的灯信号是否启用渐变色的画刷
            </summary>
        </member>
        <member name="P:HslControls.HslLanternSimple.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="M:HslControls.HslLanternSimple.PerformClick">
            <summary>
            触发一次鼠标点击的事件
            </summary>
        </member>
        <member name="F:HslControls.HslLanternSimple.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslLanternSimple.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslLanternSimple.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslLedDisplay">
            <summary>
            数码管显示的控件信息，可以显示一串数码管的信息
            </summary>
        </member>
        <member name="M:HslControls.HslLedDisplay.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="M:HslControls.HslLedDisplay.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslLedDisplay.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="P:HslControls.HslLedDisplay.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslLedDisplay.DisplayNumber">
            <summary>
            获取或设置数码管显示的位数
            </summary>
        </member>
        <member name="P:HslControls.HslLedDisplay.LedNumberSize">
            <summary>
            获取或设置数码管显示的大小
            </summary>
        </member>
        <member name="P:HslControls.HslLedDisplay.DisplayText">
            <summary>
            获取或设置数码管显示的内容
            </summary>
        </member>
        <member name="P:HslControls.HslLedDisplay.DisplayBackColor">
            <summary>
            获取或设置数码管数字的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslLedDisplay.ForeColor">
            <summary>
            获取或设置数码管数字的前景色
            </summary>
        </member>
        <member name="P:HslControls.HslLedDisplay.UnitText">
            <summary>
            获取或设置数码管数字的单位文本
            </summary>
        </member>
        <member name="P:HslControls.HslLedDisplay.LeftRightOffect">
            <summary>
            获取或设置数码管两端的空闲长度
            </summary>
        </member>
        <member name="P:HslControls.HslLedDisplay.LedPointSize">
            <summary>
            获取或设置数码管小数点的大小
            </summary>
        </member>
        <member name="F:HslControls.HslLedDisplay.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslLedDisplay.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslLedDisplay.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslMachineCenter">
            <summary>
            设备的加工中心的控件
            </summary>
        </member>
        <member name="M:HslControls.HslMachineCenter.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="P:HslControls.HslMachineCenter.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslMachineCenter.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslMachineCenter.DoorOpenStatus">
            <summary>
            门的开关状态
            </summary>
        </member>
        <member name="P:HslControls.HslMachineCenter.LightRed">
            <summary>
            是否显示红灯的信息
            </summary>
        </member>
        <member name="P:HslControls.HslMachineCenter.LightYellow">
            <summary>
            是否显示黄灯的信息
            </summary>
        </member>
        <member name="P:HslControls.HslMachineCenter.LightGreen">
            <summary>
            是否显示绿灯的信息
            </summary>
        </member>
        <member name="M:HslControls.HslMachineCenter.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重绘控件的
            </summary>
            <param name="e">重绘事件</param>
        </member>
        <member name="M:HslControls.HslMachineCenter.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="F:HslControls.HslMachineCenter.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslMachineCenter.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslMachineCenter.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslMotor">
            <summary>
            一个电机的基本控件
            </summary>
        </member>
        <member name="M:HslControls.HslMotor.#ctor">
            <summary>
            实例化一个默认的电机控件
            </summary>
        </member>
        <member name="P:HslControls.HslMotor.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslMotor.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslMotor.EdgeColor">
            <summary>
            获取或设置电机的主题色
            </summary>
        </member>
        <member name="P:HslControls.HslMotor.CenterColor">
            <summary>
            获取或设置电机的比较淡的中间色
            </summary>
        </member>
        <member name="P:HslControls.HslMotor.BorderColor">
            <summary>
            获取或设置电机的边框的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslMotor.Direction">
            <summary>
            获取或设置点击的方向，默认是向右的方向
            </summary>
        </member>
        <member name="M:HslControls.HslMotor.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重绘控件的
            </summary>
            <param name="e">重绘事件</param>
        </member>
        <member name="M:HslControls.HslMotor.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="F:HslControls.HslMotor.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslMotor.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslMotor.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslMoveText">
            <summary>
            移动的文本控件
            </summary>
        </member>
        <member name="M:HslControls.HslMoveText.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="P:HslControls.HslMoveText.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslMoveText.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslMoveText.PumpStyle">
            <summary>
            获取或设置泵控件是否是横向的还是纵向的
            </summary>
        </member>
        <member name="P:HslControls.HslMoveText.MoveSpeed">
            <summary>
            获取或设置泵的动画速度，0为静止，正数为正向流动，负数为反向流动
            </summary>
        </member>
        <member name="M:HslControls.HslMoveText.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重绘控件的
            </summary>
            <param name="e">重绘事件</param>
        </member>
        <member name="M:HslControls.HslMoveText.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="F:HslControls.HslMoveText.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslMoveText.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslMoveText.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslPanel">
            <inheritdoc cref="T:System.Windows.Forms.Panel"/>
        </member>
        <member name="M:HslControls.HslPanel.#ctor">
            <inheritdoc cref="M:System.Windows.Forms.Panel.#ctor"/>
        </member>
        <member name="M:HslControls.HslPanel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="P:HslControls.HslPanel.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslPanel.BorderColor">
            <summary>
            获取或设置当前panel的边框颜色
            </summary>
        </member>
        <member name="P:HslControls.HslPanel.EdgeColor">
            <summary>
            获取或设置当前panel的渐变色的边缘颜色
            </summary>
        </member>
        <member name="P:HslControls.HslPanel.CenterColor">
            <summary>
            获取或设置当前panel的渐变色的中间颜色
            </summary>
        </member>
        <member name="T:HslControls.HslPanelHead">
            <summary>
            带有文本头的Panel控件
            </summary>
        </member>
        <member name="M:HslControls.HslPanelHead.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="P:HslControls.HslPanelHead.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslPanelHead.ThemeColor">
            <summary>
            获取或设置当前控件的主题色
            </summary>
        </member>
        <member name="P:HslControls.HslPanelHead.HeadHeight">
            <summary>
            获取或设置控件顶部文本的高度
            </summary>
        </member>
        <member name="P:HslControls.HslPanelHead.ShowBorder">
            <summary>
            获取或设置控件是否显示边框
            </summary>
        </member>
        <member name="T:HslControls.HslPanelText">
            <summary>
            带有一个文本的扩展的Panel容器
            </summary>
        </member>
        <member name="M:HslControls.HslPanelText.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="P:HslControls.HslPanelText.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslPanelText.ThemeColor">
            <summary>
            获取或设置当前控件的主题色
            </summary>
        </member>
        <member name="P:HslControls.HslPanelText.TextOffect">
            <summary>
            获取或设置控件顶部文本的高度
            </summary>
        </member>
        <member name="M:HslControls.HslPanelText.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="T:HslControls.HslPanelTextBack">
            <summary>
            带有一个文本的扩展的Panel容器
            </summary>
        </member>
        <member name="M:HslControls.HslPanelTextBack.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="P:HslControls.HslPanelTextBack.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslPanelTextBack.BorderColor">
            <summary>
            获取或设置当前控件的主题色
            </summary>
        </member>
        <member name="P:HslControls.HslPanelTextBack.PanelBackColor">
            <summary>
            获取或设置当前控件的重要背景色
            </summary>
        </member>
        <member name="P:HslControls.HslPanelTextBack.PanelTextBackColor">
            <summary>
            获取或设置当前控件的标题文本的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslPanelTextBack.TextOffect">
            <summary>
            获取或设置控件顶部文本的高度
            </summary>
        </member>
        <member name="T:HslControls.HslPieChart">
            <summary>
            饼图的控件
            </summary>
        </member>
        <member name="M:HslControls.HslPieChart.#ctor">
            <summary>
            实例化一个饼图的控件
            </summary>
        </member>
        <member name="P:HslControls.HslPieChart.IsRenderPercent">
            <summary>
            是否显示百分比信息
            </summary>
        </member>
        <member name="P:HslControls.HslPieChart.IsRenderSmall">
            <summary>
            是否在图形上显示占比非常小的文本信息
            </summary>
        </member>
        <member name="P:HslControls.HslPieChart.TextMargin">
            <summary>
            获取或设置文本距离，单位为像素，默认40
            </summary>
        </member>
        <member name="P:HslControls.HslPieChart.PercentColor">
            <summary>
            获取或设置文百分比文字的颜色信息
            </summary>
        </member>
        <member name="P:HslControls.HslPieChart.BorderColor">
            <summary>
            获取或设置边框的颜色信息
            </summary>
        </member>
        <member name="P:HslControls.HslPieChart.PercentFormat">
            <summary>
            获取或设置文百分比文字的格式化信息
            </summary>
        </member>
        <member name="P:HslControls.HslPieChart.StartAngle">
            <summary>
            获取或设置初始的角度信息，默认为0，可以设置 0 - 360 范围
            </summary>
        </member>
        <member name="P:HslControls.HslPieChart.RotateDirection">
            <summary>
            获取或设置当前饼图的旋转方向，选择 ClockWise 为顺时针，AntiClockWise 为逆时针
            </summary>
        </member>
        <member name="M:HslControls.HslPieChart.GetRandomColor">
            <summary>
            随机生成颜色，该颜色相对于白色为深色颜色
            </summary>
            <returns>颜色信息</returns>
        </member>
        <member name="M:HslControls.HslPieChart.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslPieChart.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="M:HslControls.HslPieChart.PaintMain(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            将饼图控件绘制在指定的图形上
            </summary>
            <param name="g">图形句柄对象</param>
            <param name="width">绘制的宽度，像素为单位</param>
            <param name="height">绘制的高度，像素为单位</param>
        </member>
        <member name="M:HslControls.HslPieChart.SetDataSource(HslControls.HslPieItem[])">
            <summary>
            设置显示的数据源，可以自定义线条颜色和文字颜色信息
            </summary>
            <param name="source">特殊的显示对象</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:HslControls.HslPieChart.SetDataSource(System.String[],System.Int32[])">
            <summary>
            根据名称和值进行数据源的显示，两者的长度需要一致，使用随机的颜色进行填充
            </summary>
            <param name="names">名称</param>
            <param name="values">值</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="F:HslControls.HslPieChart.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslPieChart.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslPieChart.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslPieItem">
            <summary>
            饼图的基本元素
            </summary>
        </member>
        <member name="M:HslControls.HslPieItem.#ctor">
            <summary>
            实例化一个饼图基本元素的对象
            </summary>
        </member>
        <member name="P:HslControls.HslPieItem.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:HslControls.HslPieItem.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:HslControls.HslPieItem.PieColor">
            <summary>
            饼图背景的颜色信息
            </summary>
        </member>
        <member name="P:HslControls.HslPieItem.FontColor">
            <summary>
            文字的颜色，如果没有指定，就选择和 <seealso cref="P:HslControls.HslPieItem.PieColor"/> 一样。
            </summary>
        </member>
        <member name="P:HslControls.HslPieItem.LineColor">
            <summary>
            线条的颜色信息
            </summary>
        </member>
        <member name="T:HslControls.HslPipeLine">
            <summary>
            一个简单的管道线控件，只能横竖两种模式，支持流动动画显示
            </summary>
        </member>
        <member name="M:HslControls.HslPipeLine.#ctor">
            <summary>
            实例化一个默认的管道线对象
            </summary>
        </member>
        <member name="M:HslControls.HslPipeLine.#ctor(System.Boolean)">
            <summary>
            实例化一个默认的管道线对象
            </summary>
        </member>
        <member name="M:HslControls.HslPipeLine.OnLoad(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslPipeLine.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslPipeLine.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="M:HslControls.HslPipeLine.TimerExecute">
            <summary>
            定时执行的功能方法，用于计算偏移信息和角度信息
            </summary>
        </member>
        <member name="P:HslControls.HslPipeLine.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslPipeLine.EdgeColor">
            <summary>
            获取或设置管道控件的边缘颜色
            </summary>
        </member>
        <member name="P:HslControls.HslPipeLine.LineCenterColor">
            <summary>
            获取或设置管道控件的中心颜色
            </summary>
        </member>
        <member name="P:HslControls.HslPipeLine.PipeTurnLeft">
            <summary>
            获取或设置管道控件左侧或是上方的端点朝向
            </summary>
        </member>
        <member name="P:HslControls.HslPipeLine.PipeTurnRight">
            <summary>
            获取或设置管道控件右侧或是下方的端点朝向
            </summary>
        </member>
        <member name="P:HslControls.HslPipeLine.PipeLineStyle">
            <summary>
            获取或设置管道控件是否是横向的还是纵向的
            </summary>
        </member>
        <member name="P:HslControls.HslPipeLine.PipeLineActive">
            <summary>
            获取或设置管道线是否激活液体显示
            </summary>
        </member>
        <member name="P:HslControls.HslPipeLine.MoveSpeed">
            <summary>
            获取或设置管道线液体流动的速度，0为静止，正数为正向流动，负数为反向流动
            </summary>
        </member>
        <member name="P:HslControls.HslPipeLine.TimerInterval">
            <summary>
            获取或设置液体控制的定时器刷新的间隔，默认是50
            </summary>
        </member>
        <member name="P:HslControls.HslPipeLine.PipeLineWidth">
            <summary>
            获取或设置中间管道线的宽度信息，默认为3
            </summary>
        </member>
        <member name="P:HslControls.HslPipeLine.ActiveLineCenterColor">
            <summary>
            获取或设置流动状态时管道控件的中心颜色
            </summary>
        </member>
        <member name="P:HslControls.HslPipeLine.AntLength">
            <summary>
            获取或设置蚂蚁线的长度信息
            </summary>
        </member>
        <member name="F:HslControls.HslPipeLine.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslPipeLine.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslPipeLine.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslPipeTurnDirection">
            <summary>
            管道线的端点朝向
            </summary>
        </member>
        <member name="F:HslControls.HslPipeTurnDirection.Up">
            <summary>
            向上
            </summary>
        </member>
        <member name="F:HslControls.HslPipeTurnDirection.Down">
            <summary>
            向下
            </summary>
        </member>
        <member name="F:HslControls.HslPipeTurnDirection.Left">
            <summary>
            向左
            </summary>
        </member>
        <member name="F:HslControls.HslPipeTurnDirection.Right">
            <summary>
            向右
            </summary>
        </member>
        <member name="F:HslControls.HslPipeTurnDirection.None">
            <summary>
            无效果
            </summary>
        </member>
        <member name="T:HslControls.HslPipeLineThree">
            <summary>
            一个简单的管道线控件，只能横竖两种模式，支持流动动画显示
            </summary>
        </member>
        <member name="M:HslControls.HslPipeLineThree.#ctor">
            <summary>
            实例化一个默认的管道线对象
            </summary>
        </member>
        <member name="M:HslControls.HslPipeLineThree.#ctor(System.Boolean)">
            <summary>
            实例化一个默认的管道线对象
            </summary>
        </member>
        <member name="M:HslControls.HslPipeLineThree.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslPipeLineThree.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="M:HslControls.HslPipeLineThree.TimerExecute">
            <summary>
            定时执行的功能方法，用于计算偏移信息和角度信息
            </summary>
        </member>
        <member name="P:HslControls.HslPipeLineThree.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslPipeLineThree.EdgeColor">
            <summary>
            获取或设置管道控件的边缘颜色
            </summary>
        </member>
        <member name="P:HslControls.HslPipeLineThree.LineCenterColor">
            <summary>
            获取或设置管道控件的中心颜色
            </summary>
        </member>
        <member name="P:HslControls.HslPipeLineThree.PipeLineStyle">
            <summary>
            获取或设置管道控件是否是横向的还是纵向的
            </summary>
        </member>
        <member name="P:HslControls.HslPipeLineThree.PipeLineActive1">
            <summary>
            获取或设置管道1号线是否激活液体显示
            </summary>
        </member>
        <member name="P:HslControls.HslPipeLineThree.PipeLineActive2">
            <summary>
            获取或设置管道2号线是否激活液体显示
            </summary>
        </member>
        <member name="P:HslControls.HslPipeLineThree.PipeLineActive3">
            <summary>
            获取或设置管道3号线是否激活液体显示
            </summary>
        </member>
        <member name="P:HslControls.HslPipeLineThree.MoveSpeed1">
            <summary>
            获取或设置管道1号线液体流动的速度，0为静止，正数为正向流动，负数为反向流动
            </summary>
        </member>
        <member name="P:HslControls.HslPipeLineThree.MoveSpeed2">
            <summary>
            获取或设置管道2号线液体流动的速度，0为静止，正数为正向流动，负数为反向流动
            </summary>
        </member>
        <member name="P:HslControls.HslPipeLineThree.MoveSpeed3">
            <summary>
            获取或设置管道3号线液体流动的速度，0为静止，正数为正向流动，负数为反向流动
            </summary>
        </member>
        <member name="P:HslControls.HslPipeLineThree.TimerInterval">
            <summary>
            获取或设置液体控制的定时器刷新的间隔，默认是50
            </summary>
        </member>
        <member name="P:HslControls.HslPipeLineThree.PipeLineWidth">
            <summary>
            获取或设置中间管道线的宽度信息，默认为3
            </summary>
        </member>
        <member name="P:HslControls.HslPipeLineThree.ActiveLineCenterColor">
            <summary>
            获取或设置流动状态时管道控件的中心颜色
            </summary>
        </member>
        <member name="P:HslControls.HslPipeLineThree.PipeWidth">
            <summary>
            获取或设置管道的宽度，默认为30
            </summary>
        </member>
        <member name="P:HslControls.HslPipeLineThree.AntLength">
            <summary>
            获取或设置蚂蚁线的长度信息
            </summary>
        </member>
        <member name="F:HslControls.HslPipeLineThree.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslPipeLineThree.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslPipeLineThree.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslPlay">
            <summary>
            一个播放样式的按钮，支持开始和结束的两种操作方法
            </summary>
        </member>
        <member name="M:HslControls.HslPlay.#ctor">
            <summary>
            实例化一个对象
            </summary>
        </member>
        <member name="P:HslControls.HslPlay.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslPlay.ForeColor">
            <summary>
            获取或设置当前控件的文本的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslPlay.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslPlay.ActiveColor">
            <summary>
            当点击了开始播放的时候的前景色
            </summary>
        </member>
        <member name="P:HslControls.HslPlay.BorderColor">
            <summary>
            获取或设置外层圈圈的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslPlay.Played">
            <summary>
            获取或设置是否处于播放中的状态
            </summary>
        </member>
        <member name="M:HslControls.HslPlay.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            当鼠标点击的事件触发的时候
            </summary>
            <param name="e">点击事件</param>
        </member>
        <member name="M:HslControls.HslPlay.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslPlay.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="E:HslControls.HslPlay.OnPlayChanged">
            <summary>
            开关按钮发生变化的事件
            </summary>
        </member>
        <member name="F:HslControls.HslPlay.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslPlay.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslPlay.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslProgress">
            <summary>
            进度条控件，支持横向和纵向的两种模式，支持动画效果
            </summary>
        </member>
        <member name="M:HslControls.HslProgress.#ctor">
            <summary>
            实例化一个对象
            </summary>
        </member>
        <member name="P:HslControls.HslProgress.BackColor">
            <summary>
            获取或设置进度条的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslProgress.ProgressColor">
            <summary>
            获取或设置进度的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslProgress.Max">
            <summary>
            获取或设置进度条的最大值，默认为100
            </summary>
        </member>
        <member name="P:HslControls.HslProgress.Value">
            <summary>
            当前进度条的值，不能大于最大值或小于0
            </summary>
        </member>
        <member name="P:HslControls.HslProgress.IsTextRender">
            <summary>
            是否显示进度
            </summary>
        </member>
        <member name="P:HslControls.HslProgress.BorderColor">
            <summary>
            设置进度条的边框颜色
            </summary>
        </member>
        <member name="P:HslControls.HslProgress.ValueChangeSpeed">
            <summary>
            设置进度变更的速度
            </summary>
        </member>
        <member name="P:HslControls.HslProgress.UseAnimation">
            <summary>
            获取或设置进度条变化的时候是否采用动画效果
            </summary>
        </member>
        <member name="P:HslControls.HslProgress.ProgressStyle">
            <summary>
            进度条的样式
            </summary>
        </member>
        <member name="P:HslControls.HslProgress.TextRenderFormat">
            <summary>
            获取或设置自定义的格式化文本信息
            </summary>
        </member>
        <member name="M:HslControls.HslProgress.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslProgress.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="F:HslControls.HslProgress.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslProgress.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslProgress.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslProgressStyle">
            <summary>
            进度条的样子
            </summary>
        </member>
        <member name="F:HslControls.HslProgressStyle.Horizontal">
            <summary>
            进度条是横向摆放的
            </summary>
        </member>
        <member name="F:HslControls.HslProgressStyle.Vertical">
            <summary>
            纵向的进度条
            </summary>
        </member>
        <member name="F:HslControls.HslProgressStyle.Circular">
            <summary>
            圆形的进度条
            </summary>
        </member>
        <member name="T:HslControls.HslProgressBar">
            <summary>
            在系统自带的进度条上再新增了进度文本的显示，可选多种显示方式，增加了进度条颜色的设置
            </summary>
        </member>
        <member name="M:HslControls.HslProgressBar.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="P:HslControls.HslProgressBar.ProgressStyle">
            <summary>
            获取或设置显示的文本样式
            </summary>
        </member>
        <member name="P:HslControls.HslProgressBar.InflateWidth">
            <summary>
            获取或设置控件缩进的宽度信息
            </summary>
        </member>
        <member name="P:HslControls.HslProgressBar.ProgressColor">
            <summary>
            获取或设置进度条的前景色，如果为透明，则使用系统的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslProgressBar.UseBackColor">
            <summary>
            获取或设置是否使用BackColor颜色来绘制背景色
            </summary>
        </member>
        <member name="P:HslControls.HslProgressBar.UseSmallSquares">
            <summary>
            获取或设置是否使用小方块来表示进度条的显示效果，当<seealso cref="P:HslControls.HslProgressBar.ProgressColor"/>不为<seealso cref="P:System.Drawing.Color.Transparent"/>时有效
            </summary>
        </member>
        <member name="P:HslControls.HslProgressBar.CustmerTextTranslate">
            <summary>
            自定义的文本转换器，参数分别为进度条当前值，最大值，返回显示的文本消息，如果想要设置自定义有效，则需要设置 <see cref="P:HslControls.HslProgressBar.ProgressStyle"/> 为 <see cref="F:HslControls.ProgressStyle.Customer"/>
            </summary>
        </member>
        <member name="M:HslControls.HslProgressBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslProgressBar.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="T:HslControls.ProgressStyle">
            <summary>
            进度条的显示文本的样式
            </summary>
        </member>
        <member name="F:HslControls.ProgressStyle.None">
            <summary>
            不显示文本信息
            </summary>
        </member>
        <member name="F:HslControls.ProgressStyle.Number">
            <summary>
            显示数字信息
            </summary>
        </member>
        <member name="F:HslControls.ProgressStyle.Percent">
            <summary>
            显示百分比信息
            </summary>
        </member>
        <member name="F:HslControls.ProgressStyle.Size">
            <summary>
            显示大小信息
            </summary>
        </member>
        <member name="F:HslControls.ProgressStyle.Customer">
            <summary>
            用户自定义
            </summary>
        </member>
        <member name="M:HslControls.HslProgressColorful.#ctor">
            <summary>
            实例化一个对象
            </summary>
        </member>
        <member name="P:HslControls.HslProgressColorful.BackColor">
            <summary>
            获取或设置进度条的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslProgressColorful.ProgressColor">
            <summary>
            获取或设置进度的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslProgressColorful.Max">
            <summary>
            获取或设置进度条的最大值，默认为100
            </summary>
        </member>
        <member name="P:HslControls.HslProgressColorful.Value">
            <summary>
            当前进度条的值，不能大于最大值或小于0
            </summary>
        </member>
        <member name="P:HslControls.HslProgressColorful.IsTextRender">
            <summary>
            是否显示进度
            </summary>
        </member>
        <member name="P:HslControls.HslProgressColorful.BorderColor">
            <summary>
            设置进度条的边框颜色
            </summary>
        </member>
        <member name="P:HslControls.HslProgressColorful.CenterColor">
            <summary>
            获取或设置进度条中间的过渡色
            </summary>
        </member>
        <member name="P:HslControls.HslProgressColorful.ValueChangeSpeed">
            <summary>
            设置进度变更的速度
            </summary>
        </member>
        <member name="P:HslControls.HslProgressColorful.UseAnimation">
            <summary>
            获取或设置进度条变化的时候是否采用动画效果
            </summary>
        </member>
        <member name="P:HslControls.HslProgressColorful.ProgressStyle">
            <summary>
            进度条的样式
            </summary>
        </member>
        <member name="M:HslControls.HslProgressColorful.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重绘整个控件的界面
            </summary>
            <param name="e">重绘事件</param>
        </member>
        <member name="M:HslControls.HslProgressColorful.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="F:HslControls.HslProgressColorful.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslProgressColorful.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslProgressColorful.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslProgressLine">
            <summary>
            进度条控件，采用标准的线段绘制，支持横向和纵向的两种模式，支持动画效果
            </summary>
        </member>
        <member name="M:HslControls.HslProgressLine.#ctor">
            <summary>
            实例化一个默认的进度条控件
            </summary>
        </member>
        <member name="P:HslControls.HslProgressLine.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslProgressLine.ProgressBackColor">
            <summary>
            获取或设置进度条的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslProgressLine.ProgressColor">
            <summary>
            获取或设置进度的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslProgressLine.Max">
            <summary>
            获取或设置进度条的最大值，默认为100
            </summary>
        </member>
        <member name="P:HslControls.HslProgressLine.Value">
            <summary>
            当前进度条的值，不能大于最大值或小于0
            </summary>
        </member>
        <member name="P:HslControls.HslProgressLine.ProgressStyle">
            <summary>
            进度条的样式
            </summary>
        </member>
        <member name="P:HslControls.HslProgressLine.ValueChangeSpeed">
            <summary>
            设置进度变更的速度
            </summary>
        </member>
        <member name="P:HslControls.HslProgressLine.UseAnimation">
            <summary>
            获取或设置进度条变化的时候是否采用动画效果
            </summary>
        </member>
        <member name="P:HslControls.HslProgressLine.IsTextRender">
            <summary>
            是否显示进度
            </summary>
        </member>
        <member name="P:HslControls.HslProgressLine.TextRenderFormat">
            <summary>
            获取或设置自定义的格式化文本信息
            </summary>
        </member>
        <member name="M:HslControls.HslProgressLine.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslProgressLine.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="F:HslControls.HslProgressLine.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslProgressLine.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslProgressLine.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslPumpOne">
            <summary>
            一个泵的控件，允许设置进口和出口的位置，以及是否转动的操作。
            </summary>
        </member>
        <member name="M:HslControls.HslPumpOne.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="P:HslControls.HslPumpOne.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslPumpOne.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslPumpOne.PumpStyle">
            <summary>
            获取或设置泵控件是否是横向的还是纵向的
            </summary>
        </member>
        <member name="P:HslControls.HslPumpOne.MoveSpeed">
            <summary>
            获取或设置泵的动画速度，0为静止，正数为正向流动，负数为反向流动
            </summary>
        </member>
        <member name="P:HslControls.HslPumpOne.Color1">
            <summary>
            获取或设置颜色1
            </summary>
        </member>
        <member name="P:HslControls.HslPumpOne.Color2">
            <summary>
            获取或设置颜色2
            </summary>
        </member>
        <member name="P:HslControls.HslPumpOne.Color3">
            <summary>
            获取或设置颜色3
            </summary>
        </member>
        <member name="P:HslControls.HslPumpOne.Color4">
            <summary>
            获取或设置颜色4
            </summary>
        </member>
        <member name="P:HslControls.HslPumpOne.Color5">
            <summary>
            获取或设置颜色5
            </summary>
        </member>
        <member name="P:HslControls.HslPumpOne.Color6">
            <summary>
            获取或设置颜色6
            </summary>
        </member>
        <member name="P:HslControls.HslPumpOne.Color7">
            <summary>
            获取或设置颜色7
            </summary>
        </member>
        <member name="P:HslControls.HslPumpOne.Entrance">
            <summary>
            入口管道的位置
            </summary>
        </member>
        <member name="P:HslControls.HslPumpOne.Export">
            <summary>
            出口管道的位置
            </summary>
        </member>
        <member name="M:HslControls.HslPumpOne.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslPumpOne.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="F:HslControls.HslPumpOne.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslPumpOne.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslPumpOne.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslSignature">
            <summary>
            一个用于签名的控件，方便实现用户的签名，保存
            </summary>
        </member>
        <member name="M:HslControls.HslSignature.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="P:HslControls.HslSignature.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslSignature.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslSignature.EnableSign">
            <summary>
            获取或设置当前控件的是否允许签名，默认是允许签名的
            </summary>
        </member>
        <member name="P:HslControls.HslSignature.SignWidth">
            <summary>
            获取或设置当前签名控件的宽度信息
            </summary>
        </member>
        <member name="P:HslControls.HslSignature.SignColor">
            <summary>
            获取或设置当前签名的颜色
            </summary>
        </member>
        <member name="M:HslControls.HslSignature.ClearSign">
            <summary>
            清除当前所有的签名内容
            </summary>
        </member>
        <member name="M:HslControls.HslSignature.SaveBitmap">
            <summary>
            获取签名的图像
            </summary>
            <returns>图片信息</returns>
        </member>
        <member name="M:HslControls.HslSignature.SaveBitmap(System.String)">
            <summary>
            获取签名的图像信息，并存储到文件
            </summary>
            <returns>图片信息</returns>
        </member>
        <member name="M:HslControls.HslSignature.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslSignature.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="F:HslControls.HslSignature.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslSignature.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslSignature.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslStatusManagement">
            <summary>
            一个状态集显示的控件
            </summary>
        </member>
        <member name="M:HslControls.HslStatusManagement.#ctor">
            <summary>
            实例化一个状态集的控件
            </summary>
        </member>
        <member name="P:HslControls.HslStatusManagement.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslStatusManagement.SpacingOffect">
            <summary>
            获取或设置状态间距信息
            </summary>
        </member>
        <member name="P:HslControls.HslStatusManagement.RowCount">
            <summary>
            获取或设置状态集的行数信息
            </summary>
        </member>
        <member name="P:HslControls.HslStatusManagement.ColCount">
            <summary>
            获取或设置状态集的列数信息
            </summary>
        </member>
        <member name="P:HslControls.HslStatusManagement.IsRenderBorder">
            <summary>
            获取或设置是否显示边框信息
            </summary>
        </member>
        <member name="P:HslControls.HslStatusManagement.RenderStyle">
            <summary>
            获取或设置状态集的显示样式，支持矩形，椭圆，菱形
            </summary>
        </member>
        <member name="P:HslControls.HslStatusManagement.GeneralColor">
            <summary>
            获取或设置所有状态集合体的默认背景色，设置本数据将会强制所有的颜色恢复初始化
            </summary>
        </member>
        <member name="P:HslControls.HslStatusManagement.BorderColor">
            <summary>
            获取或设置所有状态集合体的边框颜色
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:HslControls.HslStatusManagement.OnPaint(System.Windows.Forms.PaintEventArgs)" -->
        <member name="M:HslControls.HslStatusManagement.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="M:HslControls.HslStatusManagement.SetColorByLocation(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            通过行列信息来设置某个点的颜色
            </summary>
            <param name="rowIndex">行索引</param>
            <param name="colIndex">列索引</param>
            <param name="color">颜色信息</param>
        </member>
        <member name="M:HslControls.HslStatusManagement.ResetColorByLocation(System.Int32,System.Int32)">
            <summary>
            通过行列信息来复位某个点的颜色
            </summary>
            <param name="rowIndex">行索引</param>
            <param name="colIndex">列索引</param>
        </member>
        <member name="M:HslControls.HslStatusManagement.SetColorByLocation(System.Drawing.Point,System.Drawing.Color)">
            <summary>
            通过行列信息来设置某个点的颜色
            </summary>
            <param name="point">行列信息</param>
            <param name="color">颜色信息</param>
        </member>
        <member name="M:HslControls.HslStatusManagement.ResetColorByLocation(System.Drawing.Point)">
            <summary>
            通过行列信息来复位某个点的颜色
            </summary>
            <param name="point">行列信息</param>
        </member>
        <member name="M:HslControls.HslStatusManagement.SetColorByLocation(System.Drawing.Point[],System.Drawing.Color)">
            <summary>
            批量设置一些点的颜色信息
            </summary>
            <param name="points">点信息</param>
            <param name="color">颜色信息</param>
        </member>
        <member name="M:HslControls.HslStatusManagement.ResetColorByLocation(System.Drawing.Point[])">
            <summary>
            批量复位一些点的颜色信息
            </summary>
            <param name="points">点信息</param>
        </member>
        <member name="M:HslControls.HslStatusManagement.SetColorByRow(System.Int32,System.Drawing.Color)">
            <summary>
            将某一行的颜色都设置为指定的颜色
            </summary>
            <param name="rowIndex">行索引</param>
            <param name="color">颜色信息</param>
        </member>
        <member name="M:HslControls.HslStatusManagement.SetColorByRow(System.Int32,System.Drawing.Color[])">
            <summary>
            将某一行的颜色设置为指定的颜色
            </summary>
            <param name="rowIndex">行索引</param>
            <param name="colors">颜色信息</param>
        </member>
        <member name="M:HslControls.HslStatusManagement.ResetColorByRow(System.Int32)">
            <summary>
            将某一行的颜色都复位为默认的颜色
            </summary>
            <param name="rowIndex">行索引</param>
        </member>
        <member name="M:HslControls.HslStatusManagement.SetColorByCol(System.Int32,System.Drawing.Color)">
            <summary>
            将某一列的颜色都设置为指定的颜色
            </summary>
            <param name="colIndex">列索引</param>
            <param name="color">颜色信息</param>
        </member>
        <member name="M:HslControls.HslStatusManagement.SetColorByCol(System.Int32,System.Drawing.Color[])">
            <summary>
            将某一列的颜色设置为指定的颜色
            </summary>
            <param name="colIndex">列索引</param>
            <param name="colors">颜色信息</param>
        </member>
        <member name="M:HslControls.HslStatusManagement.ResetColorByCol(System.Int32)">
            <summary>
            将某一列的颜色都复位为默认的颜色
            </summary>
            <param name="colIndex">列索引</param>
        </member>
        <member name="M:HslControls.HslStatusManagement.SetColorAll(System.Drawing.Color)">
            <summary>
            将所有的位置的颜色都更新到指定的颜色
            </summary>
            <param name="color">颜色信息</param>
        </member>
        <member name="M:HslControls.HslStatusManagement.SetColorAll(System.Drawing.Color[])">
            <summary>
            将所有的位置的颜色都更新到指定的颜色
            </summary>
            <param name="colors">颜色信息</param>
        </member>
        <member name="M:HslControls.HslStatusManagement.ResetColorAll">
            <summary>
            将所有的位置的颜色都复位到指定的颜色
            </summary>
        </member>
        <member name="M:HslControls.HslStatusManagement.GetColorFromPosition(System.Int32,System.Int32)">
            <summary>
            获取指定位置的颜色信息，指定行索引，列索引
            </summary>
            <param name="rowIndex">行索引</param>
            <param name="colIndex">列索引</param>
            <returns>颜色信息</returns>
        </member>
        <member name="M:HslControls.HslStatusManagement.SetDescription(System.Int32,System.Int32,System.String)">
            <summary>
            设置指定行列的描述文本信息
            </summary>
            <param name="rowIndex">行索引</param>
            <param name="colIndex">列索引</param>
            <param name="description">描述信息</param>
        </member>
        <member name="M:HslControls.HslStatusManagement.SetAllDescription(System.String)">
            <summary>
            设置所有行列的描述文本信息
            </summary>
            <param name="description">描述信息</param>
        </member>
        <member name="M:HslControls.HslStatusManagement.ClearAllDescription">
            <summary>
            清楚所有行列的描述文本信息
            </summary>
        </member>
        <member name="M:HslControls.HslStatusManagement.SetAllDescription(System.String[])">
            <summary>
            将所有的位置的描述都更新到指定的描述
            </summary>
            <param name="descs">描述信息</param>
        </member>
        <member name="F:HslControls.HslStatusManagement.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslStatusManagement.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslStatusManagement.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslSwitch">
            <summary>
            一个开关操作的控件，可用于两种状态的切换
            </summary>
        </member>
        <member name="M:HslControls.HslSwitch.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="E:HslControls.HslSwitch.OnSwitchChanged">
            <summary>
            开关按钮发生变化的事件
            </summary>
        </member>
        <member name="P:HslControls.HslSwitch.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslSwitch.SwitchBackground">
            <summary>
            获取或设置开关按钮的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslSwitch.SwitchForeground">
            <summary>
            获取或设置开关按钮的前景色
            </summary>
        </member>
        <member name="P:HslControls.HslSwitch.SwitchStatus">
            <summary>
            获取或设置开关按钮的开合状态
            </summary>
        </member>
        <member name="P:HslControls.HslSwitch.SwitchStatusDescription">
            <summary>
            获取或设置两种开关状态的文本描述，例如："Off;On"
            </summary>
        </member>
        <member name="P:HslControls.HslSwitch.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslSwitch.ForeColor">
            <summary>
            获取或设置当前控件的文本的颜色
            </summary>
        </member>
        <member name="M:HslControls.HslSwitch.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslSwitch.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="M:HslControls.HslSwitch.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标的点击事件
            </summary>
            <param name="e">鼠标的点击事件</param>
        </member>
        <member name="M:HslControls.HslSwitch.ChangeSwitchStatus(System.Boolean)">
            <summary>
            通过当前方法来修改控件的状态，而不触发状态改变的事件
            </summary>
            <param name="status">新增状态值</param>
        </member>
        <member name="F:HslControls.HslSwitch.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslSwitch.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslSwitch.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslTable">
            <summary>
            表格控件
            </summary>
        </member>
        <member name="M:HslControls.HslTable.#ctor">
            <summary>
            实例化一个表格对象
            </summary>
        </member>
        <member name="P:HslControls.HslTable.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslTable.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslTable.ForeColor">
            <summary>
            获取或设置控件的前景色
            </summary>
        </member>
        <member name="P:HslControls.HslTable.BorderColor">
            <summary>
            获取或设置控件的表格边框的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslTable.HeaderColor">
            <summary>
            获取或设置当前的标题的文本颜色
            </summary>
        </member>
        <member name="P:HslControls.HslTable.TopHeaderColor">
            <summary>
            获取或设置当前的最大标题的文本颜色
            </summary>
        </member>
        <member name="P:HslControls.HslTable.RowsTotalCount">
            <summary>
            获取或设置当前表格的数据行的行数，不包括顶部最大的标题行
            </summary>
        </member>
        <member name="P:HslControls.HslTable.TopHeaderText">
            <summary>
            获取或设置当前最大标题的文本信息，默认为今日生产计划
            </summary>
        </member>
        <member name="P:HslControls.HslTable.AssistHeaderText">
            <summary>
            获取或设置当前辅助标题的文本信息，默认为9月2日
            </summary>
        </member>
        <member name="P:HslControls.HslTable.TopHeaderHeight">
            <summary>
            获取或设置当前最大标题的高度，如果小于1就是百分比，如果大于1就是绝对值
            </summary>
        </member>
        <member name="P:HslControls.HslTable.ColumnWidth">
            <summary>
            列的宽度信息设置，数组的长度决定了列的数量
            </summary>
        </member>
        <member name="P:HslControls.HslTable.ColumnHeader">
            <summary>
            列的标题信息设置，数组长度应该刚好是列的数组，如果少于，多出来的列则为空，如果大于，多出来的列则不显示
            </summary>
        </member>
        <member name="P:HslControls.HslTable.TopHeaderTextSize">
            <summary>
            获取或设置顶部标题的字体大小，默认18
            </summary>
        </member>
        <member name="P:HslControls.HslTable.IsShowColumnHeader">
            <summary>
            获取或设置是否显示列标题的文本信息
            </summary>
        </member>
        <member name="M:HslControls.HslTable.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslTable.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Single)">
            <summary>
            可以在任意的画刷上绘制当前的控件的图形
            </summary>
            <param name="g">画刷</param>
            <param name="width">宽度信息</param>
            <param name="height">高度信息</param>
        </member>
        <member name="T:HslControls.HslTable.DrawCellTextDelegate">
            <summary>
            绘制单元格的委托信息，可以自定义的实现一些高级的操作。
            </summary>
            <param name="g">绘图上下文</param>
            <param name="rowIndex">行号</param>
            <param name="colIndex">列号</param>
            <param name="rectangle">绘图的区域</param>
            <param name="value">本文内容</param>
            <param name="sf"></param>
        </member>
        <member name="E:HslControls.HslTable.OnDrawCellTextEvent">
            <summary>
            当绘制单元格的时候触发
            </summary>
        </member>
        <member name="M:HslControls.HslTable.DrawCellText(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.RectangleF,System.String,System.Drawing.StringFormat)">
            <summary>
            绘制单元格是核心方法，你也可以根据自己的需求进行重写，实现一些特殊的图形或是颜色显示
            </summary>
            <param name="g">绘图上下文</param>
            <param name="rowIndex">行索引</param>
            <param name="colIndex">列索引</param>
            <param name="rectangle">文本的区域</param>
            <param name="value">文本的值</param>
            <param name="sf">文本的对齐方式</param>
        </member>
        <member name="M:HslControls.HslTable.AddRowDown(System.String[])">
            <summary>
            从底部新增一条数据信息
            </summary>
            <param name="values">数据信息</param>
        </member>
        <member name="M:HslControls.HslTable.AddRowDown(System.Collections.Generic.List{System.String[]})">
            <summary>
            从底部新增多条数据信息
            </summary>
            <param name="values">数据信息</param>
        </member>
        <member name="M:HslControls.HslTable.AddRowTop(System.String[])">
            <summary>
            从顶部新增一条数据信息
            </summary>
            <param name="values">数据信息</param>
        </member>
        <member name="M:HslControls.HslTable.AddRowTop(System.Collections.Generic.List{System.String[]})">
            <summary>
            从顶部新增一条数据信息
            </summary>
            <param name="values">数据信息</param>
        </member>
        <member name="M:HslControls.HslTable.SetTableValue(System.Collections.Generic.List{System.String[]})">
            <summary>
            设置表的所有的数据信息
            </summary>
            <param name="values">数据值</param>
        </member>
        <member name="M:HslControls.HslTable.SetTableValue(System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            设置当前的表格的指定单元的数据内容，需要传递单元格信息，数据值，是否刷新界面。
            </summary>
            <param name="rowIndex">所在的行号信息</param>
            <param name="colIndex">所在的列号信息</param>
            <param name="value">数据值</param>
            <param name="updateUI">是否刷新界面</param>
        </member>
        <member name="M:HslControls.HslTable.GetTableValue(System.Int32,System.Int32)">
            <summary>
            获取指定行号，列号的单元格的文本信息，如果索引超出，返回NULL
            </summary>
            <param name="rowIndex">行号信息</param>
            <param name="colIndex">列号信息</param>
            <returns>单元格文本信息</returns>
        </member>
        <member name="M:HslControls.HslTable.GetTableValue">
            <summary>
            获取所有的数据信息
            </summary>
            <returns>单元格文本信息</returns>
        </member>
        <member name="F:HslControls.HslTable.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslTable.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslTable.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslTank">
            <summary>
            坦克大战的控件
            </summary>
        </member>
        <member name="M:HslControls.HslTank.#ctor">
            <summary>
            实例化一个默认的坦克大战的控件
            </summary>
        </member>
        <member name="F:HslControls.HslTank.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslTank.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslTank.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslTetris">
            <summary>
            一个俄罗斯方块的控件
            </summary>
        </member>
        <member name="M:HslControls.HslTetris.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="P:HslControls.HslTetris.FuncGetNewTetrisItem">
            <summary>
            获取或设置俄罗斯方块的单元的方法
            </summary>
        </member>
        <member name="F:HslControls.HslTetris.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslTetris.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslTetris.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslThermometer">
            <summary>
            一个温度计的控件，支持显示摄氏度，华氏度的温度信息
            </summary>
        </member>
        <member name="M:HslControls.HslThermometer.#ctor">
            <summary>
            实例化一个温度控件对象
            </summary>
        </member>
        <member name="P:HslControls.HslThermometer.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslThermometer.ValueStart">
            <summary>
            获取或设置数值的起始值，默认为0
            </summary>
        </member>
        <member name="P:HslControls.HslThermometer.ValueMax">
            <summary>
            获取或设置数值的最大值，默认为100
            </summary>
        </member>
        <member name="P:HslControls.HslThermometer.Value">
            <summary>
            获取或设置数值的当前值，应该处于最小值和最大值之间
            </summary>
        </member>
        <member name="P:HslControls.HslThermometer.SegmentCount">
            <summary>
            获取或设置温度计的分割段数，最小为2，最大1000
            </summary>
        </member>
        <member name="P:HslControls.HslThermometer.TemperatureColor">
            <summary>
            获取或设置温度计的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslThermometer.TemperatureBackColor">
            <summary>
            获取或设置温度计的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslThermometer.IsRenderText">
            <summary>
            获取或设置是否显示温度计的数值
            </summary>
        </member>
        <member name="P:HslControls.HslThermometer.LeftUnitText">
            <summary>
            获取或设置左侧的单位显示文本，默认是℃
            </summary>
        </member>
        <member name="P:HslControls.HslThermometer.RightUnitText">
            <summary>
            获取或设置右侧的单位显示文本，默认是°F
            </summary>
        </member>
        <member name="P:HslControls.HslThermometer.RightDataTransfer">
            <summary>
            获取或设置右侧轴的数值和左边的关系
            </summary>
        </member>
        <member name="M:HslControls.HslThermometer.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslThermometer.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="F:HslControls.HslThermometer.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslThermometer.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslThermometer.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HslControls.HslTitle.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslTitle.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslTitle.EdgeColor">
            <summary>
            获取或设置中间信息的边缘颜色
            </summary>
        </member>
        <member name="P:HslControls.HslTitle.LeftRightEdgeColor">
            <summary>
            获取或设置两侧的边缘颜色
            </summary>
        </member>
        <member name="P:HslControls.HslTitle.LeftRightCenterColorScale">
            <summary>
            获取或设置两侧的中间颜色的系数，范围 0-100，0表示等同于边缘色，100表示白色
            </summary>
        </member>
        <member name="P:HslControls.HslTitle.TitleStyle">
            <summary>
            获取或设置标题控件是否是横向的还是纵向的
            </summary>
        </member>
        <member name="P:HslControls.HslTitle.FontRight">
            <summary>
            获取或设置右侧文本的字体信息
            </summary>
        </member>
        <member name="P:HslControls.HslTitle.FontLeft">
            <summary>
            获取或设置左侧文本的字体信息
            </summary>
        </member>
        <member name="P:HslControls.HslTitle.LeftTextColor">
            <summary>
            获取或设置左侧文本的颜色信息
            </summary>
        </member>
        <member name="P:HslControls.HslTitle.RightTextColor">
            <summary>
            获取或设置右侧文本的颜色信息
            </summary>
        </member>
        <member name="P:HslControls.HslTitle.TextRight">
            <summary>
            获取或设置右侧文本的信息
            </summary>
        </member>
        <member name="P:HslControls.HslTitle.TextLeft">
            <summary>
            获取或设置左侧文本的信息
            </summary>
        </member>
        <member name="P:HslControls.HslTitle.WidthPercent">
            <summary>
            获取或设置中间文本的宽度百分比，0.5表示50%
            </summary>
        </member>
        <member name="M:HslControls.HslTitle.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重绘控件的
            </summary>
            <param name="e">重绘事件</param>
        </member>
        <member name="M:HslControls.HslTitle.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="F:HslControls.HslTitle.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslTitle.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslTitle.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HslControls.HslTruck.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslTruck.EdgeColor">
            <summary>
            获取或设置分类器控件的边缘颜色
            </summary>
        </member>
        <member name="P:HslControls.HslTruck.TruckAngle">
            <summary>
            获取或设置当前的卡车的倾斜角度，合适范围为0-21
            </summary>
        </member>
        <member name="P:HslControls.HslTruck.CenterColor">
            <summary>
            获取或设置分类器控件的中心颜色
            </summary>
        </member>
        <member name="P:HslControls.HslTruck.BorderColor">
            <summary>
            获取或设置分类器控件的边缘颜色
            </summary>
        </member>
        <member name="P:HslControls.HslTruck.ThemeColor">
            <summary>
            获取或设置卡车的主题颜色
            </summary>
        </member>
        <member name="P:HslControls.HslTruck.TruckStyle">
            <summary>
            获取或设置卡车的状态，有两个选择，1，2
            </summary>
        </member>
        <member name="P:HslControls.HslTruck.TurnDirection">
            <summary>
            获取或设置卡车的朝向，仅支持朝右边或是左边
            </summary>
        </member>
        <member name="M:HslControls.HslTruck.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslTruck.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="F:HslControls.HslTruck.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslTruck.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslTruck.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:HslControls.HslVacuumPump.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslVacuumPump.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslVacuumPump.PumpStyle">
            <summary>
            获取或设置泵控件是否是横向的还是纵向的
            </summary>
        </member>
        <member name="P:HslControls.HslVacuumPump.MoveSpeed">
            <summary>
            获取或设置泵的动画速度，0为静止，正数为正向流动，负数为反向流动
            </summary>
        </member>
        <member name="P:HslControls.HslVacuumPump.Color1">
            <summary>
            获取或设置颜色1
            </summary>
        </member>
        <member name="P:HslControls.HslVacuumPump.Color2">
            <summary>
            获取或设置颜色2
            </summary>
        </member>
        <member name="P:HslControls.HslVacuumPump.Color3">
            <summary>
            获取或设置颜色3
            </summary>
        </member>
        <member name="P:HslControls.HslVacuumPump.Color4">
            <summary>
            获取或设置颜色4
            </summary>
        </member>
        <member name="M:HslControls.HslVacuumPump.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HslControls.HslVacuumPump.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="F:HslControls.HslVacuumPump.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslVacuumPump.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslVacuumPump.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslValves">
            <summary>
            一个阀门控件，支持颜色的设置
            </summary>
        </member>
        <member name="M:HslControls.HslValves.#ctor">
            <summary>
            实例化一个阀门控件
            </summary>
        </member>
        <member name="P:HslControls.HslValves.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslValves.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslValves.EdgeColor">
            <summary>
            获取或设置阀门控件的边缘颜色
            </summary>
        </member>
        <member name="P:HslControls.HslValves.PipeLineStyle">
            <summary>
            获取或设置阀门控件的方向，可以是向上，也可以向右，向左，向下
            </summary>
        </member>
        <member name="M:HslControls.HslValves.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重绘控件的
            </summary>
            <param name="e">重绘事件</param>
        </member>
        <member name="M:HslControls.HslValves.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="F:HslControls.HslValves.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslValves.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslValves.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.HslWaterBox">
            <summary>
            水箱的控件
            </summary>
        </member>
        <member name="M:HslControls.HslWaterBox.#ctor">
            <summary>
            实例化一个默认的对象
            </summary>
        </member>
        <member name="P:HslControls.HslWaterBox.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:HslControls.HslWaterBox.Text">
            <summary>
            获取或设置当前控件的文本
            </summary>
        </member>
        <member name="P:HslControls.HslWaterBox.Value">
            <summary>
            获取或设置水池的高度信息，值为百分比的内容。
            </summary>
        </member>
        <member name="P:HslControls.HslWaterBox.BorderColor">
            <summary>
            获取或设置水池边框的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslWaterBox.EdgeColor">
            <summary>
            获取或设置水池边界的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslWaterBox.WaterColor">
            <summary>
            获取或设置水池的颜色
            </summary>
        </member>
        <member name="P:HslControls.HslWaterBox.EdgeWidth">
            <summary>
            获取或设置水池边界的宽度
            </summary>
        </member>
        <member name="M:HslControls.HslWaterBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重绘控件的
            </summary>
            <param name="e">重绘事件</param>
        </member>
        <member name="M:HslControls.HslWaterBox.PaintHslControls(System.Drawing.Graphics,System.Int32,System.Int32)">
            <inheritdoc cref="M:HslControls.HslArrow.PaintHslControls(System.Drawing.Graphics,System.Single,System.Single)"/>
        </member>
        <member name="F:HslControls.HslWaterBox.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:HslControls.HslWaterBox.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:HslControls.HslWaterBox.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:HslControls.NamespaceDoc">
            <summary>
            一个工业物联网的控件库，基于C#开发，配套HslCommunication组件可以实现工业上位机软件的快速开发，本库将持续的迭代更新
            <br /><br />
            官方网站：<a href="http://www.hslcommunication.cn/">http://www.hslcommunication.cn/</a>，包含组件的在线API地址以及一个MES DEMO的项目展示。
            <br /><br />
            <br /><br />
            </summary>
            <remarks>
            <br />
            <br />
            打赏请扫码：<br />
            <img src="https://raw.githubusercontent.com/dathlin/HslCommunication/master/imgs/support.png" />
            </remarks>
            <revisionHistory>
                <revision date="2018-12-18" version="1.0.0" author="Richard.Hu">
                    <list type="bullet">
                        <item>正式发布第一个版本的控件库。</item>
                    </list>
                </revision>
                <revision date="2018-12-21" version="1.0.1" author="Richard.Hu">
                    <list type="bullet">
                        <item>瓶子控件优化显示，底座高度可调节。</item>
                        <item>新增一个传送带的控件，可调节方向，大小。</item>
                    </list>
                </revision>
                <revision date="2018-12-24" version="1.0.2" author="Richard.Hu">
                    <list type="bullet">
                        <item>新增一个传送带滚筒的控件。</item>
                    </list>
                </revision>
                <revision date="2018-12-27" version="1.0.3" author="Richard.Hu">
                    <list type="bullet">
                        <item>新增一个温度计的控件。</item>
                    </list>
                </revision>
                <revision date="2018-12-30" version="1.0.4" author="Richard.Hu">
                    <list type="bullet">
                        <item>新增一个风机控件。</item>
                        <item>新增一个阀门控件。</item>
                    </list>
                </revision>
                <revision date="2019-1-2" version="1.0.5" author="Richard.Hu">
                    <list type="bullet">
                        <item>新增一个电池控件。</item>
                    </list>
                </revision>
                <revision date="2019-1-5" version="1.0.6" author="Richard.Hu">
                    <list type="bullet">
                        <item>修复电池控件初始值不为0的情况显示异常的bug。</item>
                        <item>修复曲线控件在特殊的情况下的精度丢失问题。</item>
                        <item>新增一个分类器的控件。</item>
                    </list>
                </revision>
                <revision date="2019-1-10" version="1.1.0" author="Richard.Hu">
                    <list type="bullet">
                        <item>激活方法新增是否激活成功的反馈。</item>
                        <item>修复时钟控件分钟属性拼写错误。</item>
                        <item>修复时钟控件在特别小的情况下显示错乱的异常。</item>
                        <item>修复LED控件前景色的默认属性。</item>
                        <item>新增一个五子棋的控件，支持人机对战。</item>
                        <item>新增一个俄罗斯方块的控件，demo中支持正常玩法和变态玩法。</item>
                        <item>新增一个状态集的控件，用于批量表示一些信号情况。</item>
                    </list>
                </revision>
                <revision date="2019-1-18" version="1.2.0" author="Richard.Hu">
                    <list type="bullet">
                        <item>修复状态集控件在矩形模式下显示模糊的bug。</item>
                        <item>新增一个历史曲线的控件，支持一些复杂的交互操作。</item>
                        <item>新增一个坦克大战的控件，目前比较粗糙。</item>
                    </list>
                </revision>
                <revision date="2019-1-20" version="1.2.1" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslBottle控件升级为所有的颜色可调。</item>
                        <item>电池控件新增是否启用动画的属性，可以自由的切换。</item>
                        <item>历史曲线控件新增是否显示右坐标。</item>
                        <item>历史曲线新增纵坐标轴的单位显示功能。</item>
                        <item>历史曲线新增很多颜色信息的可配置功能，满足大家各种审美需求。</item>
                    </list>
                </revision>
                <revision date="2019-1-24" version="1.2.2" author="Richard.Hu">
                    <list type="bullet">
                        <item>新增一个甘特图控件，可以用来表示时间占用信息。</item>
                        <item>曲线控件支持数据双击事件，可以方便的获取到数据索引和时间信息，无论图形是否缩放，都能获取到正确的数据。</item>
                    </list>
                </revision>
                <revision date="2019-1-31" version="1.2.3" author="Richard.Hu">
                    <list type="bullet">
                        <item>曲线控件修复一个调整大小时界面显示不正确的bug。</item>
                    </list>
                </revision>
                <revision date="2019-2-11" version="1.2.4" author="Richard.Hu">
                    <list type="bullet">
                        <item>修复所有的控件在不同的字体大小情况下显示错位的bug。</item>
                    </list>
                </revision>
                <revision date="2019-2-16" version="1.2.5" author="Richard.Hu">
                    <list type="bullet">
                        <item>修复实时曲线再显示追加批量数据出现的错位bug。</item>
                    </list>
                </revision>
                <revision date="2019-3-5" version="1.2.6" author="Richard.Hu">
                    <list type="bullet">
                        <item>实时曲线控件新增特殊点标记的功能。</item>
                        <item>实时曲线控件的缓存数据量调整为4096。</item>
                        <item>历史曲线控件新增特殊点标记的功能。</item>
                        <item>新增的数据点标记功能支持标记点颜色，文本颜色，文本位置的设置。</item>
                    </list>
                </revision>
                <revision date="2019-3-11" version="1.2.7" author="Richard.Hu">
                    <list type="bullet">
                        <item>新增实时曲线的实时标注信息。</item>
                    </list>
                </revision>
                <revision date="2019-3-14" version="2.0.0" author="Richard.Hu">
                    <list type="bullet">
                        <item>集成了几个新的chart控件，来自鞍山-OldCat的贡献，感谢支持。</item>
                        <item>历史曲线控件顶部曲线标题的宽度调整更长。</item>
                        <item>历史曲线控件鼠标活动时的提示矩形框的宽度可设置。</item>
                        <item>历史曲线控件新增线段标记功能。</item>
                    </list>
                </revision>
                <revision date="2019-4-20" version="2.0.4" author="Richard.Hu">
                    <list type="bullet">
                        <item>历史曲线新增移除标记的方法。</item>
                        <item>历史曲线新增曲线标题宽度设计。</item>
                        <item>历史曲线新增滚动条到右侧的公开方法。</item>
                        <item>修改所有的自定义属性分类为HslControls。</item>
                        <item>历史曲线支持鼠标选择区域后的事件触发。</item>
                        <item>实时曲线新增曲线名称，当且图标名称设置为空的时候显示。</item>
                        <item>实时曲线新增一个公开的方法，清楚所有曲线的数据，曲线重新从无开始显示。</item>
                        <item>新增一个箭头控件。</item>
                    </list>
                </revision>
                <revision date="2019-4-29" version="2.0.5" author="Richard.Hu">
                    <list type="bullet">
                        <item>LED控件新增单位属性，可以设置显示单位信息。</item>
                        <item>新增一个泵的控件，可以自由的调整2个口的位置。</item>
                    </list>
                </revision>
                <revision date="2019-5-16" version="2.0.6" author="Richard.Hu">
                    <list type="bullet">
                        <item>实时曲线新增横轴虚线的范围调整。</item>
                        <item>历史曲线新增横轴虚线的范围调整。默认200个像素点显示一条虚线。</item>
                        <item>历史曲线横轴的时间格式开放出来，现在可以根据自己的需求设置了。</item>
                        <item>历史曲线新增了移除所有的前置的区间标记的内容的API接口，需要调用RenderCurveUI()来刷新界面。</item>
                        <item>发布全新的安卓版本的控件库，目前实现了部分的控件内容。</item>
                    </list>
                </revision>
                <revision date="2019-5-20" version="2.0.7" author="Richard.Hu">
                    <list type="bullet">
                        <item>修复俄罗斯方块控件的一个空引用的bug。</item>
                        <item>历史曲线新增移除所有鼠标选择的区间范围方法。</item>
                        <item>时钟控件新增是否显示日期的属性选项。</item>
                        <item>仪表盘控件的指针大小可以调整。</item>
                        <item>新增一个全新的柱状图控件，可以支持颜色指定，详细见demo。</item>
                        <item>安卓版本的控件库新增仪表盘，饼图，柱状图，实时历史曲线控件。</item>
                        <item>祝天下有情人终成眷属。</item>
                    </list>
                </revision>
                <revision date="2019-5-27" version="2.1.0" author="Richard.Hu">
                    <list type="bullet">
                        <item>曲线控件的辅助线新增是否实线的选择，默认是虚线。</item>
                        <item>历史曲线控件新增一个属性，是否禁用光标区间选择，禁用后，光标将无法选择区间。</item>
                        <item>报警灯控件支持闪烁时间调节。</item>
                        <item>历史曲线新增一个设置自定义的横轴的数据功能。不用强制为时间，可以为任意的字符串。</item>
                        <item>温度控件的单位配置为可调，以便适用于更加普遍的情况，左右数据的映射关系的委托可自定义。</item>
                        <item>HslMotor: 新增电机控件。</item>
                        <item>安卓版控件新增传送带，报警灯，电机控件。</item>
                    </list>
                </revision>
                <revision date="2019-6-12" version="2.1.1" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslLanternSimple: 新增一个鼠标触发点击的方法PerformClick( )</item>
                        <item>HslBarChart: 最大值可以直接设置为小于0</item>
                        <item>HslCurveHistory: 支持双击的时候，固定光标内容。</item>
                        <item>HslCurveHistory: 新增Y轴的刻度线强制为整数的属性，这样刻度就不再出现小数点了。</item>
                        <item>新增2个卡片容器的控件。</item>
                    </list>
                </revision>
                <revision date="2019-6-16" version="2.1.2" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslCurve:修复实时曲线最大值最小值改成一样导致显示奔溃的bug。</item>
                        <item>HslCurve:实时曲线目前已经支持完全自定义的横轴数据新增，不再强制为时间相关的横坐标。</item>
                        <item>HslCurveHistory:历史曲线的光标挪动的提示位置在被阻挡时会自动挪到左侧。</item>
                    </list>
                </revision>
                <revision date="2019-6-30" version="2.1.3" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslThermometer:修复一个委托属性导致的设计器显示失败的bug。</item>
                        <item>winform:新增一个多彩进度条控件HslProgressColorful。</item>
                        <item>wpf:新增wpf版本的控件，已实现HslBottle,HslIndicator,HslLanternAlarm,HslLanternSimple,HslPipeLine,HslSwitch。</item>
                    </list>
                </revision>
                <revision date="2019-7-9" version="2.1.4" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslProgress:winform版本和安卓版的进度条新增显示任意的格式化文本的功能操作。</item>
                        <item>wpf控件:新增一个指示灯，阀门，及水池的控件，详细参照wpf的demo。</item>
                    </list>
                </revision>
                <revision date="2019-7-14" version="2.1.5" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslPipeLine:管道控件支持动画间隔设置，默认速度调整为0，中心线宽度及颜色可以调整。适用winform,wpf,andriod。</item>
                        <item>wpf控件:新增一个柱状图控件，使用方式和winform是一样的。</item>
                        <item>wpf控件:新增一个实时曲线控件，使用方式和winform是一样的。目前唯一不同的是点击曲线名，曲线还不能自动隐藏</item>
                        <item>新增一个cnc机床的控件，支持仓门的开关状态，适用winform,wpf,andriod。</item>
                    </list>
                </revision>
                <revision date="2019-7-21" version="2.1.6" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslMachineCenter添加新的加工中心控件，支持门的开合。适用winform,wpf,andriod。</item>
                        <item>HslTitle，新增winform的窗体标题控件，可以用来做看板界面的标题栏。</item>
                        <item>HslArrow: 箭头控件新增是否使用渐进色的属性，并默认为使用。</item>
                        <item>HslButton: 新增是否使用渐进色的属性，默认为不使用。</item>
                        <item>HslPanelTextBack: winform新增一个容器控件，可设置背景的容器控件，详细参照demo。</item>
                    </list>
                </revision>
                <revision date="2019-7-24" version="2.1.7" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslCncCenter: 数控机床控件新增一个报警灯，可选三个状态显示。适用winform,wpf,andriod。</item>
                    </list>
                </revision>
                <revision date="2019-7-31" version="2.1.8" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslGauge: 仪表盘控件现在支持赋值任意的值，当超过最大值或是最小值时，指针在最边上。</item>
                    </list>
                </revision>
                <revision date="2019-8-7" version="2.1.9" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslCurve: 曲线控件支持标签文本的插入显示，适用winform,wpf,android。</item>
                        <item>HslMachineCenter: 加工中心控件支持信号灯显示，适用winform,wpf,andriod。</item>
                        <item>HslPumpOne: wpf版本控件支持泵控件。</item>
                    </list>
                </revision>
                <revision date="2019-8-17" version="2.2.0" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslClock: 时钟控件新增属性是否显示星期几的信息，设置为false就不显示星期。</item>
                        <item>HslGauge: 仪表盘新增一个属性，单位数据可以显示在界面的下方。</item>
                        <item>HslCurveHistory: 历史曲线控件新增可标记的标题文本，在顶部固定区域显示的内容。</item>
                        <item>HMILedSingle: 新增一个超级信号灯控件，支持完善的属性配置，颜色配置，形状配置，边距配置。</item>
                        <item>HslVacuumPump: wpf 新增一个旋转泵控件，支持颜色，转动速度设置。</item>
                    </list>
                </revision>
                <revision date="2019-8-24" version="2.2.1" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslVacuumPump:winfrom及安卓控件新增双叶泵控件。</item>
                        <item>HslWaterBox: wpf版本新增一个水箱控件。</item>
                    </list>
                </revision>
                <revision date="2019-8-30" version="2.2.2" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslPieChart: 饼图控件显示优化，支持文本颜色可调，文本区域范围可调，winform和Android已经适配。</item>
                        <item>HslPieChart: 饼图控件在设计器模式下，初始化一个数据内容。</item>
                        <item>HslPieChart: 饼图控件的百分比显示支持自定义的格式化操作。</item>
                        <item>HslTitle: 标题控件的大小百分比调整。</item>
                        <item>HslMoveText: winform，wpf，Android新增移动文本控件，可设置字体，颜色，移动速度。</item>
                        <item>HslWaterPump: wpf控件新增水泵控件。</item>
                        <item>发布全新的Demo程序，基于Dockpanel实现的界面，外加属性窗口可任意设置属性。</item>
                        <item>新增控件库VIP群，入群费2000rmb，支持获取源代码，包含winform，wpf，安卓版本，支持永久更新，群号：893580884。</item>
                    </list>
                </revision>
                <revision date="2019-9-26" version="2.2.3" author="Richard.Hu">
                    <list type="bullet">
                        <item>大部分控件调整放大设置，不再随着字体变大而变大。</item>
                        <item>新增一个数字键盘，支持输入数字的功能，详细参考demo，仅支持winform。</item>
                        <item>新增控件库VIP群，入群费2000rmb，支持获取源代码，包含winform，wpf，安卓版本，支持永久更新，群号：893580884。</item>
                    </list>
                </revision>
                <revision date="2019-11-6" version="2.2.4" author="Richard.Hu">
                    <list type="bullet">
                        <item>历史曲线控件的曲线名称修复太长的情况造成换行的bug。</item>
                        <item>新增一个冷却风扇控件，支持转速调节，详细参考demo，支持winform，wpf,android，其中wpf版本动画效果最好。</item>
                    </list>
                </revision>
                <revision date="2019-11-9" version="2.2.5" author="Richard.Hu">
                    <list type="bullet">
                        <item>实时曲线的控件支持曲线中断功能，新增数据的时候，添加 float.NaN 即可。</item>
                        <item>历史的控件支持曲线中断功能，初始化曲线数据的时候，添加 float.NaN 即可。</item>
                        <item>wpf版本新增一个已经在winform上存在的控件，分类器控件。</item>
                    </list>
                </revision>
                <revision date="2019-12-12" version="2.2.6" author="Richard.Hu">
                    <list type="bullet">
                        <item>历史的控件修复标记点索引为 float.NaN 时引发异常的bug。</item>
                    </list>
                </revision>
                <revision date="2019-12-22" version="2.2.7" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslBottle: Wpf版本的控件修复BottleTag失败的bug。</item>
                        <item>HslSignature: 新增签名控件，支持设置颜色，背景，画笔粗细，支持winform，wpf，安卓的版本。</item>
                        <item>HslCircularGauge: Wpf版本新增仪表盘控件，感谢埃及朋友abdalaMask（QQ：3165336899）提供支持，详细功能见demo。</item>
                    </list>
                </revision>
                <revision date="2019-12-28" version="2.2.8" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslDigitalInput: 数字键盘控件修复一些逻辑bug，增加掩码功能，这样就可以用于密码输入。</item>
                        <item>HslCircularGauge: wpf版本的仪表盘控件优化，动画效果优化，更加流畅。</item>
                        <item>wpf: Wpf版本新增七段数码管和十六段数码管的控件，感谢埃及朋友abdalaMask（QQ：3165336899）提供支持，详细功能见demo。</item>
                        <item>wpf: Wpf版本角度仪表盘控件，感谢埃及朋友abdalaMask（QQ：3165336899）提供支持，详细功能见demo。</item>
                    </list>
                </revision>
                <revision date="2020-3-8" version="2.2.9" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslPanel：新增一个增强型panel组件，继承系统panel，支持渐变色背景。</item>
                        <item>HslBagFilter: 新增一个袋式除尘器控件。适用winform，安卓，wpf</item>
                    </list>
                </revision>
                <revision date="2020-3-17" version="2.3.0" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslStatusManagement：对每个的点阵信息，支持设置消息提示，当光标挪动到点阵上，提示信息文本。</item>
                        <item>HslTruck: 新增一个卡车控件，支持两种状态，方向变换，升降功能，目前仅支持winform。</item>
                    </list>
                </revision>
                <revision date="2020-4-12" version="2.3.1" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslIndicator: WPF版本的控件添加指示灯控件，感谢埃及朋友支持。</item>
                        <item>hslcurvehistory：历史曲线控件的光标移动时X轴提示的信息支持自定义格式化操作。</item>
                        <item>hslcurvehistory：历史曲线控件的光标移动到边界时，x轴提示信息显示不会遮挡。</item>
                        <item>annotation：winform所有的控件增加设计时的注释信息，方便大家选取。</item>
                        <item>HslDialPlate：winform增加一个新的流量表控件。</item>
                    </list>
                </revision>
                <revision date="2020-5-10" version="2.3.2" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslDialPlate: 安卓版本添加流量表控件。</item>
                        <item>hslcurve：实时曲线控件的样式，从是否平滑改为，线段，曲线，阶梯，阶梯不带竖线。</item>
                        <item>hslcurvehistory：历史曲线控件的样式，从是否平滑改为，线段，曲线，阶梯，阶梯不带竖线。</item>
                        <item>hslcurve：实时曲线控件增加一个属性PointsRadius，数据点的大小，默认为0，不显示，值越大，显示的数据点越大。</item>
                        <item>hslcurvehistory：历史曲线控件增加一个属性PointsRadius，数据点的大小，默认为0，不显示，值越大，显示的数据点越大。</item>
                    </list>
                </revision>
                <revision date="2020-6-30" version="2.3.3" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslCurveHistory: 修复在阶跃显示模式下，点位提示不正确的bug。</item>
                        <item>HslBattery：增加一个WPF版本的电池控件，动画更加流畅。</item>
                    </list>
                </revision>
                <revision date="2020-7-14" version="2.4.0" author="Richard.Hu">
                    <list type="bullet">
                        <item>NoBoundaryControl: 添加一个基础的无界控件，支持缩放，拖拽，没有任何的其他实现，可以作为基础控件。</item>
                        <item>HslChinaMap: 添加一个中国地图的控件，支持省份标记，地级市标记，支持任意的城市画线操作。</item>
                        <item>HslArrow：增加一个WPF版本的箭头控件，虽然wpf本身支持旋转，但仍然实现方向可调节。</item>
                        <item>普通VIP群的激活码，支持的连续运行时间调整为3个月，软件重启重新计时。</item>
                    </list>
                </revision>
                <revision date="2020-7-17" version="2.4.1" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslChinaMap: 中国地图完善缺失的城市信息，添加了新疆的几个城市，添加了青海的自治州，添加了宁夏的地级市。</item>
                        <item>HslChinaMap: 新增一个画图的API方法，允许用户把自定义的image绘制到地图的指定区域，参考demo的天气预报。</item>
                        <item>HslGanttChart: WPF版本的控件添加一个甘特图的控件。</item>
                        <item>HslBattery: WPF版本的电池控件修复一个显示的bug信息。</item>
                        <item>HslControls企业授权费：3900rmb，一次付费，终身授权，开放源代码，支持后续更新。</item>
                    </list>
                </revision>
                <revision date="2020-7-28" version="2.4.2" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslPipeLine: 修复更改端口样式的时候，底图不修改的BUG。</item>
                        <item>HslPipeLineThree: 新增一个三通的管道，可以自由的控制线条流动信息，控制任意的线条是否显示。</item>
                        <item>WPF: WPF版本的控件添加一个三通管道的控件。</item>
                        <item>WPF: WPF版本的控件添加一个状态集的控件。</item>
                        <item>HslControls企业授权费：3900rmb，一次付费，终身授权，开放源代码，支持后续更新。</item>
                    </list>
                </revision>
                <revision date="2020-9-3" version="2.4.3" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslTable: 新增一个表格控件，可以用来简单的显示不需要交互的数据信息。</item>
                        <item>HslControls企业授权费：3900rmb，一次付费，终身授权，开放源代码，支持后续更新。</item>
                    </list>
                </revision>
                <revision date="2020-9-25" version="2.5.0" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslTable: 表格控件修复字符串数组长度不够时导致的bug。</item>
                        <item>HslTable: 表格控件列标题支持设置显示或是隐藏。</item>
                        <item>HslPanelHead: 支持设置不显示边框，优化边缘显示。</item>
                        <item>HslPipeLine: 管道控件的蚂蚁线的长度支持可调整。</item>
                        <item>HslTitle: WPF版本新增HslTitle，以及相关的demo</item>
                        <item>HslSwitch: 新增ChangeSwitchStatus方法，修改控件的状态，而不触发状态改变的事件。</item>
                        <item>HslControls企业授权费：3900rmb，一次付费，终身授权，开放源代码，支持后续更新。</item>
                    </list>
                </revision>
                <revision date="2020-11-16" version="2.5.1" author="Richard.Hu">
                    <list type="bullet">
                        <item>hslcurve: 修复实时曲线控件，曲线样式和实际样子不匹配的bug。</item>
                        <item>gauge: 两个仪表盘控件支持显示值的格式化操作，可以控制显示的小数点位数。</item>
                        <item>hslhistorycurve: 历史曲线控件支持手动更改曲线的颜色，样式，格式化内容。</item>
                        <item>HslCurve: 实时曲线的刻度字体可以自由的设置。</item>
                        <item>HslGauge: 仪表盘的报警信息可以设置为扇形。</item>
                        <item>HslHistoryCureve: onCurveRangeSelect事件签名修改，可以动态修改一些显示的信息。</item>
                        <item>HslControls企业授权费：4000rmb，一次付费，终身授权，开放源代码，支持后续更新。</item>
                    </list>
                </revision>
                <revision date="2021-1-28" version="2.5.2" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslLanternAlarm: 修复IsAlarm设置为false的时候，信号灯颜色可能仍然为报警色的bug。</item>
                        <item>HslCurve和HslCurveHistory: 曲线控件的添加辅助线的方法返回辅助线对象本身，方便动态修改这个辅助线信息。</item>
                        <item>HslCurveHistory: 当鼠标点击曲线名称隐藏曲线的操作的时候，增加隐藏提示信息曲线数据值的操作。</item>
                        <item>HslCurve: 修复在多次 SetCurve 的时候，数组长度不一致的情况导致绘图异常的bug。</item>
                        <item>WPF:  新增HslThermometer 温度计控件信息。</item>
                        <item>HslHistoryCureve: onCurveRangeSelect事件签名修改，可以动态修改一些显示的信息。</item>
                        <item>HslControls企业授权费：4000rmb，一次付费，终身授权，开放源代码，支持后续更新。</item>
                    </list>
                </revision>
                <revision date="2021-2-2" version="2.5.3" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslCurve: 修复实时曲线当 IntervalAbscissaText 属性设置为负数时，会导致 vs 崩溃的bug。</item>
                        <item>HslLedDisplay: LED显示控件的小数点大小支持动态设置，默认为2。</item>
                        <item>HslCurveHistory: 历史曲线控件大优化，四个边宽度可调整，滚动条重新设计，支持超大数据量，占内存低。</item>
                        <item>HslCurveHistory: SetCurveVisible支持设置曲线可见，设置曲线及提示是否隐藏。</item>
                        <item>HslCurveHistory: 支持滚轮的放大缩小，支持横向的放大缩小，可以手动设置禁用滚轮。</item>
                        <item>HslControls企业授权费：4200rmb，一次付费，终身授权，开放源代码，支持后续更新。</item>
                    </list>
                </revision>
                <revision date="2021-2-6" version="2.5.4" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslCurveHistory: 底部的高度部分改为 ButtomHeight ，增加专门的 ScrollHeight 可以设置滚动条的高度，这样X轴时间可以有空间多行显示。</item>
                        <item>HslCurveHistory: 使用了局部切片绘制的技术，大大提高了大数据量的绘制性能，目前测试10条曲线，每条10万点。</item>
                        <item>HslCurveHistory: 支持使用按压滚轮来对曲线进行左右移动，鼠标中间滚轮按下，移动即可平滑左右移动，直到松开为止。</item>
                        <item>HslCurveHistory: 横轴的时间格式化不依赖系统设置，可以随意的根据自己的需求格式化。</item>
                        <item>HslCurveHistory: 当曲线放大15倍以上时，曲线上的点位信息会显示出来，当然你也可以强制 PointsRadius 为0，不显示。</item>
                        <item>HslControls企业授权费：4200rmb，一次付费，终身授权，开放源代码，支持后续更新。</item>
                    </list>
                </revision>
                <revision date="2021-2-23" version="2.5.5" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslCurveHistory: 清空曲线的数据的方法里复位当前的滚动条位置。</item>
                        <item>HslCurveHistory: 修复数量量在20万个以上，放大倍数在32倍时，部分的图形不限制的bug。</item>
                        <item>HslCurveHistory: 修复在20万数据量以上，进行放大缩小时，滚动条跳变位置不正确的bug。</item>
                        <item>HslCurveHistory: 曲线样式增加点点线，虚线，长虚线，以及对应的曲线版本。也适用于HslCurve实时曲线，wpf版本的实时曲线。</item>
                        <item>HslControls企业授权费：4200rmb，一次付费，终身授权，开放源代码，支持后续更新。</item>
                    </list>
                </revision>
                <revision date="2021-3-4" version="2.5.6" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslButton: 圆角支持0，按钮选中的颜色可以设置，通过SelectColor来设置。</item>
                        <item>HslCurveHistory: 在数据量很大的时候，滚轮移动曲线时，修复滚动条跳变0的bug。</item>
                        <item>HslCurveHistory: 修复在40万数据量以上，32倍放大条件下，X轴坐标轴消失的BUG。</item>
                        <item>HslCurveHistory: 曲线控件右上角显示了缩放的倍数，滚动条支持点击任意位置快速跳转曲线。</item>
                        <item>HslCurveHistory: 优化多个曲线控件同步动作的功能，只需要调用一个方法：SetSyncHslCurveHistory 就可以跟随另一个曲线控件动作。</item>
                        <item>HslControls企业授权费：4200rmb，一次付费，终身授权，开放源代码，支持后续更新。</item>
                    </list>
                </revision>
                <revision date="2021-4-26" version="2.5.7" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslCircularGauge：仪表盘控件修复DialTextFontSize属性设置没有反应的bug.</item>
                        <item>WPF: 修复wpf版本的实时曲线控件的文本受全局样式影响显示不一致的bug。</item>
                        <item>HslCurve: WPF版本的实时曲线支持曲线中断操作，当数据点值为 float.NaN 时，不进行绘制中间区段。</item>
                        <item>HslCurve: 安卓版本的实时曲线支持曲线中断操作，当数据点值为 float.NaN 时，不进行绘制中间区段。</item>
                        <item>HslLabel: 新增一个背景渐变色，可设置颜色的Label标签控件，需要将 AutoSize设置为 False。</item>
                        <item>HslControls企业授权费：4200rmb，一次付费，终身授权，开放源代码，支持后续更新。</item>
                    </list>
                </revision>
                <revision date="2021-5-23" version="2.6.0" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslPipeLine: 修复管道控件在设置 EdgeColor 属性和 LineCenterColor 属性时设计界面不发生变化的bug。</item>
                        <item>HslCurveHistory: 优化ScrollToRight方法，在滚动条挪动到最后之前，重新计算滚动条大小，可以消除实时刷新数据时抖动的问题。</item>
                        <item>HslCurveHistory: 新增多个Y轴的支持，通过属性ReferenceAxis来修改，然后设置曲线时，选择参考轴，详细参考demo。</item>
                        <item>HslCurveHistory: 当鼠标挪动时，在底部显示的当前的时间的矩形的宽度可调节，修改 HoverDateTimeWidth ，默认100。</item>
                        <item>HslControls企业授权费：4200rmb，一次付费，终身授权，开放源代码，支持后续更新。</item>
                    </list>
                </revision>
                <revision date="2021-10-4" version="2.7.0" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslCurveHistory: 新增属性RenderInvertedTriangle，可以控制历史曲线的纵轴的倒三角是否显示。</item>
                        <item>HslCurveHistory: 新增属性RenderScaleInfo，用于控制是否显示缩放的倍率信息。</item>
                        <item>HslButton: 优化圆角代码，现在四个角分别都支持选择是否圆角操作，方便自定义按钮样式。</item>
                        <item>hslbadge: 新增HSL的徽章显示控件，可以用来显示一些键值数据，支持左右两部分单独使用，右部分可以当按钮使用。</item>
                        <item>HslCurveHistory: 删除属性ScrollEnable，新增ScaleMode缩放模式属性，支持不缩放，X轴缩放，XY轴同时缩放，先X轴后Y轴缩放。</item>
                        <item>HslControls企业授权费：4200rmb，一次付费，终身授权，开放源代码，支持后续更新。</item>
                    </list>
                </revision>
                <revision date="2022-1-23" version="2.8.0" author="Richard.Hu">
                    <list type="bullet">
                        <item>HMILedSingle: 修改继承改自 UserControl，底色支持透明色，即使底色是渐变色。</item>
                        <item>HslCurve: 修复WPF版本的hslcurve实时曲线控件在IsAbscissaStrech=true时，显示右坐标轴数据时，都显示为0的bug。</item>
                        <item>HslBarChart: WPF版本的柱状图控件支持了动画效果，使用属性UseAnimation可以决定是否开启动画，AnimationTime设置动画时间。</item>
                        <item>HslLabelCombo: Winform版本新增组合标签的控件信息，可以用来显示一些值，单位的数据，支持箭头显示。</item>
                        <item>HslMarkText点位标记的类支持Image图片，可以在指定点位绘制图片信息，实时曲线和历史曲线都支持，显示位置也进行了优化。</item>
                        <item>HslCurveHistory: 历史曲线控件还支持直接添加局部图片，AddMarkImage方法增加，RemoveMarkImage方法移除。</item>
                        <item>HslCurveHistory: 历史曲线控件绘图优化，支持背景设置透明，例如父控件Panel设置自定义的图片，就可以实现任意的背景。</item>
                        <item>HslCurveHistory: 所有坐标轴的颜色可以自定义，左坐标轴和右坐标轴机制优化，注意：删除了原来的属性，导致历史曲线不兼容升级。</item>
                        <item>HslControls企业授权费：4200rmb，一次付费，终身授权，开放源代码，支持后续更新。</item>
                    </list>
                </revision>
                <revision date="2022-4-11" version="2.9.0" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslPieChart: 饼图控件的布局调整为自动居中，新增两个属性用于控制饼图的图形效果，StartAngle起始角度，RotateDirection数据旋转方向，边框颜色可修改。</item>
                        <item>HslBadge: 修复徽章控件dock样式为fill时，导致绘制失败，不显示图形的bug。</item>
                        <item>HslBarChart: 柱状图控件支持同时显示多种柱状图信息，方便进行对比，比如上周的每天数据，和本周的每天数据的对比操作，wpf版本的也进行了更新支持。</item>
                        <item>HslCurveHistory: 曲线样式新增截面样式，也就是曲线下方的区域使用透明的曲线颜色填充，实时曲线和历史曲线均支持。</item>
                        <item>个人赞助240加入VIP群，获得激活码激活后有效时间从1年调整为3年。</item>
                        <item>HslControls企业授权费：4200rmb，一次付费，终身授权，开放源代码，支持后续更新。</item>
                    </list>
                </revision>
                <revision date="2022-5-30" version="3.0.0" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslCurveHistory: 在历史曲线控件双击固定光标后，鼠标移出界面，固定的光标线现在仍然显示，方便截图等操作。</item>
                        <item>HslCurveHistory: X轴坐标显示的文本及光标移动显示的X轴文本消息高度自适应，文本对齐为中间对齐。</item>
                        <item>HslCurveHistory: 光标移动时，显示曲线名称及值的框框，修复往上移动时造成出届导致数据显示不全的bug。移动到超出界限时，自动固定位置</item>
                        <item>HslCurveHistory: 新增属性RightRemainWidth用来设置当前的曲线控件右侧的预留的空白宽度信息，像素为单位，默认200</item>
                        <item>HslCurveHistory: X轴和Y轴的滚轮缩放的等级可以自定义控制，通过方法SetScaleXOptions及SetScaleYOptions实现，例如缩放1，2，3，4，5倍</item>
                        <item>HslCurveHistory: 代码优化，缩小倍率小于10倍以下时，绘制选择速度优先，当数据量很多时，自动选择绘制的区域进行绘制，当10万级数据量时，无论怎么缩放依然带来丝滑般的体验。</item>
                        <item>HslCurveHistory: 历史曲线控件的方法SaveToBitmap新增一个可选的参数，是否输出当前显示界面，也就是说现在支持仅保存当前的显示界面的功能，类似截屏。</item>
                        <item>HslCurveHistory: 支持了基于曲线区间的范围的背景标记功能，实例化曲线控件的CurveRanges对象即可，支持多个区间范围的显示。如果需要移除，直接设置为NULL</item>
                        <item>HslBarChart: 设置柱状图数据类型支持double类型，修复double类型时，最大值计算错误的bug，新增属性IsAoordinateRoundInt，如果设置为Ture, Y轴自动使用整数。Wpf版本柱状图同步更新</item>
                        <item>HslControls企业授权费：4200rmb，一次付费，终身授权，开放源代码，支持后续更新。</item>
                    </list>
                </revision>
                <revision date="2022-8-21" version="3.1.0" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslProgressBar: 新增一个基于系统进度条演变来的进度条，支持显示文本，自定义文本，支持设置进度条的颜色信息。</item>
                        <item>HslBarChart: 饼图控件在调用SetDataSource方法的参数，修复输入null结果报异常的bug。</item>
                        <item>HslTitle: 看板标题控件的左右侧文字支持单独的设置颜色，文字渐变色效果微调，背景的渐变支持设置变化比例，参数属性：LeftRightCenterColorScale。</item>
                        <item>HslCurveHistory: 历史曲线控件在绘制选择区域范围的时间差时，根据时间差信息，自动匹配不同的单位显示。</item>
                        <item>HslCurveHistory: 增加图片绘制时，可选是否进行缩放，点位标记使用显示图片时，图片位置的偏移量可以自由设定。</item>
                        <item>HslCurveHistory: 修复在某些特殊情况下触发空对象的bug，Demo程序里新增一个天气预报的应用示例，并且缩放倍率自适应。</item>
                        <item>HslCurveHistory: 历史曲线控件支持隐藏额外坐标轴的显示，可以使用属性IsOtherAxisHide控制，或是界面上滚动条左边的区域点击控制。</item>
                        <item>HslCurveHistory: 历史曲线控件支持当Y轴放大到4倍以上时，Y轴的刻度线自动进行扩充倍数显示。</item>
                        <item>HslControls企业授权费：4200rmb，一次付费，终身授权，开放源代码，支持后续更新。</item>
                    </list>
                </revision>
                <revision date="2022-10-27" version="3.2.0" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslCurve: 实时曲线的坐标轴优化重新设计，支持了颜色调整，支持了单位显示，支持了数据格式化设置（不兼容更新，升级会报错）。</item>
                        <item>NoBoundaryControl: 无界控件增加ResetGraphicsTransform方法，用来重置变换，配合GraphicsTransform绘制固定位置的数据。</item>
                        <item>HslCurveHistory: 修复辅助线曲线在某些范围下触发异常的bug，历史曲线控件及实时曲线的坐标轴的数据显示支持格式化设置。</item>
                        <item>HslCurveHistory: 历史曲线控件支持了当光标移动时，在每个Y轴上显示光标对应的实时值，同时可以设置IsRenderYTip属性为false来关闭这个功能。</item>
                        <item>Demo: 修复demo界面的流量表控件点击不显示属性的bug。</item>
                        <item>HslCurveHistory: 当纵轴的格式设置为 {0:E} 时，指数部分的数据自动屏蔽前面多余的0。</item>
                        <item>HslControls企业授权费：4200rmb，一次付费，终身授权，开放源代码，支持后续更新。</item>
                    </list>
                </revision>
                <revision date="2022-12-23" version="3.3.0" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslGobang: 修复五子棋点击右侧边界发生索引超出范围的异常bug。</item>
                        <item>HslTable: 修复HslTable控件默认背景色和实际背景色不一致的bug，在某些情况下，始终显示白色底色。</item>
                        <item>HslConveyer: MoveSpeed增加注释值范围为 -9 ~ 9，修复设置巨大的情况下，绘制发生偏移的bug。</item>
                        <item>HslDialPlate: HslDialPlate仪表盘控件支持显示更小刻度的信息，如果设置透明色即不显示刻度。</item>
                        <item>HslGauge: HslGauge仪表盘控件优化，刻度显示分为10个挡。</item>
                        <item>HslHorizonBarChart: 增加横向的柱状图控件，支持设置每个数据的颜色，显示的格式化文本信息。</item>
                        <item>HslControls: 几乎所有的控件都支持了方法接口PaintHslControls( Graphics g, int width, int height)，可以自行绘制到任意的其他地方或是打印。</item>
                        <item>HslControls企业授权费：4200rmb，一次付费，终身授权，开放源代码，支持后续更新。</item>
                    </list>
                </revision>
                <revision date="2023-1-3" version="3.3.1" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslLanternSimple: 信号灯控件优化坐标变换代码，由原先的重置坐标变换修改为恢复之前的坐标变换。</item>
                        <item>HslTable: 优化表格绘制，修复在没有边界情况下绘制超出范围的小问题。</item>
                        <item>HslCurveHistory: 历史曲线控件新增属性MarkLineVisible，用来设置是否显示移动的光标辅助线。</item>
                        <item>HslCurveHistory: 新增属性MarkBorderColor用来设置光标移动时，横轴纵轴等提示的消息的边框颜色。</item>
                        <item>HslCurveHistory: 新增属性HoverBackColor用来设置光标移动时，横轴纵轴等提示的消息的背景颜色。</item>
                        <item>HslChinaMap:中国地图新增九段线标记。</item>
                        <item>HslControls企业授权费：4200rmb，一次付费，终身授权，开放源代码，支持后续更新。</item>
                    </list>
                </revision>
                <revision date="2023-4-18" version="3.3.2" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslProgressBar: HslProgressBar进度条控件新增属性UseSmallSquares，支持显示块状的进度条信息。</item>
                        <item>HslCurve: 实时曲线控件支持使用属性UpDownHeight上下边距调整，使用属性LeftRightWidth调整左右的坐标轴的边距。</item>
                        <item>HslLanternAlarm: 报警灯控件底部的高度支持使用属性ButtonHeight来自定义调整，小于1表示高度百分比，大于1表示绝对像素值。</item>
                        <item>HslBottle: 瓶子控件当顶部的文本设置为空的时候自动延展高度，底部的大小高度支持设置小于1，表示占用百分比信息。</item>
                        <item>HslAgvCar: 新增AGV小车的控件，暂时只能设置一个方向，但是在接下来另一个高级控件产品里支持移动，旋转动画。</item>
                        <item>Curve: HslCurve和HslCurveHistory曲线控件新增方法接口GetAllCurve(), 用来获取当前控件所有的曲线数据信息，从而可以进行一些更加自由的操作。</item>
                        <item>HslControls企业授权费：4200rmb，一次付费，终身授权，开放源代码，支持后续更新。</item>
                    </list>
                </revision>
                <revision date="2023-8-2" version="3.4.0" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslValves: 控制阀门方向的属性PipeLineStyle修改为 GraphDirection 枚举，现在支持上下左右四种方向朝向了(升级可能不兼容，手动修改一点代码)。</item>
                        <item>HslCurveHistory: 历史曲线控件新增滚动到指定索引的数据，指定的时间位置的功能方法，新增RenderCurveUI指定数据索引区间，或是指定时间区间的功能方法。</item>
                        <item>HslCurveHistory: 方法新增参数 RenderCurveUI( bool stretchToFull = false )， 如果传入true，可以自动铺满当前的控件界面显示。</item>
                        <item>HslCurveHistory: 调试光标移动提示框的宽度属性DataTipWidth支持如果设置小于0，则宽度自适应，如果等于0则不显示，大于0则表示绝对像素宽度。</item>
                        <item>HslCurveHistory: 新增方法AddMarkCurvePeakPoint，用来增加历史曲线控件的峰值标记功能。</item>
                        <item>HslCurveHistory: 新增事件OnScrollChanged当滚动条操作的时候，以及挪动曲线显示的时候触发，ScrollToRight直接取消文本显示模式。</item>
                        <item>HslCurveHistory: 坐标轴新增是否设置为对数坐标轴的功能，可能用于对数的方式显示曲线信息。</item>
                        <item>全新的曲线控件使用手册：http://www.hsltechnology.cn/Doc/HslControls</item>
                        <item>HslControls企业授权费：4200rmb，一次付费，终身授权，开放源代码，支持后续更新。</item>
                    </list>
                </revision>
                <revision date="2023-12-15" version="3.4.1" author="Richard.Hu">
                    <list type="bullet">
                        <item>HslDigitalInput: 数字键盘输入控件修复当使用FormHslDigitalInput的时候，设置初始化文本，但是实际仍然还是0的bug。</item>
                        <item>HslConveyer: 传送带属性HslConveyerStyle新增垂直样式，设置示例：HslConveyer.ConveyerStyle = HslConveyerStyle.Vertical</item>
                        <item>HslArrow: 新增属性ArrowBoth，表示箭头是否应用于两头，默认为 False, 如果设置为 True 则表示两个方向都有箭头。</item>
                        <item>HslArrow(WPF): WPF版本的箭头也新增属性ArrowBoth</item>
                        <item>全新的曲线控件使用手册：http://www.hsltechnology.cn/Doc/HslControls</item>
                        <item>HslControls企业授权费：4200rmb，一次付费，终身授权，开放源代码，支持后续更新。</item>
                    </list>
                </revision>
            </revisionHistory>
        </member>
        <member name="T:HslControls.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:HslControls.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:HslControls.Properties.Resources.Culture">
            <summary>
              重写当前线程的 CurrentUICulture 属性，对
              使用此强类型资源类的所有资源查找执行重写。
            </summary>
        </member>
        <member name="P:HslControls.Properties.Resources.HslCurveHistory">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
    </members>
</doc>
